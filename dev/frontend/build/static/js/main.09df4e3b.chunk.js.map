{"version":3,"sources":["img/loading.gif","logic/string.js","components/CenteredModal/index.jsx","components/CenteredAlert/index.jsx","logic/validation.js","services/const.js","services/base.js","services/session.js","services/error.js","components/LoginForm/index.jsx","components/HomeBanner/index.jsx","components/AccountEditorModal/form.jsx","services/user.js","components/AccountEditorModal/index.jsx","logic/forecast.js","components/Notification/index.jsx","components/MyAccountDropdownMenu/index.jsx","components/ChangePasswordModal/form.jsx","components/ChangePasswordModal/index.jsx","services/notify.js","components/Navbar/index.jsx","components/Avatar/index.jsx","components/MenuItem/index.jsx","components/Menu/index.jsx","components/MenuItemNoTitle/index.jsx","components/MenuNoTitle/index.jsx","components/Leftbar/index.jsx","components/ChartStatus/index.jsx","components/ChartsPanel/index.jsx","logic/indexesToChart.js","logic/calcTime.js","components/IndexCard/index.jsx","components/IndexesPanel/index.jsx","components/RoomStatus/index.jsx","components/ForecastDetail/index.jsx","components/Map/index.jsx","components/Forecasts/index.jsx","logic/datelist.js","components/AccountAdditionModal/form.jsx","components/AccountAdditionModal/index.jsx","components/AccountsPanel/index.jsx","components/FailureAlert/index.jsx","components/Loading/index.jsx","components/Unavailable/index.jsx","components/RenderWindow/index.jsx","services/iot.js","components/Header/index.jsx","index.js","img/logo.png"],"names":["module","exports","String","prototype","toProperCase","this","replace","txt","charAt","toUpperCase","substr","toLowerCase","CenteredModal","props","getTitle","bind","getBody","getFooter","rest","onSuccess","onFailure","self","Modal","centered","Header","closeButton","Title","Body","Footer","Component","CenteredAlert","title","children","style","danger","Button","onClick","onSubmit","variant","disabled","button_name","handleInput","name","value","targetValue","valid","startsWith","match","targetValid","test","PROXY","BASE","ERRORS","C1","C2","C3","C100","C101","C102","C103","C104","C105","C106","C107","C108","C200","C201","C202","C203","C300","C301","post","endpoint","body","url","fetch","method","headers","Accept","Origin","JSON","stringify","then","res","json","data","error_code","catch","get","logout","token","localStorage","getItem","CONST","LoginForm","state","username","password","usernameValid","passwordValid","isAuthening","success","response","showAlert","handleChange","handleLogin","handleLoginFailure","handleLoginSuccess","hideAlert","setState","event","target","preventDefault","req","setItem","getErrorMessage","to","Form","Label","className","href","Group","Control","type","placeholder","onChange","isInvalid","required","Feedback","Check","label","Alert","show","block","Spinner","as","animation","size","role","aria-hidden","onHide","HomeBanner","isLogin","AccountEditorForm","prev","profile","validation","controlId","defaultValue","Row","Col","first_name","last_name","email","address","gender","phone_number","list","add","user","console","log","remove","view","modify","info","modifySelf","changePassword","changeSelfPassword","lock","unlock","AccountEditorModal","prevProfile","process","change","handleFailure","obj","getChange","Object","keys","length","userServices","key","isFormValid","ButtonToolbar","nextProps","prevState","getDate","dt_txt","substring","forecastOf","date","filter","item","Notification","Fragment","Popover","markAllAsRead","Content","map","notify","idx","seen","handleSelect","Image","roundedCircle","src","logo","message","time","MyAccountDropdownMenu","isLogout","handleLogout","sessionServices","clear","showProfileEditorModal","showChangePasswordModal","Dropdown","Divider","ChangePasswordForm","cfPasswordValid","ChangePasswordModal","cfPassword","updating","handleSubmit","alert","form","active","Navbar","selectedNotify","showNotifyAlert","showProfileEditor","showChangePassword","showFailAlert","hideProfileEditorModal","hideChangePasswordModal","handleFetchNotifySuccess","handleModifyProfileSuccess","handleSelectNotify","hideNotifyAlert","fetchNotifications","newList","noti","refs","notifyOverlay","hide","profileOverlay","notifyServices","notifications","propName","push","reverse","unseen","n","OverlayTrigger","rootClose","trigger","placement","ref","overlay","Badge","pill","Avatar","alt","MenuItem","selected","link","changeWindow","nameItem","icon","Menu","ButtonGroup","vertical","menuItems","MenuItemNoTitle","MenuNoTitle","Leftbar","nameWindow","getCurrentWindow","path","window","location","find","includes","finalMenu","isAdmin","slice","avatar","ChartStatus","series","theme","categories","Card","options","chart","stacked","height","zoom","enabled","autoScaleYaxis","toolbar","tools","download","selection","zoomin","zoomout","pan","reset","customIcons","autoSelected","xaxis","labels","width","ChartsPanel","Temperature","color","Humidity","AQI","mode","monochrome","shadeTo","shadeIntensity","result","indexes2Chart","LASTEST","Date","currentTime","getTime","index","currentDate","currentData","d","tmpDate","getHours","getMinutes","toISOString","toLocaleTimeString","STEP","convertIndexesToChart","calcTimeUpdated","past","current","deltaTime","hours","minutes","getSeconds","seconds","Math","floor","toString","IndexCard","interval","setInterval","compareTime","clearInterval","timeUpdate","text","changeNotify","handUpdateData","IndexesPanel","indexes","RoomStatus","ForecastDetail","Table","responsive","hover","weather","description","ktemp","main","temp","round","humidity","pressure","wind","deg","speed","SimpleMap","bootstrapURLKeys","defaultCenter","center","defaultZoom","LIMIT","ForecastsWindow","city","CITY_LIST","sort","a","b","select","searching","expand","myRef","React","createRef","filterCity","handleSearch","scroll","scrollIntoForecast","cityId","fetchWeather","id","option","scrollIntoView","behavior","defaultLocation","lat","lng","onInputChange","country","Map","coord","lon","Accordion","out","forEach","indexOf","getDateList","getDay","getDayFromDate","Toggle","eventKey","handleExpand","Collapse","savePdfFile","AccountAdditionForm","AccountAdditionModal","DIRECTION","NONE","DOWN","UP","AccountsPanel","locking_state","action","sortIcon","fetchLockingState","fetchDeleteAccount","handleChangeFilter","edit","changePswd","callback","onDeleteSuccess","onLockSuccess","onUnlockSuccess","property","prevDirect","searchInput","default","searchSelect","op","striped","scope","sortBy","FormCheck","custom","Input","checked","handleClickLock","data-tip","handleClickProfile","place","effect","handleClickPassword","handleClickRemove","visible","isProcess","onModifySuccess","onAddSuccess","onChangePswdSuccess","FailureAlert","Heading","Loading","loading","Unavailable","RenderWindow","iotCurrent","iotDatas","users","filtered","showEditor","showAddition","showPassword","fetchIoTChartSuccess","fetchIoTCurrentSuccess","fetchUsersSuccess","handleFetchIoTDatasSuccess","handleFetchIoTDatasFailed","handleFetchIoTCurrentSuccess","handleFetchIoTCurrentFailed","handleFetchUsersSuccess","handleFetchUsersFailure","handleAddUserSuccess","handleLockUserSuccess","handleUnlockUserSuccess","changeLockingState","handleDeleteUserSuccess","handleModifyUserSuccess","fetchUserList","showAccountEditorModal","hideAccountEditorModal","hideAccountAdditionModal","showAccountAdditionModal","updateFilter","fetchIoTDatas","fetchIoTCurrent","prevProps","handleNoFetch","newUser","direct","sorted","fetchSuccess","fetchProfileSuccess","exact","allow","Forecasts","failureResponse","handleFetchProfileSuccess","handleFetchProfileFailure","fetchProfile","ReactDOM","render","document","getElementById"],"mappings":"iFAAAA,EAAOC,QAAU,IAA0B,qC,sVCA3CC,OAAOC,UAAUC,aAAe,WAC9B,OAAOC,KAAKC,QAAQ,IAAK,KAAKA,QAAQ,UAAU,SAASC,GACvD,OAAOA,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,OAAO,GAAGC,mB,mUCkCxCC,E,YA/Bb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKE,UAAY,EAAKA,UAAUF,KAAf,gBAJA,E,kLAaT,IAAD,EACyCV,KAAKQ,MAAdK,GADhC,EACCC,UADD,EACYC,UADZ,EACuBC,KADvB,iDAEP,OACE,kBAACC,EAAA,EAAD,iBAAWJ,EAAX,CAAiBK,UAAQ,IACvB,kBAACD,EAAA,EAAME,OAAP,CAAcC,aAAW,GACvB,kBAACH,EAAA,EAAMI,MAAP,KAAcrB,KAAKS,aAErB,kBAACQ,EAAA,EAAMK,KAAP,KAAatB,KAAKW,WAClB,kBAACM,EAAA,EAAMM,OAAP,KAAevB,KAAKY,kB,GAtBAY,aC8BbC,E,YA7Bb,WAAYjB,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,SAAW,EAAKA,SAASC,KAAd,gBAChB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKE,UAAY,EAAKA,UAAUF,KAAf,gBAJA,E,wEAQjB,OAAOV,KAAKQ,MAAMkB,Q,gCAIlB,OAAO1B,KAAKQ,MAAMmB,W,kCAIlB,IAAMC,EAAQ5B,KAAKQ,MAAMqB,OAAS,SAAW,UAC7C,OACE,kBAACC,EAAA,EAAD,CACEC,QAAS/B,KAAKQ,MAAMwB,SACpBC,QAASL,EACTM,SAAUlC,KAAKQ,MAAM0B,UAEpBlC,KAAKQ,MAAM2B,iB,GAxBQ5B,GCJb,SAAS6B,EAAYC,EAAMC,GAA4B,IAArBC,EAAoB,uDAAN,KACzDC,EAAQ,KAEZ,GAAIF,EAAMG,WAAW,KAAM,OAAO,EAElC,OAAQJ,GACN,IAAK,WACHG,IAAQF,EAAMI,MAAM,+BACpB,MACF,IAAK,WACHF,IAAQF,EAAMI,MAAM,+BACpB,MACF,IAAK,aACH,IAAIC,IAAcL,EAAMI,MAAM,+BAG9BF,EAAQF,IAAUC,GAAeI,EACjC,MACF,IAAK,YACL,IAAK,aACHH,IAAQF,EAAMI,MAAM,wBACpB,MACF,IAAK,QACHF,IAAQ,4CAA4CI,KAAKN,GAGzD,MACF,IAAK,eACHE,IAAQF,EAAMI,MACZ,8DAGWJ,EAAMG,WAAW,KAC9B,MACF,IAAK,UACHD,IAAQF,EAAMI,MAAM,mCACpB,MACF,QACE,OAAO,KAGX,OAAOF,ECzCF,IAAMK,EAAQ,uCACRC,EAAO,uBAKPC,EAAS,CACpBC,GAAI,gBACJC,GAAI,uBACJC,GAAI,wCAEJC,KAAM,sBACNC,KAAM,yBACNC,KAAM,wBACNC,KAAM,4BACNC,KAAM,kBACNC,KAAM,+BACNC,KAAM,oBACNC,KAAM,wBACNC,KAAM,iBAENC,KAAM,+BACNC,KAAM,yBACNC,KAAM,4BACNC,KAAM,qCAENC,KAAM,oBACNC,KAAM,wBCzBKC,EAAO,SAACC,EAAUC,EAAMtD,EAAWC,GAC9C,IAAMsD,EAAG,UAAMxB,GAAN,OAAcC,EAAd,gBAA0BqB,GAEnCG,MAAMD,EAAK,CACTE,ODHgB,OCIhBC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChBC,OAAQ,oBAEVN,KAAMO,KAAKC,UAAUR,KAEpBS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACoB,IAApBA,EAAKC,WAAkBnE,EAAUkE,EAAMZ,GACtCrD,EAAUiE,MAEhBE,MAAMnE,IAGEoE,EAAM,SAAChB,EAAUrD,EAAWC,GACvC,IAAMsD,EAAG,UAAMxB,GAAN,OAAcC,GAAd,OAAqBqB,GAE9BG,MAAMD,EAAK,CACTE,ODtBe,MCuBfC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChBC,OAAQ,sBAGTG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACoB,IAApBA,EAAKC,WAAkBnE,EAAUkE,GAChCjE,EAAUiE,MAEhBE,MAAMnE,IC3BEqE,EAAS,WACpB,IAAMhB,EAAO,CACXiB,MAAOC,aAAaC,QAAQ,UAG9BrB,EAAK,UAAWE,GAAM,gBCdT,G,OAAA,SAASU,GACtB,OAAKA,GAAQA,EAAIG,WAGf,eAAQH,EAAIG,WAAZ,MAA6BO,EAAA,WAAiBV,EAAIG,aAHhB,kBCmLvBQ,E,YAxKb,WAAYjF,GAAQ,IAAD,8BACjB,4CAAMA,KAEDkF,MAAQ,CACXC,SAAU,KACVC,SAAU,KACVC,cAAe,KACfC,cAAe,KACfC,YAAa,KACbC,QAAS,KACTC,SAAU,KACVC,WAAW,GAGb,EAAKC,aAAe,EAAKA,aAAazF,KAAlB,gBACpB,EAAK0F,YAAc,EAAKA,YAAY1F,KAAjB,gBAEnB,EAAK2F,mBAAqB,EAAKA,mBAAmB3F,KAAxB,gBAC1B,EAAK4F,mBAAqB,EAAKA,mBAAmB5F,KAAxB,gBAE1B,EAAK6F,UAAY,EAAKA,UAAU7F,KAAf,gBACjB,EAAKwF,UAAY,EAAKA,UAAUxF,KAAf,gBArBA,E,yEAyBjBV,KAAKwG,SAAS,CAAEN,WAAW,M,kCAI3BlG,KAAKwG,SAAS,CAAEN,WAAW,M,mCAGhBO,GAAQ,IAAD,IACMA,EAAMC,OAAtBrE,EADU,EACVA,KAAMC,EADI,EACJA,MAERE,EAAQJ,EAAYC,EAAMC,GAEhCtC,KAAKwG,UAAL,mBACGnE,EAAOC,GADV,cAEGD,EAAO,QAAUG,GAFpB,M,kCAMgBiE,G,yEAChBA,EAAME,iBAEN3G,KAAKwG,SAAS,CACZT,aAAa,I,oBF3DGJ,EE+DhB3F,KAAK0F,MAAMC,SF/DeC,EEgE1B5F,KAAK0F,MAAME,SFhEyB9E,EEiEpCd,KAAKsG,mBFjE0CvF,EEkE/Cf,KAAKqG,wBF5DTnC,EAAK,SALQ,CACXyB,WACAC,YAGmB9E,EAAWC,K,iCANb,IAAC4E,EAAUC,EAAU9E,EAAWC,I,sDEsEhC+D,EAAK8B,GACtBtB,aAAauB,QAAQ,QAAS/B,EAAIO,OAClCrF,KAAKwG,SAAS,CAAER,SAAS,EAAMD,aAAa,M,yCAG3BjB,GACjB,IAAMmB,EAAWa,EAAgBhC,GAEjC9E,KAAKwG,SAAS,CAAER,SAAS,EAAOD,aAAa,EAAOE,e,+BAIpD,OAAIjG,KAAK0F,MAAMM,QAAgB,kBAAC,IAAD,CAAUe,GAAG,eAG1C,kBAACC,EAAA,EAAD,CAAMhF,SAAUhC,KAAKoG,aACnB,kBAACY,EAAA,EAAKC,MAAN,CAAYC,UAAU,QACpB,uCACA,uFACwD,IACtD,uBAAGC,KAAK,YAAR,aAGJ,kBAACH,EAAA,EAAKI,MAAN,KACE,kBAACJ,EAAA,EAAKC,MAAN,iBACA,kBAACD,EAAA,EAAKK,QAAN,CACEC,KAAK,OACLC,YAAY,YACZlF,KAAK,WACLmF,SAAUxH,KAAKmG,aACfsB,WAAwC,IAA7BzH,KAAK0F,MAAMG,cACtB6B,UAAQ,IAEV,kBAACV,EAAA,EAAKK,QAAQM,SAAd,CAAuBL,KAAK,WAA5B,uFAKF,kBAACN,EAAA,EAAKI,MAAN,KACE,kBAACJ,EAAA,EAAKC,MAAN,iBACA,kBAACD,EAAA,EAAKK,QAAN,CACEC,KAAK,WACLC,YAAY,YACZlF,KAAK,WACLmF,SAAUxH,KAAKmG,aACfsB,WAAwC,IAA7BzH,KAAK0F,MAAMI,cACtB4B,UAAQ,IAEV,kBAACV,EAAA,EAAKK,QAAQM,SAAd,CAAuBL,KAAK,WAA5B,0EAKF,kBAACN,EAAA,EAAKI,MAAN,KACE,kBAACJ,EAAA,EAAKY,MAAN,CAAYN,KAAK,WAAWO,MAAM,iBAGpC,kBAACb,EAAA,EAAKI,MAAN,KACE,kBAACU,EAAA,EAAD,CAAO7F,QAAQ,aAAa8F,MAA6B,IAAvB/H,KAAK0F,MAAMM,SAC3C,0DAEE,6BACChG,KAAK0F,MAAMO,SAHd,OAOJ,kBAACe,EAAA,EAAKI,MAAN,KACE,kBAACtF,EAAA,EAAD,CACEwF,KAAK,SACLU,OAAK,EACL9F,UACGlC,KAAK0F,MAAMI,gBACX9F,KAAK0F,MAAMG,eACZ7F,KAAK0F,MAAMK,aAGZ/F,KAAK0F,MAAMK,YACV,6BACE,kBAACkC,EAAA,EAAD,CACEC,GAAG,OACHC,UAAU,SACVC,KAAK,KACLC,KAAK,SACLC,cAAY,SACX,IAPL,cAWA,YAKN,uBAAGnB,KAAK,eAAepF,QAAS/B,KAAKkG,WAArC,yBAGA,kBAAC,EAAD,CACE6B,KAAM/H,KAAK0F,MAAMQ,UACjBqC,OAAQvI,KAAKuG,UACb7E,MAAM,wBACNS,YAAY,KACZH,SAAUhC,KAAKuG,WALjB,6D,GA3JgB/E,aCmCTgH,G,mBAzCb,WAAYhI,GAAQ,IAAD,8BACjB,4CAAMA,KACDkF,MAAQ,CACX+C,QAAS,KACTvC,WAAW,GAJI,E,iFASjB,IAAMb,EAAQC,aAAaC,QAAQ,SACnCvF,KAAKwG,SAAS,CAAEiC,QAAmB,OAAVpD,M,+BAIzB,OAA2B,IAAvBrF,KAAK0F,MAAM+C,QAAyB,kBAAC,IAAD,CAAU1B,GAAG,eAGnD,6BAASG,UAAU,oBACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,sCACb,yBAAKA,UAAU,6EACb,yBAAKA,UAAU,IACb,yBAAKA,UAAU,SACb,qCACQ,0BAAMA,UAAU,aAAhB,QADR,QAKF,yBAAKA,UAAU,cACb,kBAAC,EAAD,SAIN,yBAAKA,UAAU,8B,GAlCF1F,c,qDC6HVkH,E,iLA9HX,IAAIC,EAAO3I,KAAKQ,MAAMoI,QACdC,EAAe7I,KAAKQ,MAApBqI,WAER,OAAKF,EAGD,kBAAC3B,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKI,MAAN,CAAY0B,UAAU,YACpB,kBAAC9B,EAAA,EAAKC,MAAN,iBACA,kBAACD,EAAA,EAAKK,QAAN,CACEC,KAAK,OACLjF,KAAK,WACL0G,aAAcJ,EAAKhD,SACnBzD,UAAQ,KAGZ,kBAAC8E,EAAA,EAAKgC,IAAN,KACE,kBAACC,EAAA,EAAD,KACE,kBAACjC,EAAA,EAAKI,MAAN,CAAY0B,UAAU,cACpB,kBAAC9B,EAAA,EAAKC,MAAN,mBACA,kBAACD,EAAA,EAAKK,QAAN,CACEC,KAAK,OACLjF,KAAK,aACL0G,aAAcJ,EAAKO,WACnB1B,SAAUxH,KAAKQ,MAAM2F,aACrBsB,WAAqC,IAA1BoB,EAAWK,aAExB,kBAAClC,EAAA,EAAKK,QAAQM,SAAd,CAAuBL,KAAK,WAA5B,wBAKJ,kBAAC2B,EAAA,EAAD,KACE,kBAACjC,EAAA,EAAKI,MAAN,CAAY0B,UAAU,aACpB,kBAAC9B,EAAA,EAAKC,MAAN,kBACA,kBAACD,EAAA,EAAKK,QAAN,CACEC,KAAK,OACLjF,KAAK,YACL0G,aAAcJ,EAAKQ,UACnB3B,SAAUxH,KAAKQ,MAAM2F,aACrBsB,WAAoC,IAAzBoB,EAAWM,YAExB,kBAACnC,EAAA,EAAKK,QAAQM,SAAd,CAAuBL,KAAK,WAA5B,wBAMN,kBAACN,EAAA,EAAKI,MAAN,CAAY0B,UAAU,SACpB,kBAAC9B,EAAA,EAAKC,MAAN,cACA,kBAACD,EAAA,EAAKK,QAAN,CACEC,KAAK,QACLjF,KAAK,QACL0G,aAAcJ,EAAKS,MACnB5B,SAAUxH,KAAKQ,MAAM2F,aACrBsB,WAAgC,IAArBoB,EAAWO,QAExB,kBAACpC,EAAA,EAAKK,QAAQM,SAAd,CAAuBL,KAAK,WAA5B,0BAIF,kBAACN,EAAA,EAAKI,MAAN,CAAY0B,UAAU,WACpB,kBAAC9B,EAAA,EAAKC,MAAN,gBACA,kBAACD,EAAA,EAAKK,QAAN,CACEC,KAAK,OACLjF,KAAK,UACL0G,aAAcJ,EAAKU,QACnB7B,SAAUxH,KAAKQ,MAAM2F,aACrBsB,WAAkC,IAAvBoB,EAAWQ,UAExB,kBAACrC,EAAA,EAAKK,QAAQM,SAAd,CAAuBL,KAAK,WAA5B,oBAIF,kBAACN,EAAA,EAAKgC,IAAN,KACE,kBAACC,EAAA,EAAD,KACE,kBAACjC,EAAA,EAAKI,MAAN,CAAY0B,UAAU,UACpB,kBAAC9B,EAAA,EAAKC,MAAN,eACA,kBAACD,EAAA,EAAKK,QAAN,CACEa,GAAG,SACH7F,KAAK,SACL0G,aAAcJ,EAAKW,OACnB9B,SAAUxH,KAAKQ,MAAM2F,cAErB,wCACA,0CACA,4CAIN,kBAAC8C,EAAA,EAAD,KACE,kBAACjC,EAAA,EAAKI,MAAN,CAAY0B,UAAU,gBACpB,kBAAC9B,EAAA,EAAKC,MAAN,qBACA,kBAACD,EAAA,EAAKK,QAAN,CACEC,KAAK,OACLjF,KAAK,eACL0G,aAAcJ,EAAKY,aACnB/B,SAAUxH,KAAKQ,MAAM2F,aACrBsB,WAAuC,IAA5BoB,EAAWU,eAExB,kBAACvC,EAAA,EAAKK,QAAQM,SAAd,CAAuBL,KAAK,WAA5B,0BAKJ,kBAAC2B,EAAA,EAAD,KACE,kBAACjC,EAAA,EAAKI,MAAN,CAAY0B,UAAU,QACpB,kBAAC9B,EAAA,EAAKC,MAAN,aACA,kBAACD,EAAA,EAAKK,QAAN,CACEa,GAAG,SACH7F,KAAK,OACL0G,aAAcJ,EAAKN,KACnBb,SAAUxH,KAAKQ,MAAM2F,aACrBjE,SAAUlC,KAAKQ,MAAMQ,MAErB,4CACA,8CAjHI,iD,GALUQ,aCDnBgI,EAAO,SAAC1I,EAAWC,GAC9B,IAAMqD,EAAO,CACXiB,MAAOC,aAAaC,QAAQ,UAG9BrB,EAAK,mBAAoBE,EAAMtD,EAAWC,IAG/B0I,EAAM,SAACC,EAAM5I,EAAWC,GACnC,IAAMqD,EAAI,aACRiB,MAAOC,aAAaC,QAAQ,UACzBmE,GAGLC,QAAQC,IAAIxF,GAEZF,EAAK,kBAAmBE,EAAMtD,EAAWC,IAG9B8I,EAAS,SAAClE,EAAU7E,EAAWC,GAC1C,IAAMqD,EAAO,CACXiB,MAAOC,aAAaC,QAAQ,SAC5BI,YAGFzB,EAAK,qBAAsBE,EAAMtD,EAAWC,IAGjC+I,EAAO,SAAChJ,EAAWC,GAC9B,IAAMqD,EAAO,CACXiB,MAAOC,aAAaC,QAAQ,UAG9BrB,EAAK,aAAcE,EAAMtD,EAAWC,IAGzBgJ,EAAS,SAACC,EAAMlJ,EAAWC,GACtC,IAAMqD,EAAI,aACRiB,MAAOC,aAAaC,QAAQ,UACzByE,GAGL9F,EAAK,qBAAsBE,EAAMtD,EAAWC,IAGjCkJ,EAAa,SAACD,EAAMlJ,EAAWC,GAC1C,IAAMqD,EAAI,aACRiB,MAAOC,aAAaC,QAAQ,UACzByE,GAGL9F,EAAK,oBAAqBE,EAAMtD,EAAWC,IAGhCmJ,EAAiB,SAACvE,EAAUC,EAAU9E,EAAWC,GAC5D,IAAMqD,EAAO,CACXiB,MAAOC,aAAaC,QAAQ,SAC5BI,WACAC,YAGF1B,EAAK,qBAAsBE,EAAMtD,EAAWC,IAGjCoJ,EAAqB,SAACvE,EAAU9E,EAAWC,GACtD,IAAMqD,EAAO,CACXiB,MAAOC,aAAaC,QAAQ,SAC5BK,YAGF1B,EAAK,oBAAqBE,EAAMtD,EAAWC,IAEhCqJ,EAAO,SAACzE,EAAU7E,EAAWC,GACxC,IAAMqD,EAAO,CACXiB,MAAOC,aAAaC,QAAQ,SAC5BI,YAGFzB,EAAK,mBAAoBE,EAAMtD,EAAWC,IAG/BsJ,EAAS,SAAC1E,EAAU7E,EAAWC,GAC1C,IAAMqD,EAAO,CACXiB,MAAOC,aAAaC,QAAQ,SAC5BI,YAGFzB,EAAK,qBAAsBE,EAAMtD,EAAWC,ICgH/BuJ,E,YA7Lb,WAAY9J,GAAQ,IAAD,8BACjB,4CAAMA,KAEDkF,MAAQ,CACXkD,QAAQ,eAAMpI,EAAMoI,SACpB2B,YAAa/J,EAAMoI,QACnBC,WAAY,GACZ2B,SAAS,EACTtE,WAAW,EACXuE,QAAQ,EACRxE,SAAU,MAGZ,EAAKE,aAAe,EAAKA,aAAazF,KAAlB,gBACpB,EAAKgK,cAAgB,EAAKA,cAAchK,KAAnB,gBAErB,EAAKsB,SAAW,EAAKA,SAAStB,KAAd,gBAhBC,E,0EAqCN+F,GAAQ,IAAD,EACMA,EAAMC,OAAtBrE,EADU,EACVA,KAAMC,EADI,EACJA,MACNsG,EAAY5I,KAAK0F,MAAjBkD,QAERA,EAAQvG,GAAQC,EAEhB,IAAiBqI,EAIjB3K,KAAKwG,SAAS,CACZoC,UACA6B,QANeE,EAME3K,KAAK4K,YALa,IAA5BC,OAAOC,KAAKH,GAAKI,UAQ1B,IAAMvI,EAAQJ,EAAYC,EAAMC,GAE1BuG,EAAU,eAAQ7I,KAAK0F,MAAMmD,YACnCA,EAAWxG,GAAQG,EAEnBxC,KAAKwG,SAAS,CACZqC,iB,oCAIW,IAAD,EAQR7I,KAAK0F,MAAMmD,WANblD,EAFU,EAEVA,SACAuD,EAHU,EAGVA,WACAC,EAJU,EAIVA,UACAI,EALU,EAKVA,aACAH,EANU,EAMVA,MACAC,EAPU,EAOVA,QAGF,OACe,IAAb1D,IACe,IAAfuD,IACc,IAAdC,IACiB,IAAjBI,IACU,IAAVH,IACY,IAAZC,I,kHAKFrJ,KAAKwG,SAAS,CAAEgE,SAAS,IAEnBC,EAASzK,KAAK4K,YAEZjF,EAAa3F,KAAK0F,MAAMkD,QAAxBjD,SAEH3F,KAAKQ,MAAMQ,K,uBACRgJ,E,aACJrE,YACG8E,G,mBAGCO,EAAoBhB,EAAMhK,KAAKQ,MAAMM,UAAWd,KAAK0K,gB,qCAErDV,E,eACDS,G,oBAGCO,EACJhB,EACAhK,KAAKQ,MAAMM,UACXd,KAAK0K,gB,sFAKG5F,GACZ,IAAMmB,EAAWa,EAAgBhC,GAEjC9E,KAAKwG,SAAS,CAAEN,WAAW,EAAMsE,SAAS,EAAOvE,e,kCAGtC,IAAD,EACuBjG,KAAK0F,MAA9BkD,EADE,EACFA,QAAS2B,EADP,EACOA,YAEbE,EAAS,GAEb,IAAK,IAAIQ,KAAOrC,EACVA,EAAQqC,KAASV,EAAYU,KAC/BR,EAAOQ,GAAOrC,EAAQqC,IAI1B,OAAOR,I,iCAIP,MAAO,iB,gCAMP,OAFAd,QAAQC,IAAI5J,KAAK0F,MAAMmD,YAGrB,6BACE,kBAAC,EAAD,CACED,QAAS5I,KAAK0F,MAAMkD,QACpB5G,SAAUhC,KAAKgC,SACfmE,aAAcnG,KAAKmG,aACnBnF,KAAMhB,KAAKQ,MAAMQ,KACjB6H,WAAY7I,KAAK0F,MAAMmD,aAEzB,kBAACf,EAAA,EAAD,CACE7F,QAAQ,uBACR8F,MAA+B,IAAzB/H,KAAK0F,MAAMQ,WAEjB,qFAEE,6BACClG,KAAK0F,MAAMO,c,kCAOT,IAAD,EACkBjG,KAAK0F,MAAzB8E,EADE,EACFA,QAASC,EADP,EACOA,OACXjI,EAAQxC,KAAKkL,cAEnB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACrJ,EAAA,EAAD,CAAQC,QAAS/B,KAAKQ,MAAM+H,OAAQtG,QAAQ,QAAQC,SAAUsI,GAA9D,SAGA,kBAAC1I,EAAA,EAAD,CAAQC,QAAS/B,KAAKgC,SAAUE,SAAUsI,IAAYC,IAAWjI,IAClD,IAAZgI,EACC,oCACE,kBAACvC,EAAA,EAAD,CACEC,GAAG,OACHC,UAAU,SACVC,KAAK,KACLC,KAAK,SACLC,cAAY,SACX,IAPL,cAWA,oB,gDAlKsB8C,EAAWC,GACzC,OAAuB,IAAnBD,EAAUrD,KACL,CACLa,QAAS,KACT2B,YAAa,KACbC,SAAS,EACTtE,WAAW,GAIVmF,EAAUd,YAKH,KAJH,CACL3B,QAAQ,eAAMwC,EAAUxC,SACxB2B,YAAaa,EAAUxC,a,GAjCErI,G,6BCX1B,SAAS+K,GAAQC,GACtB,OAAOA,EAAOC,UAAU,EAAG,IAmBtB,SAASC,GAAWC,EAAMlC,GAC/B,OAAOA,EAAKmC,QAAO,SAAAC,GAAI,OAAIN,GAAQM,EAAKL,UAAYG,K,wBCuEvCG,G,YAnFb,WAAYrL,GAAQ,IAAD,8BACjB,4CAAMA,KACDkF,MAAQ,CACX8D,KAAMhJ,EAAMgJ,MAHG,E,sEAaT,IAAD,OACCA,EAASxJ,KAAK0F,MAAd8D,KAER,OACE,kBAAC,IAAMsC,SAAP,KACE,kBAACC,EAAA,EAAQ1K,MAAT,KACE,0BAAM6F,UAAU,sBAAhB,gBACA,kBAACpF,EAAA,EAAD,CACEG,QAAQ,WACRiF,UAAU,uBACVnF,QAAS/B,KAAKQ,MAAMwL,eAHtB,qBAQF,kBAACD,EAAA,EAAQE,QAAT,CAAiB/E,UAAU,OACzB,yBAAKA,UAAU,sBACXsC,EAIkB,IAAhBA,EAAKuB,OACP,yBAAK7D,UAAU,uBAAf,oCAIAsC,EAAK0C,KAAI,SAACC,EAAQC,GAAT,OACP,yBACEnB,IAAKmB,EACLlF,UACE,eAAiC,SAAhBiF,EAAOE,KAAkB,UAAY,IAExDtK,QAAS,kBAAM,EAAKvB,MAAM8L,aAAaF,KAEvC,kBAACpD,GAAA,EAAD,KACE,yBAAK9B,UAAU,8BACb,kBAACqF,GAAA,EAAD,CACEC,eAAa,EACbtF,UAAU,mBACVuF,IAAKC,QAGT,yBAAKxF,UAAU,yBACb,4BAAKiF,EAAOzK,OACZ,6BACGyK,EAAOQ,QAAQ5B,OA7Db,GA8DCoB,EAAOQ,QAAQnB,UACb,GACAW,EAAOE,KAhEV,KAmEK,MACJF,EAAOQ,SAEb,uBAAGzF,UAAU,cAAcoE,GAAQa,EAAOS,aApClD,yBAAK1F,UAAU,uBAAf,gCA2CJ,yBAAKA,UAAU,kBACb,kBAACpF,EAAA,EAAD,CAAQG,QAAQ,YAAhB,iB,gDApEsBmJ,EAAWC,GACzC,MAAO,CACL7B,KAAM4B,EAAU5B,U,GAVKhI,a,UCmDZqL,I,mBAnDb,WAAYrM,GAAQ,IAAD,8BACjB,4CAAMA,KAEDkF,MAAQ,CACXoH,UAAU,GAGZ,EAAKC,aAAe,EAAKA,aAAarM,KAAlB,gBAPH,E,qJAWjBV,KAAKwG,SAAS,CAAEsG,UAAU,I,mBACpBE,K,gFAIN,OAA4B,IAAxBhN,KAAK0F,MAAMoH,UACbxH,aAAa2H,QACN,kBAAC,IAAD,CAAUlG,GAAG,OAIpB,kBAAC,IAAM+E,SAAP,KACE,kBAACC,EAAA,EAAQ1K,MAAT,KACE,yBAAK6F,UAAU,sBAAf,WACWlH,KAAKQ,MAAMmF,SADtB,MAIF,kBAACoG,EAAA,EAAQE,QAAT,CAAiB/E,UAAU,aACzB,yBACEA,UAAU,sBACVnF,QAAS/B,KAAKQ,MAAM0M,wBAFtB,qBAMA,yBACEhG,UAAU,sBACVnF,QAAS/B,KAAKQ,MAAM2M,yBAFtB,mBAMA,kBAACC,GAAA,EAASC,QAAV,MACA,yBAAKnG,UAAU,sBAAsBnF,QAAS/B,KAAK+M,cAAnD,mB,GA3C0BvL,cC8BrB8L,G,iLAhCX,OACE,kBAACtG,EAAA,EAAD,CAAMhF,SAAUhC,KAAKQ,MAAMwB,UACzB,kBAACgF,EAAA,EAAKI,MAAN,CAAY0B,UAAU,YACpB,kBAAC9B,EAAA,EAAKC,MAAN,qBACA,kBAACD,EAAA,EAAKK,QAAN,CACEC,KAAK,WACLjF,KAAK,WACLmF,SAAUxH,KAAKQ,MAAMgH,SACrBC,WAAYzH,KAAKQ,MAAMsF,gBAEzB,kBAACkB,EAAA,EAAKK,QAAQM,SAAd,CAAuBL,KAAK,WAA5B,4FAKF,kBAACN,EAAA,EAAKI,MAAN,CAAY0B,UAAU,cACpB,kBAAC9B,EAAA,EAAKC,MAAN,6BACA,kBAACD,EAAA,EAAKK,QAAN,CACEC,KAAK,WACLjF,KAAK,aACLmF,SAAUxH,KAAKQ,MAAMgH,SACrBC,WAAYzH,KAAKQ,MAAM+M,kBAEzB,kBAACvG,EAAA,EAAKK,QAAQM,SAAd,CAAuBL,KAAK,WAA5B,oC,GAzBuB9F,aC+KlBgM,G,YAtKb,WAAYhN,GAAQ,IAAD,8BACjB,4CAAMA,KAEDkF,MAAQ,CACXE,SAAU,KACV6H,WAAY,KACZ3H,eAAe,EACfyH,iBAAiB,EACjBG,SAAU,KACVzH,SAAU,MAGZ,EAAK0H,aAAe,EAAKA,aAAajN,KAAlB,gBACpB,EAAKyF,aAAe,EAAKA,aAAazF,KAAlB,gBAEpB,EAAKI,UAAY,EAAKA,UAAUJ,KAAf,gBACjB,EAAKK,UAAY,EAAKA,UAAUL,KAAf,gBAhBA,E,0EA+BN+F,GAAQ,IAAD,SACMA,EAAMC,OAAtBrE,EADU,EACVA,KAAMC,EADI,EACJA,MAEdtC,KAAKwG,SAAL,eACGnE,EAAOC,IAGV,IAAME,EAAQJ,EAAYC,EAAMC,EAAOtC,KAAK0F,MAAME,UAElD5F,KAAKwG,SAAL,eACGnE,EAAO,QAAUG,IAGpBxC,KAAKwG,UAAS,SAAAmC,GAAI,MAAK,CACrB4E,gBACE5E,EAAK/C,WAAa+C,EAAK8E,YAAkC,OAApB9E,EAAK8E,eAGjC,aAATpL,GACFrC,KAAKwG,UAAS,SAAA6E,GAAS,MAAK,CAC1BvF,cACEuF,EAAUvF,eACVuF,EAAUzF,WAAa,EAAKpF,MAAMmI,KAAK/C,e,kHAKrCA,EAAa5F,KAAK0F,MAAlBE,SACR5F,KAAKwG,SAAS,CAAEkH,UAAU,IAErB1N,KAAKQ,MAAMQ,K,uBACN2E,EAAa3F,KAAKQ,MAAlBmF,S,mBAEFqF,EACJrF,EACAC,EACA5F,KAAKc,UACLd,KAAKe,Y,yDAGDiK,EACJpF,EACA5F,KAAKc,UACLd,KAAKe,Y,kFAKD+D,EAAK8B,GACb5G,KAAKQ,MAAM+H,SACXvI,KAAKwG,SAAS,CAAEkH,SAAU,OAC1B1N,KAAKQ,MAAMM,UAAU8F,K,gCAGb9B,GACR,IAAMmB,EAAWa,EAAgBhC,GAEjC9E,KAAKwG,SAAS,CAAEkH,UAAU,EAAOzH,e,iCAIjC,MAAO,oB,gCAIP,IAAM2H,EACJ,kBAAC9F,EAAA,EAAD,CACE7F,QAAQ,uBACR8F,MAA8B,IAAxB/H,KAAK0F,MAAMgI,UAEjB,qGAEE,6BACC1N,KAAK0F,MAAMO,SAHd,MAQE4H,EACJ,kBAAC,GAAD,CACE7L,SAAUhC,KAAK2N,aACfnG,SAAUxH,KAAKmG,aACfL,cAAe9F,KAAK0F,MAAMI,cAC1ByH,gBAAiBvN,KAAK0F,MAAM6H,kBAIhC,OACE,6BACGM,EACAD,K,oCAKQ,IAAD,EACqD5N,KAAK0F,MAA9DE,EADI,EACJA,SAAUE,EADN,EACMA,cAAe2H,EADrB,EACqBA,WAAYF,EADjC,EACiCA,gBAE7C,OACe,OAAb3H,GACe,OAAf6H,IACkB,IAAlB3H,IACoB,IAApByH,I,kCAKF,IAAMO,EAAS9N,KAAKkL,gBAAyC,IAAxBlL,KAAK0F,MAAMgI,SAEhD,OACE,kBAACvC,EAAA,EAAD,KACE,kBAACrJ,EAAA,EAAD,CAAQC,QAAS/B,KAAKQ,MAAM+H,OAAQtG,QAAQ,SAA5C,SAGA,kBAACH,EAAA,EAAD,CAAQC,QAAS/B,KAAK2N,aAAczL,UAAW4L,GAC5C9N,KAAK0F,MAAMgI,SACV,6BACE,kBAACzF,EAAA,EAAD,CACEC,GAAG,OACHC,UAAU,SACVC,KAAK,KACLC,KAAK,SACLC,cAAY,SACX,IAPL,cAWA,mB,gDA3IsB8C,EAAWC,GACzC,OAAuB,IAAnBD,EAAUrD,KACL,CACLnC,SAAU,KACV6H,WAAY,KACZ3H,eAAe,EACfyH,iBAAiB,EACjBG,SAAU,MAEF,S,GA7BkBnN,GCTrBiJ,GAAO,SAAA1I,GAClB,IAAMsD,EAAO,CACXiB,MAAOC,aAAaC,QAAQ,UAG9BrB,EAAK,qBAAsBE,EAAMtD,IC6NpBiN,I,mBAtNb,WAAYvN,GAAQ,IAAD,8BACjB,4CAAMA,KAEDkF,MAAQ,CACXyG,OAAQ,KACR6B,eAAgB,KAChBC,iBAAiB,EACjBC,mBAAmB,EACnBC,oBAAoB,EACpBC,eAAe,EACfnI,SAAU,MAGZ,EAAKoI,uBAAyB,EAAKA,uBAAuB3N,KAA5B,gBAC9B,EAAKwM,uBAAyB,EAAKA,uBAAuBxM,KAA5B,gBAE9B,EAAK4N,wBAA0B,EAAKA,wBAAwB5N,KAA7B,gBAC/B,EAAKyM,wBAA0B,EAAKA,wBAAwBzM,KAA7B,gBAE/B,EAAK6N,yBAA2B,EAAKA,yBAAyB7N,KAA9B,gBAEhC,EAAK8N,2BAA6B,EAAKA,2BAA2B9N,KAAhC,gBAIlC,EAAK+N,mBAAqB,EAAKA,mBAAmB/N,KAAxB,gBAC1B,EAAKgO,gBAAkB,EAAKA,gBAAgBhO,KAArB,gBACvB,EAAKsL,cAAgB,EAAKA,cAActL,KAAnB,gBA3BJ,E,iFA+BjBV,KAAK2O,uB,yCAGY1D,GACjB,IAAM2D,EAAU5O,KAAK0F,MAAMyG,OAAOD,KAAI,SAAC2C,EAAMzC,GAK3C,OAJIA,IAAQnB,IACV4D,EAAKxC,KAAO,QAGPwC,KAGT7O,KAAKwG,SAAS,CACZ2F,OAAQyC,EACRZ,eAAgBY,EAAQ3D,GACxBgD,iBAAiB,IAGnBjO,KAAK8O,KAAKC,cAAcC,S,wCAIxBhP,KAAKwG,SAAS,CAAEyH,iBAAiB,M,sCAIjC,IAAMW,EAAU5O,KAAK0F,MAAMyG,OAAOD,KAAI,SAAA2C,GAEpC,OADAA,EAAKxC,KAAO,OACLwC,KAGT7O,KAAKwG,SAAS,CACZ2F,OAAQyC,M,+CAKV5O,KAAKwG,SAAS,CAAE0H,mBAAmB,M,+CAInClO,KAAK8O,KAAKG,eAAeD,OACrBhP,KAAKQ,MAAMoI,SAAS5I,KAAKwG,SAAS,CAAE0H,mBAAmB,M,gDAI3DlO,KAAKwG,SAAS,CAAE2H,oBAAoB,M,gDAIpCnO,KAAK8O,KAAKG,eAAeD,OACrBhP,KAAKQ,MAAMoI,SAAS5I,KAAKwG,SAAS,CAAE2H,oBAAoB,M,yCAI5DnO,KAAKwG,SAAS,CAAE4H,eAAe,M,yCAI/BpO,KAAKwG,SAAS,CAAE4H,eAAe,M,uIAIzBc,GAAoBlP,KAAKuO,2B,gGAGRzJ,GACvB,IAAIqK,EAAgB,GAEpB,IAAK,IAAIC,KAAYtK,EACfsK,EAAS3M,WAAW,kBACtB0M,EAAcE,KAAKvK,EAAIsK,IAE3BpP,KAAKwG,SAAS,CACZ2F,OAAQgD,EAAcG,c,iDAICxK,EAAK8B,GAAM,IAC5BgC,EAAY5I,KAAKQ,MAAjBoI,QAER,IAAK,IAAIqC,KAAOrE,EACF,aAARqE,GAA8B,UAARA,IACxBrC,EAAQqC,GAAOrE,EAAIqE,IAIvBjL,KAAKwG,SAAS,CACZ0H,mBAAmB,M,+BAKrB,IAAMqB,EAASvP,KAAK0F,MAAMyG,OACtBnM,KAAK0F,MAAMyG,OAAOR,QAAO,SAAA6D,GAAC,MAAe,SAAXA,EAAEnD,QAAiBtB,OACjD,EAEIpF,GAAa3F,KAAKQ,MAAMoI,QAAU5I,KAAKQ,MAAMoI,QAAU,IAAvDjD,SAER,OACE,yBAAKuB,UAAU,qCACb,0BAAMA,UAAU,qBACd,wBAAIA,UAAU,gBAAd,cAEF,0BAAMA,UAAU,iCACd,kBAACuI,EAAA,EAAD,CACEC,WAAS,EACTC,QAAQ,QACRC,UAAU,SACVC,IAAI,gBACJC,QACE,kBAAC/D,EAAA,EAAD,CAAS7E,UAAU,gBACjB,kBAAC,GAAD,CACEsC,KAAMxJ,KAAK0F,MAAMyG,OACjBG,aAActM,KAAKyO,mBACnBzC,cAAehM,KAAKgM,kBAK1B,kBAAClK,EAAA,EAAD,CAAQG,QAAQ,YACF,IAAXsN,GACC,kBAACQ,EAAA,EAAD,CAAOC,MAAI,EAAC/N,QAAQ,4BACjBsN,GAGL,uBAAGrI,UAAU,8BAIjB,kBAACuI,EAAA,EAAD,CACEC,WAAS,EACTC,QAAQ,QACRE,IAAI,iBACJD,UAAU,SACVE,QACE,kBAAC/D,EAAA,EAAD,CAAS7E,UAAU,mBACjB,kBAAC,GAAD,CACEvB,SAAUA,EACVuH,uBAAwBlN,KAAKkN,uBAC7BC,wBAAyBnN,KAAKmN,4BAKpC,kBAACrL,EAAA,EAAD,CAAQG,QAAQ,iBACd,uBAAGiF,UAAU,sCAInB,kBAAC,EAAD,CACElG,MAAI,EACJ4H,QAAS5I,KAAKQ,MAAMoI,QACpBb,KAAM/H,KAAK0F,MAAMwI,kBACjB3F,OAAQvI,KAAKqO,uBACbvN,UAAWd,KAAKwO,6BAElB,kBAAC,GAAD,CACExN,MAAI,EACJ2H,KAAM3I,KAAKQ,MAAMoI,QACjBb,KAAM/H,KAAK0F,MAAMyI,mBACjB5F,OAAQvI,KAAKsO,0BAEdtO,KAAK0F,MAAMuI,iBACV,kBAAC,EAAD,CACElG,KAAM/H,KAAK0F,MAAMuI,gBACjB1F,OAAQvI,KAAK0O,gBACbhN,MAAM,eACNS,YAAY,KACZH,SAAUhC,KAAK0O,iBAEf,wBAAIxH,UAAU,QACXlH,KAAK0F,MAAMsI,eAAetM,OAAS,qBAEtC,+BAAQ1B,KAAK0F,MAAMsI,eAAepB,MAClC,uBAAG1F,UAAU,QAAQlH,KAAK0F,MAAMsI,eAAerB,e,GA/MtCnL,c,SCMNyO,I,wLAZX,OACE,yBAAK/I,UAAU,eACb,yBACEuF,IAAKC,KACLwD,IAAI,OACJhJ,UAAU,8C,GAPC1F,cCmBN2O,I,uLAnBH,IAAD,OACHvO,EAAQ,aAAe5B,KAAKQ,MAAM4P,SAAW,YAAc,IAE/D,OACE,kBAAC,IAAD,CAAMrJ,GAAI/G,KAAKQ,MAAMoL,KAAKyE,KAAMnJ,UAAU,cACxC,4BACEA,UAAWtF,EACXG,QAAS,kBAAM,EAAKvB,MAAM8P,aAAa,EAAK9P,MAAMoL,KAAK2E,YAEvD,0BAAMrJ,UAAU,6CACd,uBAAGA,UAAWlH,KAAKQ,MAAMoL,KAAK4E,OAC9B,0BAAMtJ,UAAU,QAAQlH,KAAKQ,MAAMoL,KAAK2E,iB,GAZ7B/O,c,SCmBRiP,G,iLAlBH,IAAD,OACP,OACE,yBAAKvJ,UAAU,4BACb,kBAACwJ,GAAA,EAAD,CAAaC,UAAQ,EAACzJ,UAAU,SAC7BlH,KAAKQ,MAAMoQ,UAAU1E,KAAI,SAACN,EAAMQ,GAAP,OACxB,kBAAC,GAAD,CACEgE,SAAU,EAAK5P,MAAM4P,WAAaxE,EAAK2E,SACvCtF,IAAKmB,EACLR,KAAMA,EACN0E,aAAc,EAAK9P,MAAM8P,wB,GAVpB9O,aCoBJqP,G,iLAnBH,IAAD,OACHjP,EAAQ,aAAe5B,KAAKQ,MAAM4P,SAAW,YAAc,IAE/D,OACE,kBAAC,IAAD,CAAMrJ,GAAI/G,KAAKQ,MAAMoL,KAAKyE,KAAMnJ,UAAU,cACxC,kBAACpF,EAAA,EAAD,CACEoF,UAAWtF,EACXG,QAAS,kBAAM,EAAKvB,MAAM8P,aAAa,EAAK9P,MAAMoL,KAAK2E,WACvDtO,QAAQ,iBAER,0BAAMiF,UAAU,6CACd,uBAAGA,UAAWlH,KAAKQ,MAAMoL,KAAK4E,c,GAZZhP,aCoBfsP,I,wLAlBH,IAAD,OACP,OACE,yBAAK5J,UAAU,4BACb,kBAACwJ,GAAA,EAAD,CAAaC,UAAQ,EAACzJ,UAAU,SAC7BlH,KAAKQ,MAAMoQ,UAAU1E,KAAI,SAACN,EAAMQ,GAAP,OACxB,kBAAC,GAAD,CACEgE,SAAU,EAAK5P,MAAM4P,WAAaxE,EAAK2E,SACvCtF,IAAKmB,EACLR,KAAMA,EACN0E,aAAc,EAAK9P,MAAM8P,wB,GAVb9O,cCoFXuP,I,mBAnFb,WAAYvQ,GAAQ,IAAD,8BACjB,4CAAMA,KA8CR8P,aAAe,SAAAU,GACb,EAAKxK,SAAS,CACZ4J,SAAUY,KA9CZ,EAAKtL,MAAQ,CACXkL,UAAW,CACT,CACEP,KAAM,aACNG,KAAM,oBACND,SAAU,eAEZ,CACEF,KAAM,uBACNG,KAAM,mBACND,SAAU,aAEZ,CACEF,KAAM,qBACNG,KAAM,iBACND,SAAU,WAEZ,CACEF,KAAM,sBACNG,KAAM,qBACND,SAAU,aAGdH,SAAU,eAGZ,EAAKE,aAAe,EAAKA,aAAa5P,KAAlB,gBA7BH,E,iFAiCjBV,KAAKiR,qB,yCAIL,IAAMC,EAAOC,OAAOC,SAASjK,KACvBiJ,EAAW,aAAIpQ,KAAK0F,MAAMkL,WAC7BtB,UACA+B,MAAK,SAAAzF,GAAI,OAAIsF,EAAKI,SAAS1F,EAAKyE,SAEnCrQ,KAAKwG,SAAS,CACZ4J,SAAUA,EAASG,a,+BAUb,IACAK,EAAc5Q,KAAK0F,MAAnBkL,UACF7F,EAAS6F,EAAU7F,OAEnBwG,GACmB,IAAvBvR,KAAKQ,MAAMgR,QAAmBZ,EAAYA,EAAUa,MAAM,EAAG1G,EAAS,GAExE,OACE,6BACE,yBAAK7D,UAAU,6BACb,kBAAC,GAAD,CAAQwK,OAAQ1R,KAAKQ,MAAMkR,SAC3B,kBAAC,GAAD,CACEtB,SAAUpQ,KAAK0F,MAAM0K,SACrBQ,UAAWW,EACXjB,aAActQ,KAAKsQ,gBAGvB,yBAAKpJ,UAAU,0CACb,yBAAKA,UAAU,eACf,kBAAC,GAAD,CACEkJ,SAAUpQ,KAAK0F,MAAM0K,SACrBQ,UAAWW,EACXjB,aAActQ,KAAKsQ,qB,GA5ET9O,c,wCCqDPmQ,G,iLAnDX,IADO,EA2BsC3R,KAAKQ,MAA1CoR,EA3BD,EA2BCA,OAAQC,EA3BT,EA2BSA,MAAOC,EA3BhB,EA2BgBA,WAAYpQ,EA3B5B,EA2B4BA,MAEnC,OACE,kBAACqQ,GAAA,EAAD,CAAM7K,UAAU,sCACd,kBAAC6K,GAAA,EAAK1Q,MAAN,KAAaK,GACb,kBAACqQ,GAAA,EAAKzQ,KAAN,KACE,kBAAC,KAAD,CACE0Q,QAAO,eAjCC,CACdC,MAAO,CACLC,SAAS,EACTC,OAAQ,IACRC,KAAM,CACJ9K,KAAM,IACN+K,SAAS,EACTC,gBAAgB,GAElBC,QAAS,CACPxK,MAAM,EACNyK,MAAO,CACLC,UAAU,EACVC,WAAW,EACXN,MAAM,EACNO,QAAQ,EACRC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,YAAa,IAEfC,aAAc,UAYL,CAELnB,QACAoB,MAAO,CACLnB,aACAoB,OAAQ,CAAEnL,MAAM,MAGpB6J,OAAQA,EACRtK,KAAK,OACL6L,MAAM,e,GA7CQ3R,a,ICmFX4R,G,YAnFb,WAAY5S,GAAQ,IAAD,8BACjB,4CAAMA,KAEDkF,MAAQ,CACX2N,YAAa,CACX3R,MAAO,cACP4R,MAAO,UACP1B,OAAQ,CACN,CACEvP,KAAM,cACN2C,KAAM,MAIZuO,SAAU,CACR7R,MAAO,WACP4R,MAAO,UACP1B,OAAQ,CACN,CACEvP,KAAM,WACN2C,KAAM,MAIZwO,IAAK,CACH9R,MAAO,MACP4R,MAAO,UACP1B,OAAQ,CACN,CACEvP,KAAM,MACN2C,KAAM,MAIZ8M,WAAY,IAlCG,E,sEAsDT,IAAD,OACP,OACE,yBAAK5K,UAAU,SACZ,CAAC,MAAO,WAAY,eAAegF,KAAI,SAACN,EAAMQ,GAAS,IAAD,EACpB,EAAK1G,MAAMkG,GAApC0H,EAD6C,EAC7CA,MAAO5R,EADsC,EACtCA,MAAOkQ,EAD+B,EAC/BA,OACdE,EAAe,EAAKpM,MAApBoM,WACR,OACE,kBAAC,GAAD,CACE7G,IAAKmB,EACLyF,MAAO,CACL4B,KAAM,QACNC,WAAY,CACVrB,SAAS,EACTiB,QACAK,QAAS,QACTC,eAAgB,MAGpBlS,MAAOA,EACPkQ,OAAQA,EACRE,WAAYA,W,gDApCQtR,EAAOkF,GACrC,IAAKlF,EAAMwE,KAAM,OAAO,KADoB,IAKtC6O,EChDK,SAA+B7O,GAkB5C,IAjBA,IAAI8O,EAAgB,CAClBN,IAAK,GACLD,SAAU,GACVF,YAAa,IAGXvB,EAAa,GAEXiC,EAAU,IAAIC,KAAKhP,EAAKA,EAAK+F,OAAS,GAAGiJ,MAK3CC,EAAc,IAAID,KAAKhP,EAAK,GAAGgP,MAAME,UAErCC,EAAQ,EAhBsC,aAmBhD,IAAMC,EAAc,IAAIJ,KAAKC,GACzBI,EAAcrP,EAAKqM,MAAK,SAAAiD,GAC1B,IAAMC,EAAU,IAAIP,KAAKM,EAAEN,MAC3B,OACEO,EAAQC,aAAeJ,EAAYI,YACnCD,EAAQE,eAAiBL,EAAYK,gBAIpCJ,IACHA,EAAc,CACZb,IAAK,EACLD,SAAU,EACVF,YAAa,EACbW,KACEI,EAAYM,cAAclJ,UAAU,EAAG,IACvC,IACA4I,EAAYO,uBAIlBb,EAAcN,IAAIW,GAASE,EAAYb,IACvCM,EAAcP,SAASY,GAASE,EAAYd,SAC5CO,EAAcT,YAAYc,GAASE,EAAYhB,YAC/CvB,EAAWqC,GAASE,EAAYL,KAEhCG,IACAF,GAAeW,MA5BVX,GAAeF,EAAQG,WAAY,IA+B1C,OAAO,eACFJ,EADL,CAEEhC,eDHe+C,CAFErU,EAATwE,MAIJ2D,EAAI,eAAQjD,GAMhB,OALAiD,EAAK0K,YAAYzB,OAAO,GAAG5M,KAAO6O,EAAOR,YACzC1K,EAAK4K,SAAS3B,OAAO,GAAG5M,KAAO6O,EAAON,SACtC5K,EAAK6K,IAAI5B,OAAO,GAAG5M,KAAO6O,EAAOL,IACjC7K,EAAKmJ,WAAa+B,EAAO/B,WAElBnJ,M,GApDenH,aEoBXsT,GAxBS,SAAAC,GACtB,IAAMC,EAAU,IAAIhB,KAQdiB,EAAwB,MANZD,EAAQR,WAAaO,EAAKG,OAMQ,IAL/BF,EAAQP,aAAeM,EAAKI,UAC7BH,EAAQI,aAAeL,EAAKM,SAgBhD,OAVIJ,GAAa,KACRK,KAAKC,MAAMN,EAAY,MAAMO,WAAa,aAC1CP,GAAa,KACbK,KAAKC,MAAMN,EAAY,MAAMO,WAAa,YAC1CP,GAAa,IACbK,KAAKC,MAAMN,EAAY,IAAIO,WAAa,eACxCP,GAAa,GACbK,KAAKC,MAAMN,EAAY,IAAIO,WAAa,cACrC,WCkECC,I,mMA7EQ,IAAD,OAClBzV,KAAK0V,SAAWC,aAAY,WAC1B,EAAKC,gBACJ,O,6CAIHC,cAAc7V,KAAK0V,Y,oCAInB,GAA0B,eAAtB1V,KAAKQ,MAAM2L,SAEsB,IAAjCnM,KAAKQ,MAAMsV,WAAWZ,MAG1B,IAAqC,IAAjClV,KAAKQ,MAAMsV,WAAWZ,MAA1B,CAKA,IAAMa,EAAOjB,GAAgB9U,KAAKQ,MAAMsV,YACxC9V,KAAKQ,MAAMwV,aAAaD,QALtB/V,KAAKQ,MAAMwV,aAAa,wB,+BAQlB,IAAD,OACC7B,EAAUnU,KAAKQ,MAAf2T,MAER,OACE,kBAACpC,GAAA,EAAD,CAAM7K,UAAU,cACd,kBAAC6K,GAAA,EAAKzQ,KAAN,KACE,yBAAK4F,UAAU,OACb,yBAAKA,UAAU,SACb,uBAAGA,UAAWiN,EAAM3D,QAEtB,yBAAKtJ,UAAU,sBACb,yBAAKA,UAAU,qBAAqBiN,EAAMzS,OAC1C,yBAAKwF,UAAU,qBAAqBiN,EAAMA,UAIhD,kBAACpC,GAAA,EAAKxQ,OAAN,KACyB,gBAAtBvB,KAAKQ,MAAM2L,OACV,kBAACrK,EAAA,EAAD,CAAQG,QAAQ,OAAOC,UAAQ,GAC7B,kBAAC+F,EAAA,EAAD,CACEC,GAAG,OACHC,UAAU,SACVC,KAAK,KACLC,KAAK,SACLC,cAAY,OACZrG,QAAQ,YACP,IARL,eAYA,8BACE,kBAACH,EAAA,EAAD,CACEG,QAAQ,OACRF,QAAS,WACP,EAAKvB,MAAMyV,iBACX,EAAKzV,MAAMwV,aAAa,iBAG1B,uBAAG9O,UAAU,gBACb,0CAEF,uBAAGA,UAAU,8BACX,+BAAQlH,KAAKQ,MAAM2L,gB,GApEX3K,cC8DT0U,G,2MAjEbxQ,MAAQ,CACNyG,OAAQ,aACRgK,QAAS,CACP,CACEzU,MAAO,MACPyS,MAAO,WACP3D,KAAM,mCAER,CACE9O,MAAO,WACPyS,MAAO,OACP3D,KAAM,kCAER,CACE9O,MAAO,cACPyS,MAAO,WACP3D,KAAM,iD,EA2BZwF,aAAe,SAAAD,GACb,EAAKvP,SAAS,CAAE2F,OAAQ4J,K,wEAGhB,IAAD,OACP,OACE,yBAAK7O,UAAU,cACZlH,KAAK0F,MAAMyQ,QAAQjK,KAAI,SAACN,EAAMQ,GAAP,OACtB,kBAAC,GAAD,CACEnB,IAAKmB,EACL+H,MAAOvI,EACPO,OAAQ,EAAKzG,MAAMyG,OACnB2J,WAAY,EAAKtV,MAAMsV,WACvBG,eAAgB,EAAKzV,MAAMyV,eAC3BD,aAAc,EAAKA,sB,gDApCGxV,EAAOkF,GACrC,IAAKlF,EAAMwE,KAAM,OAAO,KADoB,IAGpCA,EAASxE,EAATwE,KAUJmR,EAAUzQ,EAAMyQ,QAMpB,OAJAA,EAAQ,GAAGhC,MAAQnP,EAAKwO,IAAM,SAC9B2C,EAAQ,GAAGhC,MAAQnP,EAAKuO,SAAW,KACnC4C,EAAQ,GAAGhC,MAAQnP,EAAKqO,YAAc,SAE/B,CAAE8C,e,GAzCc3U,aCmBZ4U,I,wLAbX,OACE,yBAAKlP,UAAU,OACb,kBAAC,GAAD,CACElC,KAAMhF,KAAKQ,MAAM2V,QACjBL,WAAY9V,KAAKQ,MAAMsV,WACvBG,eAAgBjW,KAAKQ,MAAMyV,iBAE7B,kBAAC,GAAD,CAAajR,KAAMhF,KAAKQ,MAAMyR,a,GATbzQ,c,wBCgDV6U,G,iLA9CX,OACE,kBAACC,GAAA,EAAD,CAAOC,YAAU,EAACC,OAAK,GACrB,+BACE,4BACE,4BACE,uBAAGtP,UAAU,iBADf,SAGA,4BACE,uBAAGA,UAAU,qBADf,YAGA,4BACE,uBAAGA,UAAU,2BADf,gBAGA,4BACE,uBAAGA,UAAU,gBADf,aAGA,4BACE,uBAAGA,UAAU,iBADf,aAGA,4BACE,uBAAGA,UAAU,gBADf,WAKJ,+BACGlH,KAAKQ,MAAMgJ,KAAK0C,KAAI,SAACN,EAAMQ,GAAP,OACnB,wBAAInB,IAAKmB,GACP,4BAAKR,EAAKL,OAAOC,UAAU,KAC3B,4BACE,kBAACe,GAAA,EAAD,CACEE,IAAG,0CAAqCb,EAAK6K,QAAQ,GAAGjG,KAArD,UAEL,kCAAQ5E,EAAK6K,QAAQ,GAAGC,cAE1B,6BAtCeC,EAsCO/K,EAAKgL,KAAKC,KArCjCvB,KAAKwB,MAAMH,EAAQ,KAAO,SAsCzB,4BAAK/K,EAAKgL,KAAKG,SAAW,KAC1B,4BAAKnL,EAAKgL,KAAKI,UACf,4BAAKpL,EAAKqL,KAAKC,IAAM,QAAOtL,EAAKqL,KAAKE,MAAQ,QAzC/B,IAAAR,W,GAFAnV,a,wCCiBd4V,I,wLAdX,OAEE,yBAAKlQ,UAAU,OACb,kBAAC,KAAD,CACEmQ,iBAAkB,CAAEpM,IAAK,2CACzBqM,cAAetX,KAAKQ,MAAM8W,cAC1BC,OAAQvX,KAAKQ,MAAM+W,OACnBC,YAAaxX,KAAKQ,MAAM4R,Y,GATV5Q,cCOlBiW,I,OAAQ,KA0MCC,G,YAvMb,WAAYlX,GAAQ,IAAD,8BACjB,4CAAMA,KAEDkF,MAAQ,CACXsE,KAAM,GACN2N,KAAMC,GAAUC,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEzV,KAAO0V,EAAE1V,MAAQ,EAAI,KAAIoP,MACzD,EACAgG,IAEFO,OAAQ,KACRC,WAAW,EACXC,OAAQ,MAGV,EAAKC,MAAQC,IAAMC,YAEnB,EAAKC,WAAa,EAAKA,WAAW5X,KAAhB,gBAClB,EAAK4L,aAAe,EAAKA,aAAa5L,KAAlB,gBACpB,EAAK6X,aAAe,EAAKA,aAAa7X,KAAlB,gBACpB,EAAK8X,OAAS,EAAKC,mBAAmB/X,KAAxB,gBAnBG,E,0EAsBNgY,GAAS,IAAD,OAGnBpU,MAAM,uDAAD,OACoDoU,EADpD,kBAFU,qCAKZ7T,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJ,EAAKwB,SAAS,CAAEwD,KAAMhF,EAAMiT,WAAW,IACvC,EAAKQ,wBAENvT,MAAMyE,QAAQC,O,qCAIjB5J,KAAKwG,SAAS,CACZyR,WAAW,EACXjO,KAAM,GACNkO,OAAQ,OAGVlY,KAAK2Y,aAAa3Y,KAAK0F,MAAMsS,OAAOY,M,mCAGzBxM,GACXpM,KAAKwG,UAAS,SAAAmC,GAAI,MAAK,CACrBuP,OAAQvP,EAAKuP,SAAW9L,EAAM,KAAOA,Q,mCAI5ByM,GACX7Y,KAAKwG,SAAS,CACZwR,OAAQa,EAAOvW,U,iCAIRA,GACT,IAAMI,EAAQkV,GAAUjM,QAAO,SAAAgM,GAAI,OACjCA,EAAKtV,KAAK/B,cAAcmC,WAAWH,EAAMhC,kBAG3CN,KAAKwG,SAAS,CACZmR,KAAMjV,EAAM+O,MAAM,EAAGgG,Q,2CAKvBzX,KAAKmY,MAAMnD,QAAQ8D,eAAe,CAAEC,SAAU,a,sEAKtC,IAAD,OACDvP,EAAOxJ,KAAK0F,MAAMsE,KAAKR,KAEvBwP,EAAkB,CACtBC,IAAK,QACLC,IAAK,YAGP,OACE,yBAAKhS,UAAU,OACb,kBAAC6K,GAAA,EAAD,KACE,kBAACA,GAAA,EAAK1Q,MAAN,yBACA,kBAAC0Q,GAAA,EAAKzQ,KAAN,KACE,kBAAC0H,GAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,KAAD,CACE5G,KAAK,UACLkF,YAAY,cACZ4R,cAAenZ,KAAKsY,WACpB9Q,SAAUxH,KAAKsM,aACf0F,QAAShS,KAAK0F,MAAMiS,KAAKzL,KAAI,SAAA2M,GAAM,MAAK,CACtCvW,MAAOuW,EACPhR,MAAM,GAAD,OAAKgR,EAAOxW,KAAZ,aAAqBwW,EAAOO,QAA5B,YAIX,yBAAKlS,UAAU,wBACb,kBAACpF,EAAA,EAAD,CACEC,QAAS/B,KAAKuY,aACdrW,UAAWlC,KAAK0F,MAAMsS,QAAUhY,KAAK0F,MAAMuS,WAE1CjY,KAAK0F,MAAMuS,UACV,8BACE,kBAAChQ,EAAA,EAAD,CACEC,GAAG,OACHC,UAAU,SACVC,KAAK,KACLC,KAAK,SACLC,cAAY,SACX,IAPL,gBAWA,8BACE,uBAAGpB,UAAU,kBADf,cAOR,kBAAC8B,GAAA,EAAD,KACE,kBAACqQ,GAAD,CACE9B,OACEvX,KAAK0F,MAAMsS,OACP,CACEiB,IAAKjZ,KAAK0F,MAAMsS,OAAOsB,MAAML,IAC7BC,IAAKlZ,KAAK0F,MAAMsS,OAAOsB,MAAMC,KAE/BP,EAEN1B,cAAe0B,EACf5G,KAAM,QAKb5I,GACC,kBAACuI,GAAA,EAAD,CAAM7K,UAAU,OAAO2I,IAAK7P,KAAKmY,OAC/B,kBAACpG,GAAA,EAAK1Q,MAAN,gCACA,kBAAC0Q,GAAA,EAAKzQ,KAAN,KACE,kBAACkY,GAAA,EAAD,KC9JC,SAAqBhQ,GAClC,IAAIiQ,EAAM,GAQV,OANAjQ,EAAKkQ,SAAQ,SAAA9N,GACX,IAAMF,EAAOE,EAAKL,OAAOC,UAAU,EAAG,KACX,IAAvBiO,EAAIE,QAAQjO,IACd+N,EAAIpK,KAAK3D,MAGN+N,EDsJQG,CAAYpQ,GAAM0C,KAAI,SAACR,EAAMU,GAAP,OACrB,yBAAKnB,IAAKmB,GACR,kBAAC2F,GAAA,EAAK5Q,OAAN,CAAa+F,UAAU,iBACrB,kBAAC8B,GAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK/B,UAAU,cACb,4BtBhKnB,SAAwBwE,GAa7B,MAZgB,CACd,SACA,SACA,UACA,YACA,WACA,SACA,YAGS,IAAIsI,KAAKtI,GAEFmO,UsBmJWC,CAAepO,IACnBA,GAGH,kBAACzC,EAAA,EAAD,CAAK/B,UAAU,cACb,kBAACsS,GAAA,EAAUO,OAAX,CACE7R,GAAIpG,IACJG,QAAQ,OACR+X,SAAU5N,EACVrK,QAAS,kBAAM,EAAKkY,aAAa7N,KAJnC,SAMS,IACP,uBACElF,UACE,+BACC,EAAKxB,MAAMwS,SAAW9L,EAAM,OAAS,UAOlD,kBAACoN,GAAA,EAAUU,SAAX,CAAoBF,SAAU5N,GAC5B,kBAAC2F,GAAA,EAAKzQ,KAAN,KACE,6BACE,kBAAC,GAAD,CAAgBkI,KAAMiC,GAAWC,EAAMlC,cAQrD,kBAACuI,GAAA,EAAKxQ,OAAN,KACE,kBAACO,EAAA,EAAD,CACEG,QAAQ,OACRiF,UAAU,iBACVnF,QAAS/B,KAAKma,YAAYzZ,KAAKV,OAE/B,uBAAGkH,UAAU,iBALf,iB,GAzLgB1F,a,6BEiJf4Y,G,iLA1JH,IACAvR,EAAe7I,KAAKQ,MAApBqI,WAER,OACE,kBAAC7B,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKI,MAAN,CAAY0B,UAAU,YACpB,kBAAC9B,EAAA,EAAKC,MAAN,iBACA,kBAACD,EAAA,EAAKK,QAAN,CACEC,KAAK,OACLjF,KAAK,WACLmF,SAAUxH,KAAKQ,MAAM2F,aACrBsB,WAAmC,IAAxBoB,EAAWlD,WAExB,kBAACqB,EAAA,EAAKK,QAAQM,SAAd,CAAuBL,KAAK,WAA5B,uFAKF,kBAACN,EAAA,EAAKgC,IAAN,KACE,kBAACC,EAAA,EAAD,KACE,kBAACjC,EAAA,EAAKI,MAAN,CAAY0B,UAAU,YACpB,kBAAC9B,EAAA,EAAKC,MAAN,iBACA,kBAACD,EAAA,EAAKK,QAAN,CACEC,KAAK,WACLjF,KAAK,WACLmF,SAAUxH,KAAKQ,MAAM2F,aACrBsB,WAAmC,IAAxBoB,EAAWjD,WAExB,kBAACoB,EAAA,EAAKK,QAAQM,SAAd,CAAuBL,KAAK,WAA5B,2EAMJ,kBAAC2B,EAAA,EAAD,KACE,kBAACjC,EAAA,EAAKI,MAAN,CAAY0B,UAAU,cACpB,kBAAC9B,EAAA,EAAKC,MAAN,yBACA,kBAACD,EAAA,EAAKK,QAAN,CACEC,KAAK,WACLjF,KAAK,aACLmF,SAAUxH,KAAKQ,MAAM2F,aACrBsB,WAAqC,IAA1BoB,EAAW4E,aAExB,kBAACzG,EAAA,EAAKK,QAAQM,SAAd,CAAuBL,KAAK,WAA5B,4BAMN,kBAACN,EAAA,EAAKgC,IAAN,KACE,kBAACC,EAAA,EAAD,KACE,kBAACjC,EAAA,EAAKI,MAAN,CAAY0B,UAAU,cACpB,kBAAC9B,EAAA,EAAKC,MAAN,mBACA,kBAACD,EAAA,EAAKK,QAAN,CACEC,KAAK,OACLjF,KAAK,aACLmF,SAAUxH,KAAKQ,MAAM2F,aACrBsB,WAAqC,IAA1BoB,EAAWK,aAExB,kBAAClC,EAAA,EAAKK,QAAQM,SAAd,CAAuBL,KAAK,WAA5B,wBAKJ,kBAAC2B,EAAA,EAAD,KACE,kBAACjC,EAAA,EAAKI,MAAN,CAAY0B,UAAU,aACpB,kBAAC9B,EAAA,EAAKC,MAAN,kBACA,kBAACD,EAAA,EAAKK,QAAN,CACEC,KAAK,OACLjF,KAAK,YACLmF,SAAUxH,KAAKQ,MAAM2F,aACrBsB,WAAoC,IAAzBoB,EAAWM,YAExB,kBAACnC,EAAA,EAAKK,QAAQM,SAAd,CAAuBL,KAAK,WAA5B,wBAMN,kBAACN,EAAA,EAAKI,MAAN,CAAY0B,UAAU,SACpB,kBAAC9B,EAAA,EAAKC,MAAN,cACA,kBAACD,EAAA,EAAKK,QAAN,CACEC,KAAK,QACLjF,KAAK,QACLmF,SAAUxH,KAAKQ,MAAM2F,aACrBsB,WAAgC,IAArBoB,EAAWO,QAExB,kBAACpC,EAAA,EAAKK,QAAQM,SAAd,CAAuBL,KAAK,WAA5B,0BAIF,kBAACN,EAAA,EAAKI,MAAN,CAAY0B,UAAU,WACpB,kBAAC9B,EAAA,EAAKC,MAAN,gBACA,kBAACD,EAAA,EAAKK,QAAN,CACEC,KAAK,OACLjF,KAAK,UACLmF,SAAUxH,KAAKQ,MAAM2F,aACrBsB,WAAkC,IAAvBoB,EAAWQ,UAExB,kBAACrC,EAAA,EAAKK,QAAQM,SAAd,CAAuBL,KAAK,WAA5B,oBAIF,kBAACN,EAAA,EAAKgC,IAAN,KACE,kBAACC,EAAA,EAAD,KACE,kBAACjC,EAAA,EAAKI,MAAN,CAAY0B,UAAU,UACpB,kBAAC9B,EAAA,EAAKC,MAAN,eAEA,kBAACD,EAAA,EAAKK,QAAN,CACEa,GAAG,SACH7F,KAAK,SACLmF,SAAUxH,KAAKQ,MAAM2F,cAErB,wCACA,0CACA,4CAIN,kBAAC8C,EAAA,EAAD,KACE,kBAACjC,EAAA,EAAKI,MAAN,CAAY0B,UAAU,gBACpB,kBAAC9B,EAAA,EAAKC,MAAN,qBACA,kBAACD,EAAA,EAAKK,QAAN,CACEC,KAAK,OACLjF,KAAK,eACLmF,SAAUxH,KAAKQ,MAAM2F,aACrBsB,WAAuC,IAA5BoB,EAAWU,eAExB,kBAACvC,EAAA,EAAKK,QAAQM,SAAd,CAAuBL,KAAK,WAA5B,0BAKJ,kBAAC2B,EAAA,EAAD,KACE,kBAACjC,EAAA,EAAKI,MAAN,CAAY0B,UAAU,QACpB,kBAAC9B,EAAA,EAAKC,MAAN,aACA,kBAACD,EAAA,EAAKK,QAAN,CACEa,GAAG,SACH7F,KAAK,OACL0G,aAAa,WACbvB,SAAUxH,KAAKQ,MAAM2F,aACrBjE,SAAUlC,KAAKQ,MAAMQ,MAErB,4CACA,kD,GAjJkBQ,aC2LnB6Y,G,YAlLb,WAAY7Z,GAAQ,IAAD,8BACjB,4CAAMA,KAEDkF,MAAQ,CACXC,SAAU,KACVC,SAAU,KACV6H,WAAY,KACZvE,WAAY,KACZC,UAAW,KACXI,aAAc,KACdH,MAAO,KACPE,OAAQ,OACRD,QAAS,KACThB,KAAM,WACNQ,WAAY,GACZ3C,WAAW,EACXsE,SAAS,EACTvE,SAAU,MAGZ,EAAKjE,SAAW,EAAKA,SAAStB,KAAd,gBAChB,EAAKgK,cAAgB,EAAKA,cAAchK,KAAnB,gBACrB,EAAKyF,aAAe,EAAKA,aAAazF,KAAlB,gBAtBH,E,0EAoCN+F,GAAQ,IAAD,EACMA,EAAMC,OAAtBrE,EADU,EACVA,KAAMC,EADI,EACJA,MAEdtC,KAAKwG,SAAL,eACGnE,EAAOC,IAGV,IAAME,EAAQJ,EAAYC,EAAMC,EAAOtC,KAAK0F,MAAME,UAE5CiD,EAAU,eAAQ7I,KAAK0F,MAAMmD,YACnCA,EAAWxG,GAAQG,EAEN,aAATH,GAAuBrC,KAAK0F,MAAM+H,aACpC5E,EAAU,WAAiBzG,EACzB,aACApC,KAAK0F,MAAM+H,WACXnL,IAGJtC,KAAKwG,SAAS,CACZqC,iB,oIAKF7I,KAAKwG,SAAS,CAAEgE,SAAS,I,EAYrBxK,KAAK0F,MATPC,E,EAAAA,SACAC,E,EAAAA,SACAsD,E,EAAAA,WACAC,E,EAAAA,UACAI,E,EAAAA,aACAH,E,EAAAA,MACAE,E,EAAAA,OACAD,E,EAAAA,QACAhB,E,EAAAA,KAGIqB,EAAO,CACX/D,WACAC,WACAsD,aACAC,YACAI,eACAH,QACAE,SACAD,UACAhB,QAGFrI,KAAKwG,UAAS,SAAA6E,GAAS,MAAK,CAAEwL,KAAMxL,EAAUwL,KAAO,M,mBAE/C7L,EAAiBtB,EAAM1J,KAAKQ,MAAMM,UAAWd,KAAK0K,gB,qFAG5C5F,GACZ,IAAMmB,EAAWa,EAAgBhC,GAEjC9E,KAAKwG,SAAS,CAAEN,WAAW,EAAMsE,SAAS,EAAOvE,e,iCAIjD,MAAO,sB,oCAGM,IAAD,EAURjG,KAAK0F,MAAMmD,WARblD,EAFU,EAEVA,SACA8H,EAHU,EAGVA,WACA7H,EAJU,EAIVA,SACAsD,EALU,EAKVA,WACAC,EANU,EAMVA,UACAI,EAPU,EAOVA,aACAH,EARU,EAQVA,MACAC,EATU,EASVA,QAGF,OACe,IAAb1D,IACa,IAAbC,IACe,IAAf6H,IACe,IAAfvE,IACc,IAAdC,IACiB,IAAjBI,IACU,IAAVH,IACY,IAAZC,I,gCAKF,OACE,6BACE,kBAAC,GAAD,CACErH,SAAUhC,KAAKgC,SACfmE,aAAcnG,KAAKmG,aACnB0C,WAAY7I,KAAK0F,MAAMmD,aAEzB,kBAACf,EAAA,EAAD,CACE7F,QAAQ,uBACR8F,MAA+B,IAAzB/H,KAAK0F,MAAMQ,WAEjB,oFAEE,6BACClG,KAAK0F,MAAMO,c,kCAOT,IACHuE,EAAYxK,KAAK0F,MAAjB8E,QACFhI,EAAQxC,KAAKkL,cAEnB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACrJ,EAAA,EAAD,CAAQC,QAAS/B,KAAKQ,MAAM+H,OAAQtG,QAAQ,QAAQC,SAAUsI,GAA9D,SAGA,kBAAC1I,EAAA,EAAD,CAAQC,QAAS/B,KAAKgC,SAAUE,SAAUsI,IAAYhI,IACvC,IAAZgI,EACC,oCACE,kBAACvC,EAAA,EAAD,CACEC,GAAG,OACHC,UAAU,SACVC,KAAK,KACLC,KAAK,SACLC,cAAY,SACX,IAPL,cAWA,oB,gDAjJsB8C,EAAWC,GACzC,OAAuB,IAAnBD,EAAUrD,KACL,CACLyC,SAAS,EACTtE,WAAW,GAIR,S,GAlCwB3F,GCW7B+Z,I,cAAY,CAChBC,KAAM,cACNC,KAAM,mBACNC,GAAI,mBA4WSC,G,YAxWb,WAAYla,GAAQ,IAAD,8BACjB,4CAAMA,KACDkF,MAAQ,CACXC,SAAU,KACVgV,cAAe,KAEf/M,MAAO,CACLgN,OAAQ,KACRlZ,MAAO,KACP0C,KAAM,MAGRyW,SAAU,CACRlV,SAAU2U,GAAUC,KACpBrR,WAAYoR,GAAUC,KACtBpR,UAAWmR,GAAUC,KACrBjR,OAAQgR,GAAUC,KAClBlR,QAASiR,GAAUC,KACnBnR,MAAOkR,GAAUC,KACjBhR,aAAc+Q,GAAUC,KACxBlS,KAAMiS,GAAUC,KAChBI,cAAeL,GAAUC,OAK7B,EAAKO,kBAAoB,EAAKA,kBAAkBpa,KAAvB,gBACzB,EAAKqa,mBAAqB,EAAKA,mBAAmBra,KAAxB,gBAE1B,EAAKsa,mBAAqB,EAAKA,mBAAmBta,KAAxB,gBA7BT,E,gFAgCA+F,GAAQ,IAAD,EACAA,EAAMC,OAAtBrE,EADgB,EAChBA,KAAMC,EADU,EACVA,MACdtC,KAAKQ,MAAMmL,OAAOtJ,EAAMC,K,wCAIR8J,GAAM,IACdzG,EAAa3F,KAAKQ,MAAMgJ,KAAK4C,GAA7BzG,SAER3F,KAAKwG,SAAS,CACZb,WACAiI,MAAO,CACLgN,OAAQ,SACRlZ,MAAM,iBACN0C,KACE,mEACqC,gCAASuB,GAD9C,oCAQN3F,KAAKQ,MAAMuH,KAAK6F,U,sCAGFxB,GAAM,IAAD,EACiBpM,KAAKQ,MAAMgJ,KAAK4C,GAA5CzG,EADW,EACXA,SAAUgV,EADC,EACDA,cAElB3a,KAAKwG,SAAS,CACZb,WACAgV,gBACA/M,MAAO,CACLgN,OAAQ,OACRlZ,MAAM,GAAD,OAAuB,SAAlBiZ,EAA2B,SAAW,OAA3C,YACLvW,KACE,oDACyC,SAAlBuW,EAA2B,SAAW,OAAQ,IADrE,WAEU,gCAAShV,OAMzB3F,KAAKQ,MAAMuH,KAAK6F,U,yCAGCxB,GAAM,IACfzG,EAAa3F,KAAKQ,MAAMgJ,KAAK4C,GAA7BzG,SAER3F,KAAKwG,SAAS,CAAEb,aAEhB3F,KAAKQ,MAAMuH,KAAKkT,S,0CAGE7O,GAAM,IAChBzG,EAAa3F,KAAKQ,MAAMgJ,KAAK4C,GAA7BzG,SAER3F,KAAKwG,SAAS,CAAEb,aAEhB3F,KAAKQ,MAAMuH,KAAKmT,e,0HAKhBlb,KAAKQ,MAAMgK,UAEH7E,EAAa3F,KAAK0F,MAAlBC,S,mBAEFqF,EACJrF,EACA3F,KAAKQ,MAAM2a,SAASC,gBACpBpb,KAAKQ,MAAM2a,SAASpa,Y,wKAKtBf,KAAKQ,MAAMgK,U,EAEyBxK,KAAK0F,MAAjCC,E,EAAAA,SAEc,W,EAFJgV,c,0CAGV3P,EACJrF,EACA3F,KAAKQ,MAAM2a,SAASE,cACpBrb,KAAKQ,MAAM2a,SAASpa,Y,uDAGhBiK,EACJrF,EACA3F,KAAKQ,MAAM2a,SAASG,gBACpBtb,KAAKQ,MAAM2a,SAASpa,Y,8EAInBwa,GAAW,IACVV,EAAa7a,KAAK0F,MAAlBmV,SAEAW,EAAaX,EAASU,GAExBC,IAAelB,GAAUC,MAC3BM,EAASU,GAAYjB,GAAUG,GAC/Bza,KAAKQ,MAAMqX,KAAK0D,EAAU,SACjBC,IAAelB,GAAUG,IAClCI,EAASU,GAAYjB,GAAUE,KAC/Bxa,KAAKQ,MAAMqX,KAAK0D,EAAU,OACjBC,IAAelB,GAAUE,OAClCK,EAASU,GAAYjB,GAAUG,GAC/Bza,KAAKQ,MAAMqX,KAAK0D,EAAU,SAG5Bvb,KAAKwG,SAAS,CACZqU,e,+BAIM,IAAD,OAaDY,EAAc,SAAApZ,GAAI,OACtB,kBAAC2E,EAAA,EAAKK,QAAN,CACEC,KAAK,OACLjF,KAAMA,EACN0G,aAAc,EAAKvI,MAAMkb,QAAQrZ,GACjCmF,SAAU,EAAKwT,sBAIbW,EAAe,SAACtZ,EAAM2P,GAAP,OACnB,kBAAChL,EAAA,EAAKK,QAAN,CACEa,GAAG,SACH7F,KAAMA,EACN0G,aAAc,EAAKvI,MAAMkb,QAAQrZ,GACjCmF,SAAU,EAAKwT,oBAEf,uCACChJ,EAAQ9F,KAAI,SAAC0P,EAAIxP,GAAL,OACX,4BAAQnB,IAAKmB,GAAMwP,QAKzB,OACE,kBAAC7J,GAAA,EAAD,KACE,kBAACA,GAAA,EAAK1Q,MAAN,yBACA,kBAAC0Q,GAAA,EAAKzQ,KAAN,KACE,kBAACgV,GAAA,EAAD,CAAOC,YAAU,EAACC,OAAK,EAACqF,SAAO,EAACzT,KAAK,MACnC,2BAAOlB,UAAU,gBACf,4BACE,wBAAI4U,MAAM,OAAV,KA1CK,CACf,WACA,aACA,YACA,SACA,UACA,QACA,eACA,OACA,iBAkCoB5P,KAAI,SAACqP,EAAUnP,GAAX,OACZ,wBAAI0P,MAAM,MAAM7Q,IAAKmB,GACnB,kBAACtK,EAAA,EAAD,CACEG,QAAQ,WACRF,QAAS,kBAAM,EAAKga,OAAOR,KAEE,kBAA5BA,EAASxb,eACN,SACAwb,EAASxb,eAAgB,IAC7B,uBAAGmH,UAAW,EAAKxB,MAAMmV,SAASU,UAIxC,wBAAIO,MAAM,OAAV,WAEF,4BACE,wBAAIA,MAAM,QACV,wBAAIA,MAAM,OAAOL,EAAY,aAC7B,wBAAIK,MAAM,OAAOL,EAAY,eAC7B,wBAAIK,MAAM,OAAOL,EAAY,cAC7B,wBAAIK,MAAM,OACPH,EAAa,SAAU,CAAC,OAAQ,SAAU,WAE7C,wBAAIG,MAAM,OAAOL,EAAY,YAC7B,wBAAIK,MAAM,OAAOL,EAAY,UAC7B,wBAAIK,MAAM,OAAOL,EAAY,iBAC7B,wBAAIK,MAAM,OACPH,EAAa,OAAQ,CAAC,QAAS,cAElC,wBAAIG,MAAM,OACPH,EAAa,gBAAiB,CAAC,OAAQ,cAI9C,+BACG3b,KAAKQ,MAAMgJ,KAAK0C,KAAI,SAACN,EAAMQ,GAAP,OACnB,wBAAInB,IAAKmB,GACP,4BAAKA,EAAM,GACX,4BAAKR,EAAKjG,UACV,4BAAKiG,EAAK1C,YACV,4BAAK0C,EAAKzC,WACV,4BAAKyC,EAAKtC,QACV,4BAAKsC,EAAKvC,SACV,4BAAKuC,EAAKxC,OACV,4BAAKwC,EAAKrC,cACV,4BAAKqC,EAAKvD,MACV,4BACE,kBAAC2T,GAAA,EAAD,CAAWC,QAAM,EAAC3U,KAAK,UACrB,kBAAC0U,GAAA,EAAUE,MAAX,CACEC,QAAgC,WAAvBvQ,EAAK+O,cACdnT,SAAUmC,QAAQC,IAClBnC,UAAkC,SAAvBmE,EAAK+O,gBAElB,kBAACqB,GAAA,EAAU/U,MAAX,CACElF,QAAS,kBAAM,EAAKqa,gBAAgBhQ,QAI1C,wBAAIlF,UAAU,aACZ,kBAACwJ,GAAA,EAAD,KACE,kBAAC5O,EAAA,EAAD,CACEua,WAAS,sBACTnV,UAAU,YACVnF,QAAS,kBAAM,EAAKua,mBAAmBlQ,IACvCnK,QAAQ,YAER,uBAAGiF,UAAU,sBAEf,kBAAC,KAAD,CAASqV,MAAM,MAAMjV,KAAK,OAAOkV,OAAO,UAExC,kBAAC1a,EAAA,EAAD,CACEua,WAAS,0BACTnV,UAAU,cACVnF,QAAS,kBAAM,EAAK0a,oBAAoBrQ,IACxCnK,QAAQ,YAER,uBAAGiF,UAAU,gBAEf,kBAAC,KAAD,CAASqV,MAAM,MAAMjV,KAAK,OAAOkV,OAAO,UAExC,kBAAC1a,EAAA,EAAD,CACEua,WAAS,iBACTnV,UAAU,WACVnF,QAAS,kBAAM,EAAK2a,kBAAkBtQ,IACtCnK,QAAQ,YAER,uBAAGiF,UAAU,kBAEf,kBAAC,KAAD,CAASqV,MAAM,MAAMjV,KAAK,OAAOkV,OAAO,kBAOxB,IAA3Bxc,KAAKQ,MAAMgJ,KAAKuB,QACf,yBAAK7D,UAAU,wBACb,uBAAGA,UAAU,+BACb,wBAAIA,UAAU,QAAd,gBAIN,kBAAC6K,GAAA,EAAKxQ,OAAN,CAAa2F,UAAU,0BACrB,kBAACpF,EAAA,EAAD,CAAQG,QAAQ,sBAAsBF,QAAS/B,KAAKQ,MAAMuH,KAAK0B,KAC7D,uBAAGvC,UAAU,gBADf,qBAKF,kBAAC,EAAD,CACEa,KAAM/H,KAAKQ,MAAMmc,QAAQ/O,MACzBrF,OAAQvI,KAAKQ,MAAMwO,KAAKpB,MACxBlM,MAAO1B,KAAK0F,MAAMkI,MAAMlM,MACxBQ,UAAmC,IAAzBlC,KAAKQ,MAAMoc,UACrBza,aAC2B,IAAzBnC,KAAKQ,MAAMoc,UACT,6BACE,kBAAC3U,EAAA,EAAD,CACEC,GAAG,OACHC,UAAU,SACVC,KAAK,KACLC,KAAK,SACLC,cAAY,SACX,IAPL,cAWA,iBAGJzG,OAAO,OACPG,SAC8B,SAA5BhC,KAAK0F,MAAMkI,MAAMgN,OACb5a,KAAK8a,kBACL9a,KAAK+a,oBAGV/a,KAAK0F,MAAMkI,MAAMxJ,MAGpB,kBAAC,EAAD,CACE2D,KAAM/H,KAAKQ,MAAMmc,QAAQ1B,KACzB1S,OAAQvI,KAAKQ,MAAMwO,KAAKiM,KACxBrS,QAAS5I,KAAKQ,MAAMgJ,KAAK6H,MACvB,SAAA3H,GAAI,OAAIA,EAAK/D,WAAa,EAAKD,MAAMC,YAEvC7E,UAAWd,KAAKQ,MAAM2a,SAAS0B,kBAGjC,kBAAC,GAAD,CACE9U,KAAM/H,KAAKQ,MAAMmc,QAAQlT,IACzBlB,OAAQvI,KAAKQ,MAAMwO,KAAKvF,IACxB3I,UAAWd,KAAKQ,MAAM2a,SAAS2B,eAGjC,kBAAC,GAAD,CACEnX,SAAU3F,KAAK0F,MAAMC,SACrBgD,KAAM3I,KAAKQ,MAAMgJ,KAAK6H,MACpB,SAAA3H,GAAI,OAAIA,EAAK/D,WAAa,EAAKD,MAAMC,YAEvCoC,KAAM/H,KAAKQ,MAAMmc,QAAQzB,WACzB3S,OAAQvI,KAAKQ,MAAMwO,KAAKkM,WACxBpa,UAAWd,KAAKQ,MAAM2a,SAAS4B,2B,GAlWbvb,aCVbwb,G,iLAbX,OACE,kBAAClV,EAAA,EAAD,CAAO7F,QAAQ,SAASiF,UAAU,OAChC,kBAACY,EAAA,EAAMmV,QAAP,mCACA,kEAEE,6BACCjd,KAAKQ,MAAMmM,QAHd,U,GALmBnL,a,qBCeZ0b,I,wLAXX,OACE,yBAAKhW,UAAU,mBACb,yBAAKA,UAAU,oBACb,kBAACqF,GAAA,EAAD,CAAOE,IAAK0Q,KAASjN,IAAI,YACzB,wBAAIhJ,UAAU,QAAd,iB,GANY1F,cCaP4b,I,+LAbX,OACE,yBAAKlW,UAAU,qBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,iBACb,uBAAGA,UAAU,uBAEf,iE,GARgB1F,cCmcX6b,G,YArbb,WAAY7c,GAAQ,IAAD,8BACjB,4CAAMA,KAEDkF,MAAQ,CAEX4X,WAAY,KACZC,SAAU,KACVzH,WAAY,CACVT,QAAS,EACTF,QAAS,EACTD,MAAO,GAITsI,MAAO,KACPC,SAAU,KACV9R,OAAQ,CACNhG,SAAU,GACVuD,WAAY,GACZC,UAAW,GACXG,OAAQ,MACRD,QAAS,GACTD,MAAO,GACPG,aAAc,GACdlB,KAAM,MACNsS,cAAe,OAIjB+C,YAAY,EACZC,cAAc,EACdC,cAAc,EACd1X,WAAW,EAEX2X,qBAAsB,KACtBC,uBAAwB,KACxBC,kBAAmB,KACnBvT,SAAS,EACTvE,SAAU,MAIZ,EAAK+X,2BAA6B,EAAKA,2BAA2Btd,KAAhC,gBAGlC,EAAKud,0BAA4B,EAAKA,0BAA0Bvd,KAA/B,gBACjC,EAAKwd,6BAA+B,EAAKA,6BAA6Bxd,KAAlC,gBAGpC,EAAKyd,4BAA8B,EAAKA,4BAA4Bzd,KAAjC,gBAKnC,EAAK0d,wBAA0B,EAAKA,wBAAwB1d,KAA7B,gBAC/B,EAAKgK,cAAgB,EAAK2T,wBAAwB3d,KAA7B,gBAGrB,EAAK4d,qBAAuB,EAAKA,qBAAqB5d,KAA1B,gBAG5B,EAAK6d,sBAAwB,EAAKA,sBAAsB7d,KAA3B,gBAC7B,EAAK8d,wBAA0B,EAAKA,wBAAwB9d,KAA7B,gBAC/B,EAAK+d,mBAAqB,EAAKA,mBAAmB/d,KAAxB,gBAG1B,EAAKge,wBAA0B,EAAKA,wBAAwBhe,KAA7B,gBAG/B,EAAKie,wBAA0B,EAAKA,wBAAwBje,KAA7B,gBAE/B,EAAKke,cAAgB,EAAKA,cAAcle,KAAnB,gBAGrB,EAAKme,uBAAyB,EAAKA,uBAAuBne,KAA5B,gBAC9B,EAAKoe,uBAAyB,EAAKA,uBAAuBpe,KAA5B,gBAE9B,EAAKqe,yBAA2B,EAAKA,yBAAyBre,KAA9B,gBAChC,EAAKse,yBAA2B,EAAKA,yBAAyBte,KAA9B,gBAEhC,EAAKyM,wBAA0B,EAAKA,wBAAwBzM,KAA7B,gBAC/B,EAAK4N,wBAA0B,EAAKA,wBAAwB5N,KAA7B,gBAG/B,EAAKqb,OAAS,EAAKA,OAAOrb,KAAZ,gBACd,EAAKue,aAAe,EAAKA,aAAave,KAAlB,gBArFH,E,iFAyFjBV,KAAKkf,gBACLlf,KAAKmf,oB,yCAGYC,EAAW/T,GAC5B,IAAK+T,EAAU5N,SAA2C,OAAhCnG,EAAU0S,kBAClC,IAA2B,IAAvB/d,KAAKQ,MAAMgR,QAAkBxR,KAAK4e,qBACjC,IAA2B,IAAvB5e,KAAKQ,MAAMgR,QAAmB,OAAOxR,KAAKqf,kB,mIC/GnCve,EDsHhBd,KAAKge,2BCtHsBjd,EDuH3Bf,KAAKie,+BCtHT9Y,EAAI,aAAcrE,EAAWC,K,iCADV,IAACD,EAAWC,I,8DD4HJiE,GACzBhF,KAAKwG,SAAS,CACZ+W,SAAUvY,EAAK6O,OACfgK,sBAAsB,M,gDAIA/Y,GACxB,IAAMmB,EAAWa,EAAgBhC,GAEjC9E,KAAKwG,SAAS,CACZqX,sBAAsB,EACtB5X,e,qICpIkBnF,ED0IlBd,KAAKke,6BC1IwBnd,ED2I7Bf,KAAKme,iCC1IThZ,EAAI,YAAarE,EAAWC,K,iCADP,IAACD,EAAWC,I,gEDgJJiE,GAC3B,IAAIgQ,EAAU,IAAIhB,KAElBhU,KAAKwG,SAAS,CACZ8W,WAAYtY,EAAK6O,OACjBiC,WAAY,CACVT,QAASL,EAAQI,aACjBD,QAASH,EAAQP,aACjBS,MAAOF,EAAQR,YAEjBsJ,wBAAwB,M,kDAIAhZ,GAC1B,IAAMmB,EAAWa,EAAgBhC,GAEjC9E,KAAKwG,SAAS,CACZsX,wBAAwB,EACxB7X,e,kIAMI+E,EAAkBhL,KAAKoe,wBAAyBpe,KAAK0K,gB,uFAI3D1K,KAAKwG,SAAS,CAAEiX,SAAU,GAAIM,mBAAmB,M,8CAI3BjZ,GACtB,IAAI0Y,EAAQ,GACZ,IAAK,IAAIpO,KAAYtK,EACfsK,EAAS3M,WAAW,UAClBqC,EAAIsK,GAAUzJ,WAAa3F,KAAKQ,MAAMmF,UACxC6X,EAAMnO,KAAKvK,EAAIsK,IAGrBpP,KAAKwG,SAAS,CAAEgX,QAAOC,SAAUD,EAAOO,mBAAmB,M,8CAGrCjZ,GACtB,IAAMmB,EAAWa,EAAgBhC,GAEjC9E,KAAKwG,SAAS,CAAEuX,mBAAmB,EAAO9X,e,0CAIxBW,GAAM,IAAD,OACfjB,EAAuBiB,EAAvBjB,SAAUC,EAAagB,EAAbhB,SAEZgJ,EAAU5O,KAAK0F,MAAM8X,MAAMtR,KAAI,SAAAxC,GAKnC,OAJIA,EAAK/D,WAAaA,IACpB+D,EAAK9D,SAAWA,GAGX8D,KAGT1J,KAAKwG,UAAS,SAAA6E,GAAS,MAAK,CAC1BmS,MAAO5O,EACP6O,SAAU,EAAK9R,OAAOiD,EAASvD,EAAUM,c,8CAKrB7G,EAAK8B,GAAM,IAAD,OAChC5G,KAAKwG,UAAS,SAAA6E,GAAS,MAAK,CAC1BmS,MAAOnS,EAAUmS,MAAM7R,QAAO,SAAAjC,GAAI,OAAIA,EAAK/D,WAAaiB,EAAIjB,YAC5D8X,SAAU,EAAK9R,OACbN,EAAUmS,MAAM7R,QAAO,SAAAjC,GAAI,OAAIA,EAAK/D,WAAaiB,EAAIjB,YACrD0F,EAAUM,QAGZzF,WAAW,EACXsE,SAAS,Q,2CAKQ1F,EAAK8B,GAAM,IAAD,OACvB0Y,EAAO,eAAQ1Y,EAAR,CAAa+T,cAAe,WAEnC6C,EAAUxd,KAAK0F,MAAf8X,MACNA,EAAMnO,KAAKiQ,GAEXtf,KAAKwG,UAAS,SAAA6E,GAAS,MAAK,CAC1BmS,QACAC,SAAU,EAAK9R,OAAO6R,EAAOnS,EAAUM,QACvCgS,cAAc,Q,4CAKI7Y,EAAK8B,GACzB5G,KAAKye,mBAAmB7X,EAAIjB,SAAU,U,8CAGhBb,EAAK8B,GAC3B5G,KAAKye,mBAAmB7X,EAAIjB,SAAU,Y,yCAGrBA,EAAUD,GAAQ,IAAD,OAC5BkJ,EAAU5O,KAAK0F,MAAM8X,MAAMtR,KAAI,SAAAxC,GAEnC,OADIA,EAAK/D,WAAaA,IAAU+D,EAAKiR,cAAgBjV,GAC9CgE,KAGT1J,KAAKwG,UAAS,SAAA6E,GAAS,MAAK,CAC1BmS,MAAO5O,EACP6O,SAAU,EAAK9R,OAAOiD,EAASvD,EAAUM,QACzCzF,WAAW,EACXsE,SAAS,Q,8CAKW1F,EAAK8B,GAAM,IACzBjB,EAAaiB,EAAbjB,SAEJ2Z,EAAUtf,KAAK0F,MAAM8X,MAAMnM,MAAK,SAAA3H,GAAI,OAAIA,EAAK/D,WAAaA,KAE9D,IAAK,IAAIsF,KAAOrE,EACF,aAARqE,GAA8B,UAARA,IAAiBqU,EAAQrU,GAAOrE,EAAIqE,IAEhEjL,KAAKwG,SAAS,CAAEkX,YAAY,IAE5B1d,KAAKif,iB,gDAKLjf,KAAKwG,SAAS,CAAEoX,cAAc,M,gDAI9B5d,KAAKwG,SAAS,CAAEoX,cAAc,M,+CAI9B5d,KAAKwG,SAAS,CAAEkX,YAAY,M,+CAI5B1d,KAAKwG,SAAS,CAAEkX,YAAY,M,iDAI5B1d,KAAKwG,SAAS,CAAEmX,cAAc,M,iDAI9B3d,KAAKwG,SAAS,CAAEmX,cAAc,M,kCAI9B3d,KAAKwG,SAAS,CAAEN,WAAW,M,kCAI3BlG,KAAKwG,SAAS,CAAEN,WAAW,M,gCAI3BlG,KAAKwG,SAAS,CAAEgE,SAAS,M,mCAIdnI,EAAMC,GAAQ,IAAD,EACEtC,KAAK0F,MAAvB8X,EADgB,EAChBA,MAAO7R,EADS,EACTA,OAEXtJ,IAAMsJ,EAAOtJ,GAAQC,GAEzBtC,KAAKwG,SAAS,CAAEiX,SAAUzd,KAAK2L,OAAO6R,EAAO7R,GAASA,a,6BAGjD6R,EAAO7R,GAeZ,OAdiB6R,EAAM7R,QACrB,SAAAjC,GAAI,OACFA,EAAK/D,SAASlD,WAAWkJ,EAAOhG,WAChC+D,EAAKP,UAAU1G,WAAWkJ,EAAOxC,YACjCO,EAAKR,WAAWzG,WAAWkJ,EAAOzC,aAClCQ,EAAKL,QAAQ5G,WAAWkJ,EAAOtC,UAC/BK,EAAKN,MAAM3G,WAAWkJ,EAAOvC,QAC7BM,EAAKH,aAAa9G,WAAWkJ,EAAOpC,gBACnCG,EAAKJ,SAAWqC,EAAOrC,QAA4B,QAAlBqC,EAAOrC,UACxCI,EAAKrB,OAASsD,EAAOtD,MAAwB,QAAhBsD,EAAOtD,QACpCqB,EAAKiR,gBAAkBhP,EAAOgP,eACJ,QAAzBhP,EAAOgP,oB,6BAORY,EAAUgE,GAAS,IACpBC,EADmB,OAGR,OAAXD,EACFC,EAAS,aAAIxf,KAAK0F,MAAM8X,OAAO3F,MAAK,SAACC,EAAGC,GAAJ,OAClCD,EAAEyD,GAAYxD,EAAEwD,GAAY,EAAIxD,EAAEwD,GAAYzD,EAAEyD,IAAa,EAAI,KAEjD,SAAXgE,IACPC,EAAS,aAAIxf,KAAK0F,MAAM8X,OAAO3F,MAAK,SAACC,EAAGC,GAAJ,OAClCD,EAAEyD,GAAYxD,EAAEwD,GAAY,EAAIxD,EAAEwD,GAAYzD,EAAEyD,IAAa,EAAI,MAGrEvb,KAAKwG,UAAS,SAAA6E,GAAS,MAAK,CAC1BmS,MAAOgC,EACP/B,SAAU,EAAK9R,OAAO6T,EAAQnU,EAAUM,c,+BAIlC,IAAD,OACD8T,EACJzf,KAAKQ,MAAMkf,qBACX1f,KAAK0F,MAAMqY,mBACX/d,KAAK0F,MAAMmY,sBACX7d,KAAK0F,MAAMoY,uBASb,GAPAnU,QAAQC,IAAR,8BACyB5J,KAAKQ,MAAMkf,oBADpC,2CAEgC1f,KAAK0F,MAAMqY,kBAF3C,0CAG+B/d,KAAK0F,MAAMmY,qBAH1C,0CAI+B7d,KAAK0F,MAAMoY,0BAGrB,IAAjB2B,EACF,OACE,yBAAKvY,UAAU,eACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOyY,OAAK,EAACzO,KAAK,cAChB,kBAAC,GAAD,CACEe,MAAOjS,KAAK0F,MAAM6X,SAClBpH,QAASnW,KAAK0F,MAAM4X,WACpBxH,WAAY9V,KAAK0F,MAAMoQ,WACvBG,eAAgB,kBAAM,EAAKkJ,sBAG/B,kBAAC,IAAD,CAAOjO,KAAK,uBACRlR,KAAKQ,MAAMgR,QAGX,yBAAKtK,UAAU,OACb,kBAAC,GAAD,CACE0Y,MAAO5f,KAAKQ,MAAMgR,QAClBhI,KAAMxJ,KAAK0F,MAAM+X,SAAS9R,QACxB,SAAAjC,GAAI,OAAIA,EAAK/D,WAAa,EAAKnF,MAAMmF,YAEvCM,SAAUjG,KAAK0F,MAAMO,SACrBuE,QAAS,kBAAM,EAAKA,WACpBoS,UAAW5c,KAAK0F,MAAM8E,QACtBqN,KAAM7X,KAAK+b,OACXpQ,OAAQ3L,KAAKif,aACbvD,QAAS1b,KAAK0F,MAAMiG,OACpBwP,SAAU,CACR2B,aAAc9c,KAAKse,qBACnBzB,gBAAiB7c,KAAK2e,wBACtBvD,gBAAiBpb,KAAK0e,wBACtBrD,cAAerb,KAAKue,sBACpBjD,gBAAiBtb,KAAKwe,wBACtBzd,UAAWf,KAAK0K,eAElB3C,KAAM,CACJkT,KAAMjb,KAAK6e,uBACXpV,IAAKzJ,KAAKgf,yBACV9D,WAAYlb,KAAKmN,wBACjBS,MAAO,kBAAM,EAAK1H,cAEpB8I,KAAM,CACJiM,KAAMjb,KAAK8e,uBACXrV,IAAKzJ,KAAK+e,yBACV7D,WAAYlb,KAAKsO,wBACjBV,MAAO,kBAAM,EAAKrH,cAEpBoW,QAAS,CACP1B,KAAMjb,KAAK0F,MAAMgY,WACjBjU,IAAKzJ,KAAK0F,MAAMiY,aAChBzC,WAAYlb,KAAK0F,MAAMkY,aACvBhQ,MAAO5N,KAAK0F,MAAMQ,cAtCxB,kBAAC,IAAD,CAAUa,GAAG,OA4CjB,kBAAC,IAAD,CAAOmK,KAAK,wBACV,kBAAC2O,GAAD,OAEF,kBAAC,IAAD,CAAO3O,KAAK,sBACV,kBAAC,GAAD,SAKL,IAAqB,IAAjBuO,EAAwB,CAC/B,IAAM9S,EAAU3M,KAAKQ,MAAMyF,UAAYjG,KAAK0F,MAAMO,SAClD,OAAO,kBAAC,GAAD,CAAc0G,QAASA,IACzB,OAAO,kBAAC,GAAD,U,GAlbSnL,aEwEZL,I,mBA3Eb,WAAYX,GAAQ,IAAD,8BACjB,4CAAMA,KAEDkF,MAAQ,CACX+C,QAAS,KACTG,QAAS,KACT6W,aAAc,KACdK,gBAAiB,MAGnB,EAAKC,0BAA4B,EAAKA,0BAA0Brf,KAA/B,gBACjC,EAAKsf,0BAA4B,EAAKA,0BAA0Btf,KAA/B,gBAXhB,E,uFAcOoE,GACxB,IAAIgb,EAAkB,WAElBhb,IAAKgb,EAAkBhZ,EAAgBhC,EAAIG,aAE/CjF,KAAKwG,SAAS,CACZiZ,cAAc,EACdK,sB,iIAKI9U,EACJhL,KAAK+f,0BACL/f,KAAKggB,4B,iGAIiBlb,GACWA,EAA3BG,WADsB,IACP2D,EADM,YACM9D,EADN,gBAG7B9E,KAAKwG,SAAS,CAAEoC,UAAS6W,cAAc,M,0CAIvC,IAAMpa,EAAQC,aAAaC,QAAQ,SACnCvF,KAAKwG,SAAS,CAAEiC,QAAmB,OAAVpD,IAEzBrF,KAAKigB,iB,+BAIL,IAA2B,IAAvBjgB,KAAK0F,MAAM+C,QAAmB,OAAO,kBAAC,IAAD,CAAU1B,GAAG,MAD/C,IAGC6B,EAAY5I,KAAK0F,MAAjBkD,QAEF4I,EAAU5I,EAA2B,UAAjBA,EAAQP,KAAmB,KAE/C1C,EAAWiD,EAAUA,EAAQjD,SAAW,KAE9C,OACE,yBAAKuB,UAAU,oBACb,yBAAKA,UAAU,mBACb,kBAAC,GAAD,CAASsK,QAASA,KAEpB,yBAAKtK,UAAU,iBACb,kBAAC,GAAD,CAAQ0B,QAAS5I,KAAK0F,MAAMkD,WAE9B,yBAAK1B,UAAU,qBACb,kBAAC,GAAD,CACEwY,oBAAqB1f,KAAK0F,MAAM+Z,aAChCxZ,SAAUjG,KAAK0F,MAAMoa,gBACrBna,SAAUA,EACV6L,QAASA,U,GApEAhQ,c,OCHrB0e,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOR,OAAK,EAACzO,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,cACV,kBAAC,GAAD,SAINkP,SAASC,eAAe,U,mBCvB1B1gB,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.09df4e3b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.69465cf0.gif\";","String.prototype.toProperCase = function() {\r\n  return this.replace(\"_\", \" \").replace(/\\w\\S*/g, function(txt) {\r\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Modal } from \"react-bootstrap\";\r\n\r\nclass CenteredModal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.getTitle = this.getTitle.bind(this);\r\n    this.getBody = this.getBody.bind(this);\r\n    this.getFooter = this.getFooter.bind(this);\r\n  }\r\n\r\n  getTitle() {}\r\n\r\n  getBody() {}\r\n\r\n  getFooter() {}\r\n\r\n  render() {\r\n    const { onSuccess, onFailure, self, ...rest } = this.props;\r\n    return (\r\n      <Modal {...rest} centered>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{this.getTitle()}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{this.getBody()}</Modal.Body>\r\n        <Modal.Footer>{this.getFooter()}</Modal.Footer>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nCenteredModal.propTypes = {\r\n  self: PropTypes.bool\r\n};\r\n\r\nexport default CenteredModal;\r\n","import React from \"react\";\r\nimport CenteredModal from \"../CenteredModal\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nclass CenteredAlert extends CenteredModal {\r\n  constructor(props) {\r\n    super(props);\r\n    this.getTitle = this.getTitle.bind(this);\r\n    this.getBody = this.getBody.bind(this);\r\n    this.getFooter = this.getFooter.bind(this);\r\n  }\r\n\r\n  getTitle() {\r\n    return this.props.title;\r\n  }\r\n\r\n  getBody() {\r\n    return this.props.children;\r\n  }\r\n\r\n  getFooter() {\r\n    const style = this.props.danger ? \"danger\" : \"primary\";\r\n    return (\r\n      <Button\r\n        onClick={this.props.onSubmit}\r\n        variant={style}\r\n        disabled={this.props.disabled}\r\n      >\r\n        {this.props.button_name}\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CenteredAlert;\r\n","export default function handleInput(name, value, targetValue = null) {\r\n  let valid = null;\r\n\r\n  if (value.startsWith(\" \")) return false;\r\n\r\n  switch (name) {\r\n    case \"username\":\r\n      valid = value.match(/^[a-zA-Z0-9.\\-_$@*!]{5,10}$/) ? true : false;\r\n      break;\r\n    case \"password\":\r\n      valid = value.match(/^[a-zA-Z0-9!@#$%^&*]{5,15}$/) ? true : false;\r\n      break;\r\n    case \"cfPassword\":\r\n      let targetValid = value.match(/^[a-zA-Z0-9!@#$%^&*]{5,15}$/)\r\n        ? true\r\n        : false;\r\n      valid = value === targetValue && targetValid;\r\n      break;\r\n    case \"last_name\":\r\n    case \"first_name\":\r\n      valid = value.match(/^[a-zA-Z0-9 ]{3,30}$/) ? true : false;\r\n      break;\r\n    case \"email\":\r\n      valid = /^\\w+([-]?\\w+)*@\\w+([-]?\\w+)*(\\.\\w{2,3})+$/.test(value)\r\n        ? true\r\n        : false;\r\n      break;\r\n    case \"phone_number\":\r\n      valid = value.match(\r\n        /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/\r\n      )\r\n        ? true\r\n        : false || value.startsWith(\"+\");\r\n      break;\r\n    case \"address\":\r\n      valid = value.match(/^[a-zA-Z0-9,/ .\\-_$@*!]{3,100}$/) ? true : false;\r\n      break;\r\n    default:\r\n      return null;\r\n  }\r\n\r\n  return valid;\r\n}\r\n","export const PROXY = \"https://cors-anywhere.herokuapp.com/\";\r\nexport const BASE = \"http://54.237.117.36\";\r\n\r\nexport const POST = \"POST\";\r\nexport const GET = \"GET\";\r\n\r\nexport const ERRORS = {\r\n  C1: \"Unknown Error\",\r\n  C2: \"Wrong Request Format\",\r\n  C3: \"This Feature Is Now Under Maintenance\",\r\n\r\n  C100: \"User-related Errors\",\r\n  C101: \"Wrong Parameter Format\",\r\n  C102: \"Incorrect Credentials\",\r\n  C103: \"Request Missing Arguments\",\r\n  C104: \"Incorrect Token\",\r\n  C105: \"Username Has Already Existed\",\r\n  C106: \"Permission Denied\",\r\n  C107: \"Account Doesn't Exist\",\r\n  C108: \"Locked Account\",\r\n\r\n  C200: \"Device-related Unknown Error\",\r\n  C201: \"Device Id Is Incorrect\",\r\n  C202: \"Operation Id Is Incorrect\",\r\n  C203: \"Operation Parameters Are Incorrect\",\r\n\r\n  C300: \"Mysql Query Error\",\r\n  C301: \"Redis Database Error\"\r\n};\r\n","import { PROXY, BASE, POST, GET } from \"./const\";\r\n\r\nexport const post = (endpoint, body, onSuccess, onFailure) => {\r\n  const url = `${PROXY}${BASE}:3000${endpoint}`;\r\n\r\n  fetch(url, {\r\n    method: POST,\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Origin: \"http://localhost\"\r\n    },\r\n    body: JSON.stringify(body)\r\n  })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      if (data.error_code === 0) onSuccess(data, body);\r\n      else onFailure(data);\r\n    })\r\n    .catch(onFailure);\r\n};\r\n\r\nexport const get = (endpoint, onSuccess, onFailure) => {\r\n  const url = `${PROXY}${BASE}${endpoint}`;\r\n\r\n  fetch(url, {\r\n    method: GET,\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": \"application/json\",\r\n      Origin: \"http://localhost\"\r\n    }\r\n  })\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      if (data.error_code === 0) onSuccess(data);\r\n      else onFailure(data);\r\n    })\r\n    .catch(onFailure);\r\n};\r\n","import { post } from \"./base\";\r\n\r\nexport const login = (username, password, onSuccess, onFailure) => {\r\n  const body = {\r\n    username,\r\n    password\r\n  };\r\n\r\n  post(\"/login\", body, onSuccess, onFailure);\r\n};\r\n\r\nexport const logout = () => {\r\n  const body = {\r\n    token: localStorage.getItem(\"token\")\r\n  };\r\n\r\n  post(\"/logout\", body, () => {});\r\n};\r\n","import * as CONST from \"./const\";\r\n\r\nexport default function(res) {\r\n  if (!res || !res.error_code) return \"Unknow error!\";\r\n\r\n  const message =\r\n    `Code ${res.error_code}: ` + CONST.ERRORS[`C${res.error_code}`];\r\n\r\n  return message;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Form, Button, Spinner, Alert } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport CenteredAlert from \"../CenteredAlert\";\r\n\r\nimport handleInput from \"../../logic/validation\";\r\nimport * as sessionServices from \"../../services/session\";\r\n\r\nimport \"./style.css\";\r\n\r\nimport getErrorMessage from \"../../services/error\";\r\n\r\nclass LoginForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: null,\r\n      password: null,\r\n      usernameValid: null,\r\n      passwordValid: null,\r\n      isAuthening: null,\r\n      success: null,\r\n      response: null,\r\n      showAlert: false\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n\r\n    this.handleLoginFailure = this.handleLoginFailure.bind(this);\r\n    this.handleLoginSuccess = this.handleLoginSuccess.bind(this);\r\n\r\n    this.hideAlert = this.hideAlert.bind(this);\r\n    this.showAlert = this.showAlert.bind(this);\r\n  }\r\n\r\n  hideAlert() {\r\n    this.setState({ showAlert: false });\r\n  }\r\n\r\n  showAlert() {\r\n    this.setState({ showAlert: true });\r\n  }\r\n\r\n  handleChange(event) {\r\n    const { name, value } = event.target;\r\n\r\n    const valid = handleInput(name, value);\r\n\r\n    this.setState({\r\n      [name]: value,\r\n      [name + \"Valid\"]: valid\r\n    });\r\n  }\r\n\r\n  async handleLogin(event) {\r\n    event.preventDefault();\r\n\r\n    this.setState({\r\n      isAuthening: true\r\n    });\r\n\r\n    await sessionServices.login(\r\n      this.state.username,\r\n      this.state.password,\r\n      this.handleLoginSuccess,\r\n      this.handleLoginFailure\r\n    );\r\n  }\r\n\r\n  handleLoginSuccess(res, req) {\r\n    localStorage.setItem(\"token\", res.token);\r\n    this.setState({ success: true, isAuthening: false });\r\n  }\r\n\r\n  handleLoginFailure(res) {\r\n    const response = getErrorMessage(res);\r\n\r\n    this.setState({ success: false, isAuthening: false, response });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.success) return <Redirect to=\"/dashboard\" />;\r\n\r\n    return (\r\n      <Form onSubmit={this.handleLogin}>\r\n        <Form.Label className=\"mb-4\">\r\n          <h2>Sign in</h2>\r\n          <small>\r\n            If you don't have an account, please contact admin to{\" \"}\r\n            <a href=\"#sign-up\">sign up</a>\r\n          </small>\r\n        </Form.Label>\r\n        <Form.Group>\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"eg: admin\"\r\n            name=\"username\"\r\n            onChange={this.handleChange}\r\n            isInvalid={this.state.usernameValid === false}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Username is between 5 and 10 characters long and do not contain\r\n            special characters\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"eg: admin\"\r\n            name=\"password\"\r\n            onChange={this.handleChange}\r\n            isInvalid={this.state.passwordValid === false}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Password is between 5 and 15 characters long and do not contain\r\n            space\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Form.Check type=\"checkbox\" label=\"Remember me\" />\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Alert variant=\"danger p-2\" show={this.state.success === false}>\r\n            <small>\r\n              Oops! You got an error!.\r\n              <br />\r\n              {this.state.response}.\r\n            </small>\r\n          </Alert>\r\n        </Form.Group>\r\n        <Form.Group>\r\n          <Button\r\n            type=\"submit\"\r\n            block\r\n            disabled={\r\n              !this.state.passwordValid ||\r\n              !this.state.usernameValid ||\r\n              this.state.isAuthening\r\n            }\r\n          >\r\n            {this.state.isAuthening ? (\r\n              <div>\r\n                <Spinner\r\n                  as=\"span\"\r\n                  animation=\"border\"\r\n                  size=\"sm\"\r\n                  role=\"status\"\r\n                  aria-hidden=\"true\"\r\n                />{\" \"}\r\n                Processing\r\n              </div>\r\n            ) : (\r\n              \"Sign in\"\r\n            )}\r\n          </Button>\r\n        </Form.Group>\r\n\r\n        <a href=\"#forgot-pswd\" onClick={this.showAlert}>\r\n          Forgot your password?\r\n        </a>\r\n        <CenteredAlert\r\n          show={this.state.showAlert}\r\n          onHide={this.hideAlert}\r\n          title=\"Forgot Your Password?\"\r\n          button_name=\"OK\"\r\n          onSubmit={this.hideAlert}\r\n        >\r\n          Please contact administrator to reset your password.\r\n        </CenteredAlert>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, { Component } from \"react\";\r\nimport LoginForm from \"../LoginForm\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport \"./style.css\";\r\n\r\nclass HomeBanner extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLogin: null,\r\n      showAlert: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem(\"token\");\r\n    this.setState({ isLogin: token !== null });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isLogin === true) return <Redirect to=\"/dashboard\" />;\r\n\r\n    return (\r\n      <section className=\"home-banner-area\">\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-end fullscreen\">\r\n            <div className=\"col-lg-10 col-md-12 home-banner-left d-flex fullscreen align-items-center\">\r\n              <div className=\"\">\r\n                <div className=\"title\">\r\n                  <h1>\r\n                    Smart <span className=\"blue-text\">IoT </span>\r\n                    Eco\r\n                  </h1>\r\n                </div>\r\n                <div className=\"login-form\">\r\n                  <LoginForm />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-2 col-md-12\" />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomeBanner;\r\n","import React, { Component } from \"react\";\r\nimport { Form, Col } from \"react-bootstrap\";\r\n\r\nclass AccountEditorForm extends Component {\r\n  render() {\r\n    let prev = this.props.profile;\r\n    const { validation } = this.props;\r\n\r\n    if (!prev) return <p>Fail to fetch!</p>;\r\n    else\r\n      return (\r\n        <Form>\r\n          <Form.Group controlId=\"username\">\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"username\"\r\n              defaultValue={prev.username}\r\n              disabled\r\n            />\r\n          </Form.Group>\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Group controlId=\"first_name\">\r\n                <Form.Label>First Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"first_name\"\r\n                  defaultValue={prev.first_name}\r\n                  onChange={this.props.handleChange}\r\n                  isInvalid={validation.first_name === false}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Invalid first name\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              <Form.Group controlId=\"last_name\">\r\n                <Form.Label>Last Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"last_name\"\r\n                  defaultValue={prev.last_name}\r\n                  onChange={this.props.handleChange}\r\n                  isInvalid={validation.last_name === false}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Invalid last name\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Col>\r\n          </Form.Row>\r\n          <Form.Group controlId=\"email\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              name=\"email\"\r\n              defaultValue={prev.email}\r\n              onChange={this.props.handleChange}\r\n              isInvalid={validation.email === false}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Invalid email address\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Group controlId=\"address\">\r\n            <Form.Label>Address</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"address\"\r\n              defaultValue={prev.address}\r\n              onChange={this.props.handleChange}\r\n              isInvalid={validation.address === false}\r\n            />\r\n            <Form.Control.Feedback type=\"invalid\">\r\n              Invalid address\r\n            </Form.Control.Feedback>\r\n          </Form.Group>\r\n          <Form.Row>\r\n            <Col>\r\n              <Form.Group controlId=\"gender\">\r\n                <Form.Label>Gender</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  name=\"gender\"\r\n                  defaultValue={prev.gender}\r\n                  onChange={this.props.handleChange}\r\n                >\r\n                  <option>Male</option>\r\n                  <option>Female</option>\r\n                  <option>Other</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              <Form.Group controlId=\"phone_number\">\r\n                <Form.Label>Phone Number</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  name=\"phone_number\"\r\n                  defaultValue={prev.phone_number}\r\n                  onChange={this.props.handleChange}\r\n                  isInvalid={validation.phone_number === false}\r\n                />\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                  Invalid phone number\r\n                </Form.Control.Feedback>\r\n              </Form.Group>\r\n            </Col>\r\n            <Col>\r\n              <Form.Group controlId=\"role\">\r\n                <Form.Label>Role</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  name=\"role\"\r\n                  defaultValue={prev.role}\r\n                  onChange={this.props.handleChange}\r\n                  disabled={this.props.self}\r\n                >\r\n                  <option>standard</option>\r\n                  <option>admin</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Col>\r\n          </Form.Row>\r\n        </Form>\r\n      );\r\n  }\r\n}\r\n\r\nexport default AccountEditorForm;\r\n","import { post } from \"./base\";\r\n\r\nexport const list = (onSuccess, onFailure) => {\r\n  const body = {\r\n    token: localStorage.getItem(\"token\")\r\n  };\r\n\r\n  post(\"/admin/list-user\", body, onSuccess, onFailure);\r\n};\r\n\r\nexport const add = (user, onSuccess, onFailure) => {\r\n  const body = {\r\n    token: localStorage.getItem(\"token\"),\r\n    ...user\r\n  };\r\n\r\n  console.log(body);\r\n\r\n  post(\"/admin/add-user\", body, onSuccess, onFailure);\r\n};\r\n\r\nexport const remove = (username, onSuccess, onFailure) => {\r\n  const body = {\r\n    token: localStorage.getItem(\"token\"),\r\n    username\r\n  };\r\n\r\n  post(\"/admin/delete-user\", body, onSuccess, onFailure);\r\n};\r\n\r\nexport const view = (onSuccess, onFailure) => {\r\n  const body = {\r\n    token: localStorage.getItem(\"token\")\r\n  };\r\n\r\n  post(\"/user/info\", body, onSuccess, onFailure);\r\n};\r\n\r\nexport const modify = (info, onSuccess, onFailure) => {\r\n  const body = {\r\n    token: localStorage.getItem(\"token\"),\r\n    ...info\r\n  };\r\n\r\n  post(\"/admin/modify-user\", body, onSuccess, onFailure);\r\n};\r\n\r\nexport const modifySelf = (info, onSuccess, onFailure) => {\r\n  const body = {\r\n    token: localStorage.getItem(\"token\"),\r\n    ...info\r\n  };\r\n\r\n  post(\"/user/modify-user\", body, onSuccess, onFailure);\r\n};\r\n\r\nexport const changePassword = (username, password, onSuccess, onFailure) => {\r\n  const body = {\r\n    token: localStorage.getItem(\"token\"),\r\n    username,\r\n    password\r\n  };\r\n\r\n  post(\"/admin/modify-user\", body, onSuccess, onFailure);\r\n};\r\n\r\nexport const changeSelfPassword = (password, onSuccess, onFailure) => {\r\n  const body = {\r\n    token: localStorage.getItem(\"token\"),\r\n    password\r\n  };\r\n\r\n  post(\"/user/modify-user\", body, onSuccess, onFailure);\r\n};\r\nexport const lock = (username, onSuccess, onFailure) => {\r\n  const body = {\r\n    token: localStorage.getItem(\"token\"),\r\n    username\r\n  };\r\n\r\n  post(\"/admin/lock-user\", body, onSuccess, onFailure);\r\n};\r\n\r\nexport const unlock = (username, onSuccess, onFailure) => {\r\n  const body = {\r\n    token: localStorage.getItem(\"token\"),\r\n    username\r\n  };\r\n\r\n  post(\"/admin/unlock-user\", body, onSuccess, onFailure);\r\n};\r\n\r\nexport const data = (onSuccess, onFailure) => {\r\n  const body = {\r\n    token: localStorage.getItem(\"token\")\r\n  };\r\n\r\n  post(\"/iot/data\", body, onSuccess, onFailure);\r\n};\r\n","import CenteredModal from \"../CenteredModal/index\";\r\nimport React from \"react\";\r\nimport { Button, ButtonToolbar, Spinner, Alert } from \"react-bootstrap\";\r\nimport AccountEditorForm from \"./form\";\r\n\r\nimport * as userServices from \"../../services/user\";\r\n\r\nimport getErrorMessage from \"../../services/error\";\r\n\r\nimport handleInput from \"../../logic/validation\";\r\n\r\nclass AccountEditorModal extends CenteredModal {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      profile: { ...props.profile },\r\n      prevProfile: props.profile,\r\n      validation: {},\r\n      process: false,\r\n      showAlert: false,\r\n      change: false,\r\n      response: null\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleFailure = this.handleFailure.bind(this);\r\n\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (nextProps.show === false) {\r\n      return {\r\n        profile: null,\r\n        prevProfile: null,\r\n        process: false,\r\n        showAlert: false\r\n      };\r\n    }\r\n\r\n    if (!prevState.prevProfile)\r\n      return {\r\n        profile: { ...nextProps.profile },\r\n        prevProfile: nextProps.profile\r\n      };\r\n    else return null;\r\n  }\r\n\r\n  handleChange(event) {\r\n    const { name, value } = event.target;\r\n    const { profile } = this.state;\r\n\r\n    profile[name] = value;\r\n\r\n    const isChange = obj => {\r\n      return Object.keys(obj).length !== 0;\r\n    };\r\n\r\n    this.setState({\r\n      profile,\r\n      change: isChange(this.getChange())\r\n    });\r\n\r\n    const valid = handleInput(name, value);\r\n\r\n    const validation = { ...this.state.validation };\r\n    validation[name] = valid;\r\n\r\n    this.setState({\r\n      validation\r\n    });\r\n  }\r\n\r\n  isFormValid() {\r\n    const {\r\n      username,\r\n      first_name,\r\n      last_name,\r\n      phone_number,\r\n      email,\r\n      address\r\n    } = this.state.validation;\r\n\r\n    return (\r\n      username !== false &&\r\n      first_name !== false &&\r\n      last_name !== false &&\r\n      phone_number !== false &&\r\n      email !== false &&\r\n      address !== false\r\n    );\r\n  }\r\n\r\n  async onSubmit() {\r\n    this.setState({ process: true });\r\n\r\n    const change = this.getChange();\r\n\r\n    const { username } = this.state.profile;\r\n\r\n    if (!this.props.self) {\r\n      const info = {\r\n        username,\r\n        ...change\r\n      };\r\n\r\n      await userServices.modify(info, this.props.onSuccess, this.handleFailure);\r\n    } else {\r\n      const info = {\r\n        ...change\r\n      };\r\n\r\n      await userServices.modifySelf(\r\n        info,\r\n        this.props.onSuccess,\r\n        this.handleFailure\r\n      );\r\n    }\r\n  }\r\n\r\n  handleFailure(res) {\r\n    const response = getErrorMessage(res);\r\n\r\n    this.setState({ showAlert: true, process: false, response });\r\n  }\r\n\r\n  getChange() {\r\n    const { profile, prevProfile } = this.state;\r\n\r\n    let change = {};\r\n\r\n    for (var key in profile) {\r\n      if (profile[key] !== prevProfile[key]) {\r\n        change[key] = profile[key];\r\n      }\r\n    }\r\n\r\n    return change;\r\n  }\r\n\r\n  getTitle() {\r\n    return \"User Profile\";\r\n  }\r\n\r\n  getBody() {\r\n    console.log(this.state.validation);\r\n\r\n    return (\r\n      <div>\r\n        <AccountEditorForm\r\n          profile={this.state.profile}\r\n          onSubmit={this.onSubmit}\r\n          handleChange={this.handleChange}\r\n          self={this.props.self}\r\n          validation={this.state.validation}\r\n        />\r\n        <Alert\r\n          variant=\"danger p-2 mb-2 mt-1\"\r\n          show={this.state.showAlert === true}\r\n        >\r\n          <small>\r\n            Oops! You got an error! Cannot update these change.\r\n            <br />\r\n            {this.state.response}\r\n          </small>\r\n        </Alert>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getFooter() {\r\n    const { process, change } = this.state;\r\n    const valid = this.isFormValid();\r\n\r\n    return (\r\n      <ButtonToolbar>\r\n        <Button onClick={this.props.onHide} variant=\"light\" disabled={process}>\r\n          Close\r\n        </Button>\r\n        <Button onClick={this.onSubmit} disabled={process || !change || !valid}>\r\n          {process === true ? (\r\n            <>\r\n              <Spinner\r\n                as=\"span\"\r\n                animation=\"border\"\r\n                size=\"sm\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n              />{\" \"}\r\n              Processing\r\n            </>\r\n          ) : (\r\n            \"Save changes\"\r\n          )}\r\n        </Button>\r\n      </ButtonToolbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountEditorModal;\r\n","export function getDate(dt_txt) {\r\n  return dt_txt.substring(0, 10);\r\n}\r\n\r\nexport function getDayFromDate(date) {\r\n  const weekday = [\r\n    \"Sunday\",\r\n    \"Monday\",\r\n    \"Tuesday\",\r\n    \"Wednesday\",\r\n    \"Thursday\",\r\n    \"Friday\",\r\n    \"Saturday\"\r\n  ];\r\n\r\n  const dt = new Date(date);\r\n\r\n  return weekday[dt.getDay()];\r\n}\r\n\r\nexport function forecastOf(date, list) {\r\n  return list.filter(item => getDate(item.dt_txt) === date);\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\nimport { Row, Image, Popover, Button } from \"react-bootstrap\";\r\nimport { getDate } from \"../../logic/forecast\";\r\nimport logo from \"../../img/logo.png\";\r\n\r\nconst MAX_CONTENT_LENGTH = 33;\r\n\r\nclass Notification extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      list: props.list\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    return {\r\n      list: nextProps.list\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { list } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Popover.Title>\r\n          <span className=\"popover-title-text\">Notification</span>\r\n          <Button\r\n            variant=\"link p-0\"\r\n            className=\"popover-title-button\"\r\n            onClick={this.props.markAllAsRead}\r\n          >\r\n            Mark all as read\r\n          </Button>\r\n        </Popover.Title>\r\n        <Popover.Content className=\"p-0\">\r\n          <div className=\"notify-scroll-list\">\r\n            {!list ? (\r\n              <div className=\"myaccount-menu-item\">\r\n                Fail to fetch notification!\r\n              </div>\r\n            ) : list.length === 0 ? (\r\n              <div className=\"myaccount-menu-item\">\r\n                You don't have any notification!\r\n              </div>\r\n            ) : (\r\n              list.map((notify, idx) => (\r\n                <div\r\n                  key={idx}\r\n                  className={\r\n                    \"notify-item\" + (notify.seen === \"true\" ? \" readed\" : \"\")\r\n                  }\r\n                  onClick={() => this.props.handleSelect(idx)}\r\n                >\r\n                  <Row>\r\n                    <div className=\"notify-thumbnail-container\">\r\n                      <Image\r\n                        roundedCircle\r\n                        className=\"notify-thumbnail\"\r\n                        src={logo}\r\n                      />\r\n                    </div>\r\n                    <div className=\"notify-text-container\">\r\n                      <h5>{notify.title}</h5>\r\n                      <div>\r\n                        {notify.message.length > MAX_CONTENT_LENGTH\r\n                          ? notify.message.substring(\r\n                              0,\r\n                              notify.seen === true\r\n                                ? MAX_CONTENT_LENGTH\r\n                                : MAX_CONTENT_LENGTH\r\n                            ) + \"...\"\r\n                          : notify.message}\r\n                      </div>\r\n                      <i className=\"text-muted\">{getDate(notify.time)}</i>\r\n                    </div>\r\n                  </Row>\r\n                </div>\r\n              ))\r\n            )}\r\n          </div>\r\n          <div className=\"popover-footer\">\r\n            <Button variant=\"link p-0\">See All</Button>\r\n          </div>\r\n        </Popover.Content>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\r\nimport { Dropdown, Popover } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport \"./style.css\";\r\nimport * as sessionServices from \"../../services/session\";\r\n\r\nclass MyAccountDropdownMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLogout: false\r\n    };\r\n\r\n    this.handleLogout = this.handleLogout.bind(this);\r\n  }\r\n\r\n  async handleLogout() {\r\n    this.setState({ isLogout: true });\r\n    await sessionServices.logout();\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isLogout === true) {\r\n      localStorage.clear();\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Popover.Title>\r\n          <div className=\"popover-title-text\">\r\n            Welcome {this.props.username}!\r\n          </div>\r\n        </Popover.Title>\r\n        <Popover.Content className=\"py-2 px-0\">\r\n          <div\r\n            className=\"myaccount-menu-item\"\r\n            onClick={this.props.showProfileEditorModal}\r\n          >\r\n            View Your Profile\r\n          </div>\r\n          <div\r\n            className=\"myaccount-menu-item\"\r\n            onClick={this.props.showChangePasswordModal}\r\n          >\r\n            Change Password\r\n          </div>\r\n          <Dropdown.Divider />\r\n          <div className=\"myaccount-menu-item\" onClick={this.handleLogout}>\r\n            Sign out!\r\n          </div>\r\n        </Popover.Content>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyAccountDropdownMenu;\r\n","import React, { Component } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nclass ChangePasswordForm extends Component {\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.props.onSubmit}>\r\n        <Form.Group controlId=\"password\">\r\n          <Form.Label>New Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            name=\"password\"\r\n            onChange={this.props.onChange}\r\n            isInvalid={!this.props.passwordValid}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Password must be at least 5 characters long and must be different\r\n            from the old password\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"cfPassword\">\r\n          <Form.Label>Confirm New Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            name=\"cfPassword\"\r\n            onChange={this.props.onChange}\r\n            isInvalid={!this.props.cfPasswordValid}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Invalid confirmed password\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChangePasswordForm;\r\n","import React from \"react\";\r\nimport { Button, ButtonToolbar, Spinner, Alert } from \"react-bootstrap\";\r\nimport ChangePasswordForm from \"./form\";\r\nimport CenteredModal from \"../CenteredModal/index\";\r\n\r\nimport handleInput from \"../../logic/validation\";\r\n\r\nimport * as userServices from \"../../services/user\";\r\n\r\nimport getErrorMessage from \"../../services/error\";\r\n\r\nclass ChangePasswordModal extends CenteredModal {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      password: null,\r\n      cfPassword: null,\r\n      passwordValid: true,\r\n      cfPasswordValid: true,\r\n      updating: null,\r\n      response: null\r\n    };\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n\r\n    this.onSuccess = this.onSuccess.bind(this);\r\n    this.onFailure = this.onFailure.bind(this);\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (nextProps.show === false)\r\n      return {\r\n        password: null,\r\n        cfPassword: null,\r\n        passwordValid: true,\r\n        cfPasswordValid: true,\r\n        updating: null\r\n      };\r\n    else return null;\r\n  }\r\n\r\n  handleChange(event) {\r\n    const { name, value } = event.target;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n\r\n    const valid = handleInput(name, value, this.state.password);\r\n\r\n    this.setState({\r\n      [name + \"Valid\"]: valid\r\n    });\r\n\r\n    this.setState(prev => ({\r\n      cfPasswordValid:\r\n        prev.password === prev.cfPassword || prev.cfPassword === null\r\n    }));\r\n\r\n    if (name === \"password\")\r\n      this.setState(prevState => ({\r\n        passwordValid:\r\n          prevState.passwordValid &&\r\n          prevState.password !== this.props.prev.password\r\n      }));\r\n  }\r\n\r\n  async handleSubmit() {\r\n    const { password } = this.state;\r\n    this.setState({ updating: true });\r\n\r\n    if (!this.props.self) {\r\n      const { username } = this.props;\r\n\r\n      await userServices.changePassword(\r\n        username,\r\n        password,\r\n        this.onSuccess,\r\n        this.onFailure\r\n      );\r\n    } else {\r\n      await userServices.changeSelfPassword(\r\n        password,\r\n        this.onSuccess,\r\n        this.onFailure\r\n      );\r\n    }\r\n  }\r\n\r\n  onSuccess(res, req) {\r\n    this.props.onHide();\r\n    this.setState({ updating: null });\r\n    this.props.onSuccess(req);\r\n  }\r\n\r\n  onFailure(res) {\r\n    const response = getErrorMessage(res);\r\n\r\n    this.setState({ updating: false, response });\r\n  }\r\n\r\n  getTitle() {\r\n    return \"Change Password\";\r\n  }\r\n\r\n  getBody() {\r\n    const alert = (\r\n      <Alert\r\n        variant=\"danger p-2 mb-2 mt-1\"\r\n        show={this.state.updating === false}\r\n      >\r\n        <small>\r\n          Oops! You got an error! Please check your connection and try again.\r\n          <br />\r\n          {this.state.response}.\r\n        </small>\r\n      </Alert>\r\n    );\r\n\r\n    const form = (\r\n      <ChangePasswordForm\r\n        onSubmit={this.handleSubmit}\r\n        onChange={this.handleChange}\r\n        passwordValid={this.state.passwordValid}\r\n        cfPasswordValid={this.state.cfPasswordValid}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        {form}\r\n        {alert}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  isFormValid() {\r\n    const { password, passwordValid, cfPassword, cfPasswordValid } = this.state;\r\n\r\n    return (\r\n      password !== null &&\r\n      cfPassword !== null &&\r\n      passwordValid === true &&\r\n      cfPasswordValid === true\r\n    );\r\n  }\r\n\r\n  getFooter() {\r\n    const active = this.isFormValid() && this.state.updating !== true;\r\n\r\n    return (\r\n      <ButtonToolbar>\r\n        <Button onClick={this.props.onHide} variant=\"light\">\r\n          Close\r\n        </Button>\r\n        <Button onClick={this.handleSubmit} disabled={!active}>\r\n          {this.state.updating ? (\r\n            <div>\r\n              <Spinner\r\n                as=\"span\"\r\n                animation=\"border\"\r\n                size=\"sm\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n              />{\" \"}\r\n              Processing\r\n            </div>\r\n          ) : (\r\n            \"Save Change\"\r\n          )}\r\n        </Button>\r\n      </ButtonToolbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChangePasswordModal;\r\n","import { post } from \"./base\";\r\n\r\nexport const list = onSuccess => {\r\n  const body = {\r\n    token: localStorage.getItem(\"token\")\r\n  };\r\n\r\n  post(\"/notifications/get\", body, onSuccess);\r\n};\r\n\r\nexport const read = () => {};\r\n\r\nexport const readAll = () => {};\r\n","import React, { Component } from \"react\";\r\nimport { Button, OverlayTrigger, Popover, Badge } from \"react-bootstrap\";\r\n\r\nimport AccountEditorModal from \"../AccountEditorModal\";\r\nimport Notification from \"../Notification\";\r\nimport MyAccountDropdownMenu from \"../MyAccountDropdownMenu\";\r\nimport ChangePasswordModal from \"../ChangePasswordModal\";\r\n\r\nimport * as notifyServices from \"../../services/notify\";\r\n\r\nimport \"./index.css\";\r\nimport CenteredAlert from \"../CenteredAlert\";\r\n\r\nclass Navbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      notify: null,\r\n      selectedNotify: null,\r\n      showNotifyAlert: false,\r\n      showProfileEditor: false,\r\n      showChangePassword: false,\r\n      showFailAlert: false,\r\n      response: null\r\n    };\r\n\r\n    this.hideProfileEditorModal = this.hideProfileEditorModal.bind(this);\r\n    this.showProfileEditorModal = this.showProfileEditorModal.bind(this);\r\n\r\n    this.hideChangePasswordModal = this.hideChangePasswordModal.bind(this);\r\n    this.showChangePasswordModal = this.showChangePasswordModal.bind(this);\r\n\r\n    this.handleFetchNotifySuccess = this.handleFetchNotifySuccess.bind(this);\r\n\r\n    this.handleModifyProfileSuccess = this.handleModifyProfileSuccess.bind(\r\n      this\r\n    );\r\n\r\n    this.handleSelectNotify = this.handleSelectNotify.bind(this);\r\n    this.hideNotifyAlert = this.hideNotifyAlert.bind(this);\r\n    this.markAllAsRead = this.markAllAsRead.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchNotifications();\r\n  }\r\n\r\n  handleSelectNotify(key) {\r\n    const newList = this.state.notify.map((noti, idx) => {\r\n      if (idx === key) {\r\n        noti.seen = \"true\";\r\n      }\r\n\r\n      return noti;\r\n    });\r\n\r\n    this.setState({\r\n      notify: newList, //.filter(n => n.seen !== \"true\"),\r\n      selectedNotify: newList[key],\r\n      showNotifyAlert: true\r\n    });\r\n\r\n    this.refs.notifyOverlay.hide();\r\n  }\r\n\r\n  hideNotifyAlert() {\r\n    this.setState({ showNotifyAlert: false });\r\n  }\r\n\r\n  markAllAsRead() {\r\n    const newList = this.state.notify.map(noti => {\r\n      noti.seen = \"true\";\r\n      return noti;\r\n    });\r\n\r\n    this.setState({\r\n      notify: newList //.filter(n => n.seen !== \"true\")\r\n    });\r\n  }\r\n\r\n  hideProfileEditorModal() {\r\n    this.setState({ showProfileEditor: false });\r\n  }\r\n\r\n  showProfileEditorModal() {\r\n    this.refs.profileOverlay.hide();\r\n    if (this.props.profile) this.setState({ showProfileEditor: true });\r\n  }\r\n\r\n  hideChangePasswordModal() {\r\n    this.setState({ showChangePassword: false });\r\n  }\r\n\r\n  showChangePasswordModal() {\r\n    this.refs.profileOverlay.hide();\r\n    if (this.props.profile) this.setState({ showChangePassword: true });\r\n  }\r\n\r\n  showFailureAlert() {\r\n    this.setState({ showFailAlert: true });\r\n  }\r\n\r\n  hideFailureAlert() {\r\n    this.setState({ showFailAlert: false });\r\n  }\r\n\r\n  async fetchNotifications() {\r\n    await notifyServices.list(this.handleFetchNotifySuccess);\r\n  }\r\n\r\n  handleFetchNotifySuccess(res) {\r\n    let notifications = [];\r\n\r\n    for (var propName in res)\r\n      if (propName.startsWith(\"notification_\"))\r\n        notifications.push(res[propName]);\r\n\r\n    this.setState({\r\n      notify: notifications.reverse() //.filter(n => n.seen !== \"true\")\r\n    });\r\n  }\r\n\r\n  handleModifyProfileSuccess(res, req) {\r\n    const { profile } = this.props;\r\n\r\n    for (var key in req) {\r\n      if (key !== \"username\" && key !== \"token\") {\r\n        profile[key] = req[key];\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      showProfileEditor: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const unseen = this.state.notify\r\n      ? this.state.notify.filter(n => n.seen !== \"true\").length\r\n      : 0;\r\n\r\n    const { username } = this.props.profile ? this.props.profile : {};\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-white nav-fixed-top\">\r\n        <span className=\"navbar-brand pl-4\">\r\n          <h3 className=\"navbar-title\">Dashboard</h3>\r\n        </span>\r\n        <span className=\"form-inline pr-2 fit-content \">\r\n          <OverlayTrigger\r\n            rootClose\r\n            trigger=\"click\"\r\n            placement=\"bottom\"\r\n            ref=\"notifyOverlay\"\r\n            overlay={\r\n              <Popover className=\"notify-panel\">\r\n                <Notification\r\n                  list={this.state.notify}\r\n                  handleSelect={this.handleSelectNotify}\r\n                  markAllAsRead={this.markAllAsRead}\r\n                />\r\n              </Popover>\r\n            }\r\n          >\r\n            <Button variant=\"link p-0\">\r\n              {unseen !== 0 && (\r\n                <Badge pill variant=\"danger notification px-1\">\r\n                  {unseen}\r\n                </Badge>\r\n              )}\r\n              <i className=\"fas fa-bell navbar-icon\" />\r\n            </Button>\r\n          </OverlayTrigger>\r\n\r\n          <OverlayTrigger\r\n            rootClose\r\n            trigger=\"click\"\r\n            ref=\"profileOverlay\"\r\n            placement=\"bottom\"\r\n            overlay={\r\n              <Popover className=\"myaccount-panel\">\r\n                <MyAccountDropdownMenu\r\n                  username={username}\r\n                  showProfileEditorModal={this.showProfileEditorModal}\r\n                  showChangePasswordModal={this.showChangePasswordModal}\r\n                />\r\n              </Popover>\r\n            }\r\n          >\r\n            <Button variant=\"link p-0 mx-2\">\r\n              <i className=\"fas fa-user-circle navbar-icon\" />\r\n            </Button>\r\n          </OverlayTrigger>\r\n        </span>\r\n        <AccountEditorModal\r\n          self\r\n          profile={this.props.profile}\r\n          show={this.state.showProfileEditor}\r\n          onHide={this.hideProfileEditorModal}\r\n          onSuccess={this.handleModifyProfileSuccess}\r\n        />\r\n        <ChangePasswordModal\r\n          self\r\n          prev={this.props.profile}\r\n          show={this.state.showChangePassword}\r\n          onHide={this.hideChangePasswordModal}\r\n        />\r\n        {this.state.showNotifyAlert && (\r\n          <CenteredAlert\r\n            show={this.state.showNotifyAlert}\r\n            onHide={this.hideNotifyAlert}\r\n            title=\"Notification\"\r\n            button_name=\"OK\"\r\n            onSubmit={this.hideNotifyAlert}\r\n          >\r\n            <h4 className=\"mb-3\">\r\n              {this.state.selectedNotify.title || \"Test Notification\"}\r\n            </h4>\r\n            <small>{this.state.selectedNotify.time}</small>\r\n            <p className=\"mb-0\">{this.state.selectedNotify.message}</p>\r\n          </CenteredAlert>\r\n        )}\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\n\r\nimport \"./index.css\";\r\nimport logo from \"../../img/logo.png\";\r\n\r\nclass Avatar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"avatar mb-2\">\r\n        <img\r\n          src={logo}\r\n          alt=\"logo\"\r\n          className=\"avatar-img rounded-circle float-left\"\r\n        ></img>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Avatar;\r\n","import React, { Component } from \"react\";\r\n// import Button from \"react-bootstrap/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nclass MenuItem extends Component {\r\n  render() {\r\n    let style = \"menu-item\" + (this.props.selected ? \" selected\" : \"\");\r\n\r\n    return (\r\n      <Link to={this.props.item.link} className=\"w-100 my-2\">\r\n        <button\r\n          className={style}\r\n          onClick={() => this.props.changeWindow(this.props.item.nameItem)}\r\n        >\r\n          <span className=\"float-left font-size-24px width-icon-35px\">\r\n            <i className={this.props.item.icon}></i>\r\n            <span className=\"px-1\">{this.props.item.nameItem}</span>\r\n          </span>\r\n        </button>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MenuItem;\r\n","import React, { Component } from \"react\";\r\nimport MenuItem from \"../MenuItem\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\n\r\nclass Menu extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"d-flex flex-column w-100\">\r\n        <ButtonGroup vertical className=\"w-100\">\r\n          {this.props.menuItems.map((item, idx) => (\r\n            <MenuItem\r\n              selected={this.props.selected === item.nameItem ? true : false}\r\n              key={idx}\r\n              item={item}\r\n              changeWindow={this.props.changeWindow}\r\n            ></MenuItem>\r\n          ))}\r\n        </ButtonGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n","import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../MenuItem/index.css\";\r\nclass MenuItemNoTitle extends Component {\r\n  render() {\r\n    let style = \"menu-item\" + (this.props.selected ? \" selected\" : \"\");\r\n\r\n    return (\r\n      <Link to={this.props.item.link} className=\"w-100 pt-3\">\r\n        <Button\r\n          className={style}\r\n          onClick={() => this.props.changeWindow(this.props.item.nameItem)}\r\n          variant=\"primary w-100\"\r\n        >\r\n          <span className=\"float-left font-size-24px width-icon-35px\">\r\n            <i className={this.props.item.icon}></i>\r\n          </span>\r\n        </Button>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MenuItemNoTitle;\r\n","import React, { Component } from \"react\";\r\nimport MenuItemNoTitle from \"../MenuItemNoTitle\";\r\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\r\nimport \"./index.css\";\r\n\r\nclass MenuNoTitle extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"d-flex flex-column w-100\">\r\n        <ButtonGroup vertical className=\"w-100\">\r\n          {this.props.menuItems.map((item, idx) => (\r\n            <MenuItemNoTitle\r\n              selected={this.props.selected === item.nameItem ? true : false}\r\n              key={idx}\r\n              item={item}\r\n              changeWindow={this.props.changeWindow}\r\n            ></MenuItemNoTitle>\r\n          ))}\r\n        </ButtonGroup>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MenuNoTitle;\r\n","import React, { Component } from \"react\";\r\nimport Avatar from \"../Avatar\";\r\nimport Menu from \"../Menu\";\r\nimport MenuNoTitle from \"../MenuNoTitle\";\r\nimport \"./index.css\";\r\nclass Leftbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      menuItems: [\r\n        {\r\n          link: \"/dashboard\",\r\n          icon: \"fas fa-chart-line\",\r\n          nameItem: \"Room Status\"\r\n        },\r\n        {\r\n          link: \"/dashboard/forecasts\",\r\n          icon: \"fas fa-cloud-sun\",\r\n          nameItem: \"Forecasts\"\r\n        },\r\n        {\r\n          link: \"/dashboard/remotes\",\r\n          icon: \"fas fa-gamepad\",\r\n          nameItem: \"Remotes\"\r\n        },\r\n        {\r\n          link: \"/dashboard/accounts\",\r\n          icon: \"fas fa-user-circle\",\r\n          nameItem: \"Accounts\"\r\n        }\r\n      ],\r\n      selected: \"Room Status\"\r\n    };\r\n\r\n    this.changeWindow = this.changeWindow.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getCurrentWindow();\r\n  }\r\n\r\n  getCurrentWindow() {\r\n    const path = window.location.href;\r\n    const selected = [...this.state.menuItems]\r\n      .reverse()\r\n      .find(item => path.includes(item.link));\r\n\r\n    this.setState({\r\n      selected: selected.nameItem\r\n    });\r\n  }\r\n\r\n  changeWindow = nameWindow => {\r\n    this.setState({\r\n      selected: nameWindow\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { menuItems } = this.state;\r\n    const length = menuItems.length;\r\n\r\n    const finalMenu =\r\n      this.props.isAdmin === true ? menuItems : menuItems.slice(0, length - 1);\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"leftbar d-none d-md-block\">\r\n          <Avatar avatar={this.props.avatar}></Avatar>\r\n          <Menu\r\n            selected={this.state.selected}\r\n            menuItems={finalMenu}\r\n            changeWindow={this.changeWindow}\r\n          ></Menu>\r\n        </div>\r\n        <div className=\"leftbar d-block d-md-none max-width-59\">\r\n          <div className=\"small-logo\"></div>\r\n          <MenuNoTitle\r\n            selected={this.state.selected}\r\n            menuItems={finalMenu}\r\n            changeWindow={this.changeWindow}\r\n          ></MenuNoTitle>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Leftbar;\r\n","import React, { Component } from \"react\";\r\nimport Chart from \"react-apexcharts\";\r\nimport \"./index.css\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nclass ChartStatus extends Component {\r\n  render() {\r\n    const options = {\r\n      chart: {\r\n        stacked: false,\r\n        height: 350,\r\n        zoom: {\r\n          type: \"x\",\r\n          enabled: true,\r\n          autoScaleYaxis: true\r\n        },\r\n        toolbar: {\r\n          show: true,\r\n          tools: {\r\n            download: true,\r\n            selection: true,\r\n            zoom: false,\r\n            zoomin: true,\r\n            zoomout: true,\r\n            pan: false,\r\n            reset: false,\r\n            customIcons: []\r\n          },\r\n          autoSelected: \"zoom\"\r\n        }\r\n      }\r\n    };\r\n\r\n    const { series, theme, categories, title } = this.props;\r\n\r\n    return (\r\n      <Card className=\"panel-item app devices mixed-chart\">\r\n        <Card.Title>{title}</Card.Title>\r\n        <Card.Body>\r\n          <Chart\r\n            options={{\r\n              ...options,\r\n              theme,\r\n              xaxis: {\r\n                categories,\r\n                labels: { show: false }\r\n              }\r\n            }}\r\n            series={series}\r\n            type=\"area\"\r\n            width=\"100%\"\r\n          />\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChartStatus;\r\n","import React, { Component } from \"react\";\r\nimport ChartStatus from \"../ChartStatus/index\";\r\nimport convertIndexesToChart from \"../../logic/indexesToChart\";\r\n\r\nclass ChartsPanel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      Temperature: {\r\n        title: \"Temperature\",\r\n        color: \"#ff6347\",\r\n        series: [\r\n          {\r\n            name: \"Temperature\",\r\n            data: []\r\n          }\r\n        ]\r\n      },\r\n      Humidity: {\r\n        title: \"Humidity\",\r\n        color: \"#007bff\",\r\n        series: [\r\n          {\r\n            name: \"Humidity\",\r\n            data: []\r\n          }\r\n        ]\r\n      },\r\n      AQI: {\r\n        title: \"AQI\",\r\n        color: \"#008000\",\r\n        series: [\r\n          {\r\n            name: \"AQI\",\r\n            data: []\r\n          }\r\n        ]\r\n      },\r\n      categories: []\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (!props.data) return null;\r\n\r\n    const { data } = props;\r\n\r\n    const result = convertIndexesToChart(data);\r\n\r\n    let prev = { ...state };\r\n    prev.Temperature.series[0].data = result.Temperature;\r\n    prev.Humidity.series[0].data = result.Humidity;\r\n    prev.AQI.series[0].data = result.AQI;\r\n    prev.categories = result.categories;\r\n\r\n    return prev;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"panel\">\r\n        {[\"AQI\", \"Humidity\", \"Temperature\"].map((item, idx) => {\r\n          const { color, title, series } = this.state[item];\r\n          const { categories } = this.state;\r\n          return (\r\n            <ChartStatus\r\n              key={idx}\r\n              theme={{\r\n                mode: \"light\",\r\n                monochrome: {\r\n                  enabled: true,\r\n                  color,\r\n                  shadeTo: \"light\",\r\n                  shadeIntensity: 0.65\r\n                }\r\n              }}\r\n              title={title}\r\n              series={series}\r\n              categories={categories}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChartsPanel;\r\n","export default function convertIndexesToChart(data) {\r\n  let indexes2Chart = {\r\n    AQI: [],\r\n    Humidity: [],\r\n    Temperature: []\r\n  };\r\n\r\n  let categories = [];\r\n\r\n  const LASTEST = new Date(data[data.length - 1].Date);\r\n\r\n  const STEP = 20; // minutes;\r\n  const MINUTE_TO_MILLISECOND = 60000;\r\n\r\n  let currentTime = new Date(data[0].Date).getTime();\r\n\r\n  let index = 0;\r\n\r\n  while (currentTime <= LASTEST.getTime()) {\r\n    const currentDate = new Date(currentTime);\r\n    let currentData = data.find(d => {\r\n      const tmpDate = new Date(d.Date);\r\n      return (\r\n        tmpDate.getHours() === currentDate.getHours() &&\r\n        tmpDate.getMinutes() === currentDate.getMinutes()\r\n      );\r\n    });\r\n\r\n    if (!currentData) {\r\n      currentData = {\r\n        AQI: 0,\r\n        Humidity: 0,\r\n        Temperature: 0,\r\n        Date:\r\n          currentDate.toISOString().substring(0, 10) +\r\n          \" \" +\r\n          currentDate.toLocaleTimeString()\r\n      };\r\n    }\r\n\r\n    indexes2Chart.AQI[index] = currentData.AQI;\r\n    indexes2Chart.Humidity[index] = currentData.Humidity;\r\n    indexes2Chart.Temperature[index] = currentData.Temperature;\r\n    categories[index] = currentData.Date;\r\n\r\n    index++;\r\n    currentTime += STEP * MINUTE_TO_MILLISECOND;\r\n  }\r\n\r\n  return {\r\n    ...indexes2Chart,\r\n    categories\r\n  };\r\n}\r\n","const calcTimeUpdated = past => {\r\n  const current = new Date();\r\n\r\n  const deltaHour = current.getHours() - past.hours;\r\n  const deltaMinutes = current.getMinutes() - past.minutes;\r\n  const deltaSecond = current.getSeconds() - past.seconds;\r\n\r\n  let text;\r\n\r\n  const deltaTime = deltaHour * 3600 + deltaMinutes * 60 + deltaSecond;\r\n\r\n  if (deltaTime >= 7200)\r\n    text = Math.floor(deltaTime / 3600).toString() + \" hours ago\";\r\n  else if (deltaTime >= 3600)\r\n    text = Math.floor(deltaTime / 3600).toString() + \" hour ago\";\r\n  else if (deltaTime >= 120)\r\n    text = Math.floor(deltaTime / 60).toString() + \" minutes ago\";\r\n  else if (deltaTime >= 60)\r\n    text = Math.floor(deltaTime / 60).toString() + \" minute ago\";\r\n  else text = \"Updated\";\r\n\r\n  return text;\r\n};\r\n\r\nexport default calcTimeUpdated;\r\n","import React, { Component } from \"react\";\r\nimport { Card, Button, Spinner } from \"react-bootstrap\";\r\n\r\nimport calcTimeUpdated from \"../../logic/calcTime\";\r\n\r\nimport \"./index.css\";\r\n\r\nclass IndexCard extends Component {\r\n  componentDidMount() {\r\n    this.interval = setInterval(() => {\r\n      this.compareTime();\r\n    }, 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  compareTime() {\r\n    if (this.props.notify === \"Update now\") return;\r\n\r\n    if (this.props.timeUpdate.hours === -1) return;\r\n\r\n    // Set value hours, minutes, seconds = -2 when \"Failed to get data\"\r\n    if (this.props.timeUpdate.hours === -2) {\r\n      this.props.changeNotify(\"Failed to get data\");\r\n      return;\r\n    }\r\n\r\n    const text = calcTimeUpdated(this.props.timeUpdate);\r\n    this.props.changeNotify(text);\r\n  }\r\n\r\n  render() {\r\n    const { index } = this.props;\r\n\r\n    return (\r\n      <Card className=\"panel-item\">\r\n        <Card.Body>\r\n          <div className=\"row\">\r\n            <div className=\"col-3\">\r\n              <i className={index.icon}></i>\r\n            </div>\r\n            <div className=\"col-9 text-content\">\r\n              <div className=\"index-panel-title\">{index.title}</div>\r\n              <div className=\"index-panel-index\">{index.index}</div>\r\n            </div>\r\n          </div>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n          {this.props.notify === \"Updating...\" ? (\r\n            <Button variant=\"link\" disabled>\r\n              <Spinner\r\n                as=\"span\"\r\n                animation=\"border\"\r\n                size=\"sm\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n                variant=\"primary\"\r\n              />{\" \"}\r\n              Updating...\r\n            </Button>\r\n          ) : (\r\n            <span>\r\n              <Button\r\n                variant=\"link\"\r\n                onClick={() => {\r\n                  this.props.handUpdateData();\r\n                  this.props.changeNotify(\"Updating...\");\r\n                }}\r\n              >\r\n                <i className=\"fas fa-redo\" />\r\n                <span> Update</span>\r\n              </Button>\r\n              <i className=\"text-muted btn float-right\">\r\n                <small>{this.props.notify}</small>\r\n              </i>\r\n            </span>\r\n          )}\r\n        </Card.Footer>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IndexCard;\r\n","import React, { Component } from \"react\";\r\nimport IndexCard from \"../IndexCard\";\r\n\r\nclass IndexesPanel extends Component {\r\n  state = {\r\n    notify: \"Update now\",\r\n    indexes: [\r\n      {\r\n        title: \"AQI\",\r\n        index: \"-- PM2.5\",\r\n        icon: \"fas fa-wind item-icon-green p-3\"\r\n      },\r\n      {\r\n        title: \"Humidity\",\r\n        index: \"-- %\",\r\n        icon: \"fas fa-tint item-icon-blue p-3\"\r\n      },\r\n      {\r\n        title: \"Temperature\",\r\n        index: \"-- °C\",\r\n        icon: \"fas fa-temperature-low item-icon-orange p-3\"\r\n      }\r\n    ]\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (!props.data) return null;\r\n\r\n    const { data } = props;\r\n\r\n    // const lengthData = data.length;\r\n\r\n    // if (lengthData === 0) return null;\r\n\r\n    // const nowAQI = data[lengthData - 1].AQI;\r\n    // const nowHumidity = data[lengthData - 1].Humidity;\r\n    // const nowTemperature = data[lengthData - 1].Temperature;\r\n\r\n    let indexes = state.indexes;\r\n\r\n    indexes[0].index = data.AQI + \" PM2.5\";\r\n    indexes[1].index = data.Humidity + \" %\";\r\n    indexes[2].index = data.Temperature + \" °C\";\r\n\r\n    return { indexes };\r\n  }\r\n\r\n  changeNotify = text => {\r\n    this.setState({ notify: text });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"panel mb-4\">\r\n        {this.state.indexes.map((item, idx) => (\r\n          <IndexCard\r\n            key={idx}\r\n            index={item}\r\n            notify={this.state.notify}\r\n            timeUpdate={this.props.timeUpdate}\r\n            handUpdateData={this.props.handUpdateData}\r\n            changeNotify={this.changeNotify}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default IndexesPanel;\r\n","import React, { Component } from \"react\";\r\n\r\nimport ChartsPanel from \"../ChartsPanel\";\r\nimport IndexesPanel from \"../IndexesPanel\";\r\n\r\nimport \"./index.css\";\r\n\r\nclass RoomStatus extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"p-4\">\r\n        <IndexesPanel\r\n          data={this.props.indexes}\r\n          timeUpdate={this.props.timeUpdate}\r\n          handUpdateData={this.props.handUpdateData}\r\n        />\r\n        <ChartsPanel data={this.props.chart} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RoomStatus;\r\n","import React, { Component } from \"react\";\r\nimport { Table, Image } from \"react-bootstrap\";\r\n\r\nclass ForecastDetail extends Component {\r\n  render() {\r\n    const convertToCDegree = ktemp => {\r\n      return Math.round(ktemp - 273) + \"°\";\r\n    };\r\n\r\n    return (\r\n      <Table responsive hover>\r\n        <thead>\r\n          <tr>\r\n            <th>\r\n              <i className=\"far fa-clock\"></i> Time\r\n            </th>\r\n            <th>\r\n              <i className=\"fas fa-cloud-sun\"></i> Weather\r\n            </th>\r\n            <th>\r\n              <i className=\"fas fa-temperature-low\"></i> Temperature\r\n            </th>\r\n            <th>\r\n              <i className=\"fas fa-tint\"></i> Humidity\r\n            </th>\r\n            <th>\r\n              <i className=\"fas fa-water\"></i> Pressure\r\n            </th>\r\n            <th>\r\n              <i className=\"fas fa-wind\"></i> Wind\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {this.props.list.map((item, idx) => (\r\n            <tr key={idx}>\r\n              <td>{item.dt_txt.substring(10)}</td>\r\n              <td>\r\n                <Image\r\n                  src={`http://openweathermap.org/img/w/${item.weather[0].icon}.png`}\r\n                />\r\n                <span> {item.weather[0].description}</span>\r\n              </td>\r\n              <td>{convertToCDegree(item.main.temp)}</td>\r\n              <td>{item.main.humidity + \"%\"}</td>\r\n              <td>{item.main.pressure}</td>\r\n              <td>{item.wind.deg + \"° \" + item.wind.speed + \"m/s\"}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForecastDetail;\r\n","import React, { Component } from \"react\";\r\nimport GoogleMapReact from \"google-map-react\";\r\nimport \"./style.css\";\r\n\r\nclass SimpleMap extends Component {\r\n  render() {\r\n    return (\r\n      // Important! Always set the container height explicitly\r\n      <div className=\"map\">\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: \"AIzaSyDrB9CBk5Z0DOtwo03MgMZF8I3Es5_-dhc\" }}\r\n          defaultCenter={this.props.defaultCenter}\r\n          center={this.props.center}\r\n          defaultZoom={this.props.zoom}\r\n        ></GoogleMapReact>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SimpleMap;\r\n","import React, { Component } from \"react\";\r\nimport { Accordion, Card, Button, Row, Col, Spinner } from \"react-bootstrap\";\r\nimport { forecastOf, getDayFromDate } from \"../../logic/forecast\";\r\nimport getDateList from \"../../logic/datelist\";\r\nimport ForecastDetail from \"../ForecastDetail\";\r\nimport CITY_LIST from \"../../resources/citylist.json\";\r\nimport Select from \"react-select\";\r\nimport Map from \"../Map\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst LIMIT = 500;\r\n\r\nclass ForecastsWindow extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      info: {},\r\n      city: CITY_LIST.sort((a, b) => (a.name < b.name ? -1 : 1)).slice(\r\n        0,\r\n        LIMIT\r\n      ),\r\n      select: null,\r\n      searching: false,\r\n      expand: null\r\n    };\r\n\r\n    this.myRef = React.createRef();\r\n\r\n    this.filterCity = this.filterCity.bind(this);\r\n    this.handleSelect = this.handleSelect.bind(this);\r\n    this.handleSearch = this.handleSearch.bind(this);\r\n    this.scroll = this.scrollIntoForecast.bind(this);\r\n  }\r\n\r\n  fetchWeather(cityId) {\r\n    const APP_ID = \"e1b174f84d2289015179653f49b5ebea\";\r\n\r\n    fetch(\r\n      `https://api.openweathermap.org/data/2.5/forecast?id=${cityId}&APPID=${APP_ID}`\r\n    )\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        this.setState({ info: data, searching: false });\r\n        this.scrollIntoForecast();\r\n      })\r\n      .catch(console.log);\r\n  }\r\n\r\n  handleSearch() {\r\n    this.setState({\r\n      searching: true,\r\n      info: {},\r\n      expand: null\r\n    });\r\n\r\n    this.fetchWeather(this.state.select.id);\r\n  }\r\n\r\n  handleExpand(idx) {\r\n    this.setState(prev => ({\r\n      expand: prev.expand === idx ? null : idx\r\n    }));\r\n  }\r\n\r\n  handleSelect(option) {\r\n    this.setState({\r\n      select: option.value\r\n    });\r\n  }\r\n\r\n  filterCity(value) {\r\n    const match = CITY_LIST.filter(city =>\r\n      city.name.toLowerCase().startsWith(value.toLowerCase())\r\n    );\r\n\r\n    this.setState({\r\n      city: match.slice(0, LIMIT)\r\n    });\r\n  }\r\n\r\n  scrollIntoForecast() {\r\n    this.myRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  }\r\n\r\n  savePdfFile() {}\r\n\r\n  render() {\r\n    const list = this.state.info.list;\r\n\r\n    const defaultLocation = {\r\n      lat: 21.0245,\r\n      lng: 105.841171\r\n    };\r\n\r\n    return (\r\n      <div className=\"p-4\">\r\n        <Card>\r\n          <Card.Title>Locate Your City</Card.Title>\r\n          <Card.Body>\r\n            <Row>\r\n              <Col>\r\n                <Select\r\n                  name=\"devices\"\r\n                  placeholder=\"Select city\"\r\n                  onInputChange={this.filterCity}\r\n                  onChange={this.handleSelect}\r\n                  options={this.state.city.map(option => ({\r\n                    value: option,\r\n                    label: `${option.name} (${option.country})`\r\n                  }))}\r\n                />\r\n              </Col>\r\n              <div className=\"btn-search-container\">\r\n                <Button\r\n                  onClick={this.handleSearch}\r\n                  disabled={!this.state.select || this.state.searching}\r\n                >\r\n                  {this.state.searching ? (\r\n                    <span>\r\n                      <Spinner\r\n                        as=\"span\"\r\n                        animation=\"border\"\r\n                        size=\"sm\"\r\n                        role=\"status\"\r\n                        aria-hidden=\"true\"\r\n                      />{\" \"}\r\n                      Searching...\r\n                    </span>\r\n                  ) : (\r\n                    <span>\r\n                      <i className=\"fas fa-search\"></i> Search\r\n                    </span>\r\n                  )}\r\n                </Button>\r\n              </div>\r\n            </Row>\r\n            <Row>\r\n              <Map\r\n                center={\r\n                  this.state.select\r\n                    ? {\r\n                        lat: this.state.select.coord.lat,\r\n                        lng: this.state.select.coord.lon\r\n                      }\r\n                    : defaultLocation\r\n                }\r\n                defaultCenter={defaultLocation}\r\n                zoom={11}\r\n              />\r\n            </Row>\r\n          </Card.Body>\r\n        </Card>\r\n        {list && (\r\n          <Card className=\"mt-4\" ref={this.myRef}>\r\n            <Card.Title>5-day Wearther Forecast</Card.Title>\r\n            <Card.Body>\r\n              <Accordion>\r\n                {getDateList(list).map((date, idx) => (\r\n                  <div key={idx}>\r\n                    <Card.Header className=\"bg-light-blue\">\r\n                      <Row>\r\n                        <Col className=\"white-text\">\r\n                          <h3>{getDayFromDate(date)}</h3>\r\n                          {date}\r\n                        </Col>\r\n\r\n                        <Col className=\"btn-expand\">\r\n                          <Accordion.Toggle\r\n                            as={Button}\r\n                            variant=\"link\"\r\n                            eventKey={idx}\r\n                            onClick={() => this.handleExpand(idx)}\r\n                          >\r\n                            Hourly{\" \"}\r\n                            <i\r\n                              className={\r\n                                \"fas fa-chevron-down rotate \" +\r\n                                (this.state.expand === idx ? \"down\" : \"\")\r\n                              }\r\n                            />\r\n                          </Accordion.Toggle>\r\n                        </Col>\r\n                      </Row>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey={idx}>\r\n                      <Card.Body>\r\n                        <div>\r\n                          <ForecastDetail list={forecastOf(date, list)} />\r\n                        </div>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </div>\r\n                ))}\r\n              </Accordion>\r\n            </Card.Body>\r\n            <Card.Footer>\r\n              <Button\r\n                variant=\"link\"\r\n                className=\"p-0 float-left\"\r\n                onClick={this.savePdfFile.bind(this)}\r\n              >\r\n                <i className=\"fas fa-print\"></i> Print\r\n              </Button>\r\n            </Card.Footer>\r\n          </Card>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ForecastsWindow;\r\n","export default function getDateList(list) {\r\n  let out = [];\r\n\r\n  list.forEach(item => {\r\n    const date = item.dt_txt.substring(0, 10);\r\n    if (out.indexOf(date) === -1) {\r\n      out.push(date);\r\n    }\r\n  });\r\n  return out;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Form, Col } from \"react-bootstrap\";\r\n\r\nclass AccountAdditionForm extends Component {\r\n  render() {\r\n    const { validation } = this.props;\r\n\r\n    return (\r\n      <Form>\r\n        <Form.Group controlId=\"username\">\r\n          <Form.Label>Username</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"username\"\r\n            onChange={this.props.handleChange}\r\n            isInvalid={validation.username === false}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Username is between 5 and 10 characters long and do not contain\r\n            special characters\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Form.Row>\r\n          <Col>\r\n            <Form.Group controlId=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                name=\"password\"\r\n                onChange={this.props.handleChange}\r\n                isInvalid={validation.password === false}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Password is between 5 and 15 characters long and do not contain\r\n                space\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col>\r\n            <Form.Group controlId=\"cfPassword\">\r\n              <Form.Label>Confirm Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                name=\"cfPassword\"\r\n                onChange={this.props.handleChange}\r\n                isInvalid={validation.cfPassword === false}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Retype wrong password\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Col>\r\n        </Form.Row>\r\n        <Form.Row>\r\n          <Col>\r\n            <Form.Group controlId=\"first_name\">\r\n              <Form.Label>First Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"first_name\"\r\n                onChange={this.props.handleChange}\r\n                isInvalid={validation.first_name === false}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Invalid first name\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col>\r\n            <Form.Group controlId=\"last_name\">\r\n              <Form.Label>Last Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"last_name\"\r\n                onChange={this.props.handleChange}\r\n                isInvalid={validation.last_name === false}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Invalid last name\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Col>\r\n        </Form.Row>\r\n        <Form.Group controlId=\"email\">\r\n          <Form.Label>Email</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            name=\"email\"\r\n            onChange={this.props.handleChange}\r\n            isInvalid={validation.email === false}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Invalid email address\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Form.Group controlId=\"address\">\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            name=\"address\"\r\n            onChange={this.props.handleChange}\r\n            isInvalid={validation.address === false}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Invalid address\r\n          </Form.Control.Feedback>\r\n        </Form.Group>\r\n        <Form.Row>\r\n          <Col>\r\n            <Form.Group controlId=\"gender\">\r\n              <Form.Label>Gender</Form.Label>\r\n\r\n              <Form.Control\r\n                as=\"select\"\r\n                name=\"gender\"\r\n                onChange={this.props.handleChange}\r\n              >\r\n                <option>Male</option>\r\n                <option>Female</option>\r\n                <option>Other</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col>\r\n            <Form.Group controlId=\"phone_number\">\r\n              <Form.Label>Phone Number</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"phone_number\"\r\n                onChange={this.props.handleChange}\r\n                isInvalid={validation.phone_number === false}\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">\r\n                Invalid phone number\r\n              </Form.Control.Feedback>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col>\r\n            <Form.Group controlId=\"role\">\r\n              <Form.Label>Role</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                name=\"role\"\r\n                defaultValue=\"standard\"\r\n                onChange={this.props.handleChange}\r\n                disabled={this.props.self}\r\n              >\r\n                <option>standard</option>\r\n                <option>admin</option>\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n        </Form.Row>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountAdditionForm;\r\n","import CenteredModal from \"../CenteredModal/index\";\r\nimport React from \"react\";\r\nimport { Button, ButtonToolbar, Alert, Spinner } from \"react-bootstrap\";\r\nimport AccountAdditionForm from \"./form\";\r\n\r\nimport * as userServices from \"../../services/user\";\r\n\r\nimport getErrorMessage from \"../../services/error\";\r\n\r\nimport handleInput from \"../../logic/validation\";\r\n\r\nclass AccountAdditionModal extends CenteredModal {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: null,\r\n      password: null,\r\n      cfPassword: null,\r\n      first_name: null,\r\n      last_name: null,\r\n      phone_number: null,\r\n      email: null,\r\n      gender: \"Male\",\r\n      address: null,\r\n      role: \"standard\",\r\n      validation: {},\r\n      showAlert: false,\r\n      process: false,\r\n      response: null\r\n    };\r\n\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.handleFailure = this.handleFailure.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    if (nextProps.show === false) {\r\n      return {\r\n        process: false,\r\n        showAlert: false\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  handleChange(event) {\r\n    const { name, value } = event.target;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n\r\n    const valid = handleInput(name, value, this.state.password);\r\n\r\n    const validation = { ...this.state.validation };\r\n    validation[name] = valid;\r\n\r\n    if (name === \"password\" && this.state.cfPassword)\r\n      validation[\"cfPassword\"] = handleInput(\r\n        \"cfPassword\",\r\n        this.state.cfPassword,\r\n        value\r\n      );\r\n\r\n    this.setState({\r\n      validation\r\n    });\r\n  }\r\n\r\n  async onSubmit() {\r\n    this.setState({ process: true });\r\n\r\n    const {\r\n      username,\r\n      password,\r\n      first_name,\r\n      last_name,\r\n      phone_number,\r\n      email,\r\n      gender,\r\n      address,\r\n      role\r\n    } = this.state;\r\n\r\n    const user = {\r\n      username,\r\n      password,\r\n      first_name,\r\n      last_name,\r\n      phone_number,\r\n      email,\r\n      gender,\r\n      address,\r\n      role\r\n    };\r\n\r\n    this.setState(prevState => ({ temp: prevState.temp + 1 }));\r\n\r\n    await userServices.add(user, this.props.onSuccess, this.handleFailure);\r\n  }\r\n\r\n  handleFailure(res) {\r\n    const response = getErrorMessage(res);\r\n\r\n    this.setState({ showAlert: true, process: false, response });\r\n  }\r\n\r\n  getTitle() {\r\n    return \"Add a new account\";\r\n  }\r\n\r\n  isFormValid() {\r\n    const {\r\n      username,\r\n      cfPassword,\r\n      password,\r\n      first_name,\r\n      last_name,\r\n      phone_number,\r\n      email,\r\n      address\r\n    } = this.state.validation;\r\n\r\n    return (\r\n      username === true &&\r\n      password === true &&\r\n      cfPassword === true &&\r\n      first_name === true &&\r\n      last_name === true &&\r\n      phone_number === true &&\r\n      email === true &&\r\n      address === true\r\n    );\r\n  }\r\n\r\n  getBody() {\r\n    return (\r\n      <div>\r\n        <AccountAdditionForm\r\n          onSubmit={this.onSubmit}\r\n          handleChange={this.handleChange}\r\n          validation={this.state.validation}\r\n        />\r\n        <Alert\r\n          variant=\"danger p-2 mb-2 mt-1\"\r\n          show={this.state.showAlert === true}\r\n        >\r\n          <small>\r\n            Oops! You got an error! Cannot create new account.\r\n            <br />\r\n            {this.state.response}\r\n          </small>\r\n        </Alert>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getFooter() {\r\n    const { process } = this.state;\r\n    const valid = this.isFormValid();\r\n\r\n    return (\r\n      <ButtonToolbar>\r\n        <Button onClick={this.props.onHide} variant=\"light\" disabled={process}>\r\n          Close\r\n        </Button>\r\n        <Button onClick={this.onSubmit} disabled={process || !valid}>\r\n          {process === true ? (\r\n            <>\r\n              <Spinner\r\n                as=\"span\"\r\n                animation=\"border\"\r\n                size=\"sm\"\r\n                role=\"status\"\r\n                aria-hidden=\"true\"\r\n              />{\" \"}\r\n              Processing\r\n            </>\r\n          ) : (\r\n            \"Save changes\"\r\n          )}\r\n        </Button>\r\n      </ButtonToolbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountAdditionModal;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  Form,\r\n  Button,\r\n  Table,\r\n  Spinner,\r\n  FormCheck,\r\n  ButtonGroup\r\n} from \"react-bootstrap\";\r\nimport Tooltip from \"react-tooltip\";\r\n\r\nimport CenteredAlert from \"../CenteredAlert\";\r\nimport AccountEditorModal from \"../AccountEditorModal\";\r\nimport AccountAdditionModal from \"../AccountAdditionModal\";\r\nimport ChangePasswordModal from \"../ChangePasswordModal\";\r\n\r\nimport \"../../logic/string\";\r\nimport * as userServices from \"../../services/user\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst DIRECTION = {\r\n  NONE: \"fas fa-sort\",\r\n  DOWN: \"fas fa-sort-down\",\r\n  UP: \"fas fa-sort-up\"\r\n};\r\n\r\nclass AccountsPanel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: null,\r\n      locking_state: null,\r\n\r\n      alert: {\r\n        action: null,\r\n        title: null,\r\n        body: null\r\n      },\r\n\r\n      sortIcon: {\r\n        username: DIRECTION.NONE,\r\n        first_name: DIRECTION.NONE,\r\n        last_name: DIRECTION.NONE,\r\n        gender: DIRECTION.NONE,\r\n        address: DIRECTION.NONE,\r\n        email: DIRECTION.NONE,\r\n        phone_number: DIRECTION.NONE,\r\n        role: DIRECTION.NONE,\r\n        locking_state: DIRECTION.NONE\r\n      }\r\n    };\r\n\r\n    // Fetch from server\r\n    this.fetchLockingState = this.fetchLockingState.bind(this);\r\n    this.fetchDeleteAccount = this.fetchDeleteAccount.bind(this);\r\n\r\n    this.handleChangeFilter = this.handleChangeFilter.bind(this);\r\n  }\r\n\r\n  handleChangeFilter(event) {\r\n    const { name, value } = event.target;\r\n    this.props.filter(name, value);\r\n  }\r\n\r\n  // Handle click button\r\n  handleClickRemove(idx) {\r\n    const { username } = this.props.list[idx];\r\n\r\n    this.setState({\r\n      username,\r\n      alert: {\r\n        action: \"delete\",\r\n        title: `Delete Account`,\r\n        body: (\r\n          <div>\r\n            Do you sure want to delete account <strong>{username}</strong>. This\r\n            action cannot be undo!\r\n          </div>\r\n        )\r\n      }\r\n    });\r\n\r\n    this.props.show.alert();\r\n  }\r\n\r\n  handleClickLock(idx) {\r\n    const { username, locking_state } = this.props.list[idx];\r\n\r\n    this.setState({\r\n      username,\r\n      locking_state,\r\n      alert: {\r\n        action: \"lock\",\r\n        title: `${locking_state === \"lock\" ? \"Unlock\" : \"Lock\"} Account`,\r\n        body: (\r\n          <div>\r\n            Do you sure want to {locking_state === \"lock\" ? \"unlock\" : \"lock\"}{\" \"}\r\n            account <strong>{username}</strong>\r\n          </div>\r\n        )\r\n      }\r\n    });\r\n\r\n    this.props.show.alert();\r\n  }\r\n\r\n  handleClickProfile(idx) {\r\n    const { username } = this.props.list[idx];\r\n\r\n    this.setState({ username });\r\n\r\n    this.props.show.edit();\r\n  }\r\n\r\n  handleClickPassword(idx) {\r\n    const { username } = this.props.list[idx];\r\n\r\n    this.setState({ username });\r\n\r\n    this.props.show.changePswd();\r\n  }\r\n\r\n  // Fetch from server\r\n  async fetchDeleteAccount() {\r\n    this.props.process();\r\n\r\n    const { username } = this.state;\r\n\r\n    await userServices.remove(\r\n      username,\r\n      this.props.callback.onDeleteSuccess,\r\n      this.props.callback.onFailure\r\n    );\r\n  }\r\n\r\n  async fetchLockingState() {\r\n    this.props.process();\r\n\r\n    const { username, locking_state } = this.state;\r\n\r\n    if (locking_state === \"unlock\")\r\n      await userServices.lock(\r\n        username,\r\n        this.props.callback.onLockSuccess,\r\n        this.props.callback.onFailure\r\n      );\r\n    else\r\n      await userServices.unlock(\r\n        username,\r\n        this.props.callback.onUnlockSuccess,\r\n        this.props.callback.onFailure\r\n      );\r\n  }\r\n\r\n  sortBy(property) {\r\n    let { sortIcon } = this.state;\r\n\r\n    const prevDirect = sortIcon[property];\r\n\r\n    if (prevDirect === DIRECTION.NONE) {\r\n      sortIcon[property] = DIRECTION.UP;\r\n      this.props.sort(property, \"down\");\r\n    } else if (prevDirect === DIRECTION.UP) {\r\n      sortIcon[property] = DIRECTION.DOWN;\r\n      this.props.sort(property, \"up\");\r\n    } else if (prevDirect === DIRECTION.DOWN) {\r\n      sortIcon[property] = DIRECTION.UP;\r\n      this.props.sort(property, \"down\");\r\n    }\r\n\r\n    this.setState({\r\n      sortIcon\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const dataCols = [\r\n      \"username\",\r\n      \"first_name\",\r\n      \"last_name\",\r\n      \"gender\",\r\n      \"address\",\r\n      \"email\",\r\n      \"phone_number\",\r\n      \"role\",\r\n      \"locking_state\"\r\n    ];\r\n\r\n    const searchInput = name => (\r\n      <Form.Control\r\n        type=\"text\"\r\n        name={name}\r\n        defaultValue={this.props.default[name]}\r\n        onChange={this.handleChangeFilter}\r\n      />\r\n    );\r\n\r\n    const searchSelect = (name, options) => (\r\n      <Form.Control\r\n        as=\"select\"\r\n        name={name}\r\n        defaultValue={this.props.default[name]}\r\n        onChange={this.handleChangeFilter}\r\n      >\r\n        <option>all</option>\r\n        {options.map((op, idx) => (\r\n          <option key={idx}>{op}</option>\r\n        ))}\r\n      </Form.Control>\r\n    );\r\n\r\n    return (\r\n      <Card>\r\n        <Card.Title>Accounts Manager</Card.Title>\r\n        <Card.Body>\r\n          <Table responsive hover striped size=\"sm\">\r\n            <thead className=\"align-middle\">\r\n              <tr>\r\n                <th scope=\"col\">#</th>\r\n                {dataCols.map((property, idx) => (\r\n                  <th scope=\"col\" key={idx}>\r\n                    <Button\r\n                      variant=\"link p-0\"\r\n                      onClick={() => this.sortBy(property)}\r\n                    >\r\n                      {property.toProperCase() === \"Locking State\"\r\n                        ? \"Active\"\r\n                        : property.toProperCase()}{\" \"}\r\n                      <i className={this.state.sortIcon[property]}></i>\r\n                    </Button>\r\n                  </th>\r\n                ))}\r\n                <th scope=\"col\">Action</th>\r\n              </tr>\r\n              <tr>\r\n                <th scope=\"col\" />\r\n                <th scope=\"col\">{searchInput(\"username\")}</th>\r\n                <th scope=\"col\">{searchInput(\"first_name\")}</th>\r\n                <th scope=\"col\">{searchInput(\"last_name\")}</th>\r\n                <th scope=\"col\">\r\n                  {searchSelect(\"gender\", [\"Male\", \"Female\", \"Other\"])}\r\n                </th>\r\n                <th scope=\"col\">{searchInput(\"address\")}</th>\r\n                <th scope=\"col\">{searchInput(\"email\")}</th>\r\n                <th scope=\"col\">{searchInput(\"phone_number\")}</th>\r\n                <th scope=\"col\">\r\n                  {searchSelect(\"role\", [\"admin\", \"standard\"])}\r\n                </th>\r\n                <th scope=\"col\">\r\n                  {searchSelect(\"locking_state\", [\"lock\", \"unlock\"])}\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.props.list.map((item, idx) => (\r\n                <tr key={idx}>\r\n                  <td>{idx + 1}</td>\r\n                  <td>{item.username}</td>\r\n                  <td>{item.first_name}</td>\r\n                  <td>{item.last_name}</td>\r\n                  <td>{item.gender}</td>\r\n                  <td>{item.address}</td>\r\n                  <td>{item.email}</td>\r\n                  <td>{item.phone_number}</td>\r\n                  <td>{item.role}</td>\r\n                  <td>\r\n                    <FormCheck custom type=\"switch\">\r\n                      <FormCheck.Input\r\n                        checked={item.locking_state === \"unlock\"}\r\n                        onChange={console.log}\r\n                        isInvalid={item.locking_state === \"lock\"}\r\n                      />\r\n                      <FormCheck.Label\r\n                        onClick={() => this.handleClickLock(idx)}\r\n                      ></FormCheck.Label>\r\n                    </FormCheck>\r\n                  </td>\r\n                  <td className=\"pr-1 pl-0\">\r\n                    <ButtonGroup>\r\n                      <Button\r\n                        data-tip=\"Modify User Profile\"\r\n                        className=\"glow-blue\"\r\n                        onClick={() => this.handleClickProfile(idx)}\r\n                        variant=\"link p-2\"\r\n                      >\r\n                        <i className=\"fas fa-user-edit\" />\r\n                      </Button>\r\n                      <Tooltip place=\"top\" type=\"dark\" effect=\"solid\" />\r\n\r\n                      <Button\r\n                        data-tip=\"Change Account Password\"\r\n                        className=\"glow-yellow\"\r\n                        onClick={() => this.handleClickPassword(idx)}\r\n                        variant=\"link p-2\"\r\n                      >\r\n                        <i className=\"fas fa-key\" />\r\n                      </Button>\r\n                      <Tooltip place=\"top\" type=\"dark\" effect=\"solid\" />\r\n\r\n                      <Button\r\n                        data-tip=\"Delete Account\"\r\n                        className=\"glow-red\"\r\n                        onClick={() => this.handleClickRemove(idx)}\r\n                        variant=\"link p-2\"\r\n                      >\r\n                        <i className=\"fas fa-trash\" />\r\n                      </Button>\r\n                      <Tooltip place=\"top\" type=\"dark\" effect=\"solid\" />\r\n                    </ButtonGroup>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          {this.props.list.length === 0 && (\r\n            <div className=\"text-center glow-red\">\r\n              <i className=\"fas fa-times big-not-found\"></i>\r\n              <h3 className=\"mb-5\">Not found!</h3>\r\n            </div>\r\n          )}\r\n        </Card.Body>\r\n        <Card.Footer className=\"hide-border mb-2 mt-n4\">\r\n          <Button variant=\"primary float-right\" onClick={this.props.show.add}>\r\n            <i className=\"fas fa-plus\" /> Add New Account\r\n          </Button>\r\n        </Card.Footer>\r\n\r\n        <CenteredAlert\r\n          show={this.props.visible.alert}\r\n          onHide={this.props.hide.alert}\r\n          title={this.state.alert.title}\r\n          disabled={this.props.isProcess === true}\r\n          button_name={\r\n            this.props.isProcess === true ? (\r\n              <div>\r\n                <Spinner\r\n                  as=\"span\"\r\n                  animation=\"border\"\r\n                  size=\"sm\"\r\n                  role=\"status\"\r\n                  aria-hidden=\"true\"\r\n                />{\" \"}\r\n                Processing\r\n              </div>\r\n            ) : (\r\n              \"Yes, continue!\"\r\n            )\r\n          }\r\n          danger=\"true\"\r\n          onSubmit={\r\n            this.state.alert.action === \"lock\"\r\n              ? this.fetchLockingState\r\n              : this.fetchDeleteAccount\r\n          }\r\n        >\r\n          {this.state.alert.body}\r\n        </CenteredAlert>\r\n\r\n        <AccountEditorModal\r\n          show={this.props.visible.edit}\r\n          onHide={this.props.hide.edit}\r\n          profile={this.props.list.find(\r\n            user => user.username === this.state.username\r\n          )}\r\n          onSuccess={this.props.callback.onModifySuccess}\r\n        />\r\n\r\n        <AccountAdditionModal\r\n          show={this.props.visible.add}\r\n          onHide={this.props.hide.add}\r\n          onSuccess={this.props.callback.onAddSuccess}\r\n        />\r\n\r\n        <ChangePasswordModal\r\n          username={this.state.username}\r\n          prev={this.props.list.find(\r\n            user => user.username === this.state.username\r\n          )}\r\n          show={this.props.visible.changePswd}\r\n          onHide={this.props.hide.changePswd}\r\n          onSuccess={this.props.callback.onChangePswdSuccess}\r\n        />\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccountsPanel;\r\n","import React, { Component } from \"react\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nclass FailureAlert extends Component {\r\n  render() {\r\n    return (\r\n      <Alert variant=\"danger\" className=\"m-4\">\r\n        <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\r\n        <p>\r\n          Check your connection and try again.\r\n          <br />\r\n          {this.props.message}.\r\n        </p>\r\n      </Alert>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FailureAlert;\r\n","import React, { Component } from \"react\";\r\nimport loading from \"../../img/loading.gif\";\r\nimport \"./style.css\";\r\nimport { Image } from \"react-bootstrap\";\r\n\r\nclass Loading extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"loading-holder \">\r\n        <div className=\"text-center pb-4\">\r\n          <Image src={loading} alt=\"loadign\" />\r\n          <h3 className=\"mt-4\">Loading</h3>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loading;\r\n","import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\n\r\nclass Unavailable extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"unavailabe-holder\">\r\n        <div className=\"text-center glow-blue\">\r\n          <div className=\"big-not-found\">\r\n            <i className=\"fas fa-unlock-alt\" />\r\n          </div>\r\n          <h3>This Feature Is Unavailable</h3>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Unavailable;\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport RoomStatus from \"../RoomStatus\";\r\nimport ForecastsWindow from \"../Forecasts\";\r\nimport AccountsPanel from \"../AccountsPanel\";\r\nimport FailureAlert from \"../FailureAlert\";\r\nimport Loading from \"../Loading\";\r\n\r\nimport * as userServices from \"../../services/user\";\r\nimport getErrorMessage from \"../../services/error\";\r\n\r\nimport \"./index.css\";\r\nimport Unavailable from \"../Unavailable\";\r\nimport * as iotServices from \"../../services/iot\";\r\n\r\nclass RenderWindow extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      // IoT Data\r\n      iotCurrent: null,\r\n      iotDatas: null,\r\n      timeUpdate: {\r\n        seconds: 0,\r\n        minutes: 0,\r\n        hours: 0\r\n      },\r\n\r\n      // Users\r\n      users: null,\r\n      filtered: null,\r\n      filter: {\r\n        username: \"\",\r\n        first_name: \"\",\r\n        last_name: \"\",\r\n        gender: \"all\",\r\n        address: \"\",\r\n        email: \"\",\r\n        phone_number: \"\",\r\n        role: \"all\",\r\n        locking_state: \"all\"\r\n      },\r\n\r\n      // Modal/Alert show checking\r\n      showEditor: false,\r\n      showAddition: false,\r\n      showPassword: false,\r\n      showAlert: false,\r\n\r\n      fetchIoTChartSuccess: null,\r\n      fetchIoTCurrentSuccess: null,\r\n      fetchUsersSuccess: null,\r\n      process: false,\r\n      response: null\r\n    };\r\n\r\n    // Fetch IoT Data callback\r\n    this.handleFetchIoTDatasSuccess = this.handleFetchIoTDatasSuccess.bind(\r\n      this\r\n    );\r\n    this.handleFetchIoTDatasFailed = this.handleFetchIoTDatasFailed.bind(this);\r\n    this.handleFetchIoTCurrentSuccess = this.handleFetchIoTCurrentSuccess.bind(\r\n      this\r\n    );\r\n    this.handleFetchIoTCurrentFailed = this.handleFetchIoTCurrentFailed.bind(\r\n      this\r\n    );\r\n\r\n    // List users callback\r\n    this.handleFetchUsersSuccess = this.handleFetchUsersSuccess.bind(this);\r\n    this.handleFailure = this.handleFetchUsersFailure.bind(this);\r\n\r\n    // Add user callback\r\n    this.handleAddUserSuccess = this.handleAddUserSuccess.bind(this);\r\n\r\n    // Lock/Unlock user callback\r\n    this.handleLockUserSuccess = this.handleLockUserSuccess.bind(this);\r\n    this.handleUnlockUserSuccess = this.handleUnlockUserSuccess.bind(this);\r\n    this.changeLockingState = this.changeLockingState.bind(this);\r\n\r\n    // Delete user callback\r\n    this.handleDeleteUserSuccess = this.handleDeleteUserSuccess.bind(this);\r\n\r\n    // Modify user callback\r\n    this.handleModifyUserSuccess = this.handleModifyUserSuccess.bind(this);\r\n\r\n    this.fetchUserList = this.fetchUserList.bind(this);\r\n\r\n    // Modal handler\r\n    this.showAccountEditorModal = this.showAccountEditorModal.bind(this);\r\n    this.hideAccountEditorModal = this.hideAccountEditorModal.bind(this);\r\n\r\n    this.hideAccountAdditionModal = this.hideAccountAdditionModal.bind(this);\r\n    this.showAccountAdditionModal = this.showAccountAdditionModal.bind(this);\r\n\r\n    this.showChangePasswordModal = this.showChangePasswordModal.bind(this);\r\n    this.hideChangePasswordModal = this.hideChangePasswordModal.bind(this);\r\n\r\n    // Sort & Filter\r\n    this.sortBy = this.sortBy.bind(this);\r\n    this.updateFilter = this.updateFilter.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchIoTDatas();\r\n    this.fetchIoTCurrent();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (!prevProps.isAdmin && prevState.fetchUsersSuccess === null) {\r\n      if (this.props.isAdmin === true) this.fetchUserList();\r\n      else if (this.props.isAdmin === false) return this.handleNoFetch();\r\n    }\r\n  }\r\n\r\n  // Fetch IoT Data\r\n  async fetchIoTDatas() {\r\n    await iotServices.chart(\r\n      this.handleFetchIoTDatasSuccess,\r\n      this.handleFetchIoTDatasFailed\r\n    );\r\n  }\r\n\r\n  // Fetch IoT Data callback function\r\n  handleFetchIoTDatasSuccess(data) {\r\n    this.setState({\r\n      iotDatas: data.result,\r\n      fetchIoTChartSuccess: true\r\n    });\r\n  }\r\n\r\n  handleFetchIoTDatasFailed(res) {\r\n    const response = getErrorMessage(res);\r\n\r\n    this.setState({\r\n      fetchIoTChartSuccess: false,\r\n      response\r\n    });\r\n  }\r\n\r\n  async fetchIoTCurrent() {\r\n    await iotServices.current(\r\n      this.handleFetchIoTCurrentSuccess,\r\n      this.handleFetchIoTCurrentFailed\r\n    );\r\n  }\r\n\r\n  // Fetch IoT Data callback function\r\n  handleFetchIoTCurrentSuccess(data) {\r\n    var current = new Date();\r\n\r\n    this.setState({\r\n      iotCurrent: data.result,\r\n      timeUpdate: {\r\n        seconds: current.getSeconds(),\r\n        minutes: current.getMinutes(),\r\n        hours: current.getHours()\r\n      },\r\n      fetchIoTCurrentSuccess: true\r\n    });\r\n  }\r\n\r\n  handleFetchIoTCurrentFailed(res) {\r\n    const response = getErrorMessage(res);\r\n\r\n    this.setState({\r\n      fetchIoTCurrentSuccess: false,\r\n      response\r\n    });\r\n  }\r\n\r\n  // Fetch user list\r\n  async fetchUserList() {\r\n    await userServices.list(this.handleFetchUsersSuccess, this.handleFailure);\r\n  }\r\n\r\n  handleNoFetch() {\r\n    this.setState({ filtered: [], fetchUsersSuccess: true });\r\n  }\r\n\r\n  // List users callback function\r\n  handleFetchUsersSuccess(res) {\r\n    let users = [];\r\n    for (var propName in res) {\r\n      if (propName.startsWith(\"user_\")) {\r\n        if (res[propName].username !== this.props.username)\r\n          users.push(res[propName]);\r\n      }\r\n    }\r\n    this.setState({ users, filtered: users, fetchUsersSuccess: true });\r\n  }\r\n\r\n  handleFetchUsersFailure(res) {\r\n    const response = getErrorMessage(res);\r\n\r\n    this.setState({ fetchUsersSuccess: false, response });\r\n  }\r\n\r\n  // Change password callback function\r\n  onChangePswdSuccess(req) {\r\n    const { username, password } = req;\r\n\r\n    const newList = this.state.users.map(user => {\r\n      if (user.username === username) {\r\n        user.password = password;\r\n      }\r\n\r\n      return user;\r\n    });\r\n\r\n    this.setState(prevState => ({\r\n      users: newList,\r\n      filtered: this.filter(newList, prevState.filter)\r\n    }));\r\n  }\r\n\r\n  // Delete user callback function\r\n  handleDeleteUserSuccess(res, req) {\r\n    this.setState(prevState => ({\r\n      users: prevState.users.filter(user => user.username !== req.username),\r\n      filtered: this.filter(\r\n        prevState.users.filter(user => user.username !== req.username),\r\n        prevState.filter\r\n      ),\r\n\r\n      showAlert: false,\r\n      process: false\r\n    }));\r\n  }\r\n\r\n  // Add user callback function\r\n  handleAddUserSuccess(res, req) {\r\n    const newUser = { ...req, locking_state: \"unlock\" };\r\n\r\n    let { users } = this.state;\r\n    users.push(newUser);\r\n\r\n    this.setState(prevState => ({\r\n      users,\r\n      filtered: this.filter(users, prevState.filter),\r\n      showAddition: false\r\n    }));\r\n  }\r\n\r\n  // Change Locking State callback function\r\n  handleLockUserSuccess(res, req) {\r\n    this.changeLockingState(req.username, \"lock\");\r\n  }\r\n\r\n  handleUnlockUserSuccess(res, req) {\r\n    this.changeLockingState(req.username, \"unlock\");\r\n  }\r\n\r\n  changeLockingState(username, state) {\r\n    const newList = this.state.users.map(user => {\r\n      if (user.username === username) user.locking_state = state;\r\n      return user;\r\n    });\r\n\r\n    this.setState(prevState => ({\r\n      users: newList,\r\n      filtered: this.filter(newList, prevState.filter),\r\n      showAlert: false,\r\n      process: false\r\n    }));\r\n  }\r\n\r\n  // Modify user callback function\r\n  handleModifyUserSuccess(res, req) {\r\n    const { username } = req;\r\n\r\n    let newUser = this.state.users.find(user => user.username === username);\r\n\r\n    for (var key in req)\r\n      if (key !== \"username\" && key !== \"token\") newUser[key] = req[key];\r\n\r\n    this.setState({ showEditor: false });\r\n\r\n    this.updateFilter();\r\n  }\r\n\r\n  // Modals\r\n  showChangePasswordModal() {\r\n    this.setState({ showPassword: true });\r\n  }\r\n\r\n  hideChangePasswordModal() {\r\n    this.setState({ showPassword: false });\r\n  }\r\n\r\n  showAccountEditorModal() {\r\n    this.setState({ showEditor: true });\r\n  }\r\n\r\n  hideAccountEditorModal() {\r\n    this.setState({ showEditor: false });\r\n  }\r\n\r\n  showAccountAdditionModal() {\r\n    this.setState({ showAddition: true });\r\n  }\r\n\r\n  hideAccountAdditionModal() {\r\n    this.setState({ showAddition: false });\r\n  }\r\n\r\n  showAlert() {\r\n    this.setState({ showAlert: true });\r\n  }\r\n\r\n  hideAlert() {\r\n    this.setState({ showAlert: false });\r\n  }\r\n\r\n  process() {\r\n    this.setState({ process: true });\r\n  }\r\n\r\n  // Filter user list\r\n  updateFilter(name, value) {\r\n    const { users, filter } = this.state;\r\n\r\n    if (name) filter[name] = value;\r\n\r\n    this.setState({ filtered: this.filter(users, filter), filter });\r\n  }\r\n\r\n  filter(users, filter) {\r\n    const filtered = users.filter(\r\n      user =>\r\n        user.username.startsWith(filter.username) &&\r\n        user.last_name.startsWith(filter.last_name) &&\r\n        user.first_name.startsWith(filter.first_name) &&\r\n        user.address.startsWith(filter.address) &&\r\n        user.email.startsWith(filter.email) &&\r\n        user.phone_number.startsWith(filter.phone_number) &&\r\n        (user.gender === filter.gender || filter.gender === \"all\") &&\r\n        (user.role === filter.role || filter.role === \"all\") &&\r\n        (user.locking_state === filter.locking_state ||\r\n          filter.locking_state === \"all\")\r\n    );\r\n\r\n    return filtered;\r\n  }\r\n\r\n  // Sort user list by property\r\n  sortBy(property, direct) {\r\n    let sorted;\r\n\r\n    if (direct === \"up\")\r\n      sorted = [...this.state.users].sort((a, b) =>\r\n        a[property] < b[property] ? 1 : b[property] < a[property] ? -1 : 0\r\n      );\r\n    else if (direct === \"down\")\r\n      sorted = [...this.state.users].sort((a, b) =>\r\n        a[property] > b[property] ? 1 : b[property] > a[property] ? -1 : 0\r\n      );\r\n\r\n    this.setState(prevState => ({\r\n      users: sorted,\r\n      filtered: this.filter(sorted, prevState.filter)\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const fetchSuccess =\r\n      this.props.fetchProfileSuccess &&\r\n      this.state.fetchUsersSuccess &&\r\n      this.state.fetchIoTChartSuccess &&\r\n      this.state.fetchIoTCurrentSuccess;\r\n\r\n    console.log(\r\n      `Fetch user profile: ${this.props.fetchProfileSuccess}\\n`,\r\n      `Fetch user list for admin: ${this.state.fetchUsersSuccess}\\n`,\r\n      `Fetch iot data for graph: ${this.state.fetchIoTChartSuccess}\\n`,\r\n      `Fetch real-time iot data: ${this.state.fetchIoTCurrentSuccess}`\r\n    );\r\n\r\n    if (fetchSuccess === true)\r\n      return (\r\n        <div className=\"window-body\">\r\n          <Switch>\r\n            <Route exact path=\"/dashboard\">\r\n              <RoomStatus\r\n                chart={this.state.iotDatas}\r\n                indexes={this.state.iotCurrent}\r\n                timeUpdate={this.state.timeUpdate}\r\n                handUpdateData={() => this.fetchIoTCurrent()}\r\n              ></RoomStatus>\r\n            </Route>\r\n            <Route path=\"/dashboard/accounts\">\r\n              {!this.props.isAdmin ? (\r\n                <Redirect to=\"/\" />\r\n              ) : (\r\n                <div className=\"p-4\">\r\n                  <AccountsPanel\r\n                    allow={this.props.isAdmin}\r\n                    list={this.state.filtered.filter(\r\n                      user => user.username !== this.props.username\r\n                    )}\r\n                    response={this.state.response}\r\n                    process={() => this.process()}\r\n                    isProcess={this.state.process}\r\n                    sort={this.sortBy}\r\n                    filter={this.updateFilter}\r\n                    default={this.state.filter}\r\n                    callback={{\r\n                      onAddSuccess: this.handleAddUserSuccess,\r\n                      onModifySuccess: this.handleModifyUserSuccess,\r\n                      onDeleteSuccess: this.handleDeleteUserSuccess,\r\n                      onLockSuccess: this.handleLockUserSuccess,\r\n                      onUnlockSuccess: this.handleUnlockUserSuccess,\r\n                      onFailure: this.handleFailure\r\n                    }}\r\n                    show={{\r\n                      edit: this.showAccountEditorModal,\r\n                      add: this.showAccountAdditionModal,\r\n                      changePswd: this.showChangePasswordModal,\r\n                      alert: () => this.showAlert()\r\n                    }}\r\n                    hide={{\r\n                      edit: this.hideAccountEditorModal,\r\n                      add: this.hideAccountAdditionModal,\r\n                      changePswd: this.hideChangePasswordModal,\r\n                      alert: () => this.hideAlert()\r\n                    }}\r\n                    visible={{\r\n                      edit: this.state.showEditor,\r\n                      add: this.state.showAddition,\r\n                      changePswd: this.state.showPassword,\r\n                      alert: this.state.showAlert\r\n                    }}\r\n                  />\r\n                </div>\r\n              )}\r\n            </Route>\r\n            <Route path=\"/dashboard/forecasts\">\r\n              <ForecastsWindow />\r\n            </Route>\r\n            <Route path=\"/dashboard/remotes\">\r\n              <Unavailable />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      );\r\n    else if (fetchSuccess === false) {\r\n      const message = this.props.response && this.state.response;\r\n      return <FailureAlert message={message} />;\r\n    } else return <Loading />;\r\n  }\r\n}\r\n\r\nexport default RenderWindow;\r\n","import { get } from \"./base\";\r\n\r\nexport const chart = (onSuccess, onFailure) => {\r\n  get(\"/GraphData\", onSuccess, onFailure);\r\n};\r\n\r\nexport const current = (onSuccess, onFailure) => {\r\n  get(\"/RealData\", onSuccess, onFailure);\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport Navbar from \"../Navbar\";\r\nimport Leftbar from \"../Leftbar\";\r\nimport RenderWindow from \"../RenderWindow\";\r\n\r\nimport * as userServices from \"../../services/user\";\r\nimport getErrorMessage from \"../../services/error\";\r\n\r\nimport \"./index.css\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLogin: null,\r\n      profile: null,\r\n      fetchSuccess: null,\r\n      failureResponse: null\r\n    };\r\n\r\n    this.handleFetchProfileSuccess = this.handleFetchProfileSuccess.bind(this);\r\n    this.handleFetchProfileFailure = this.handleFetchProfileFailure.bind(this);\r\n  }\r\n\r\n  handleFetchProfileFailure(res) {\r\n    let failureResponse = \"Time out\";\r\n\r\n    if (res) failureResponse = getErrorMessage(res.error_code);\r\n\r\n    this.setState({\r\n      fetchSuccess: false,\r\n      failureResponse\r\n    });\r\n  }\r\n\r\n  async fetchProfile() {\r\n    await userServices.view(\r\n      this.handleFetchProfileSuccess,\r\n      this.handleFetchProfileFailure\r\n    );\r\n  }\r\n\r\n  handleFetchProfileSuccess(res) {\r\n    const { error_code, ...profile } = res;\r\n\r\n    this.setState({ profile, fetchSuccess: true });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem(\"token\");\r\n    this.setState({ isLogin: token !== null });\r\n\r\n    this.fetchProfile();\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isLogin === false) return <Redirect to=\"/\" />;\r\n\r\n    const { profile } = this.state;\r\n\r\n    const isAdmin = profile ? profile.role === \"admin\" : null;\r\n\r\n    const username = profile ? profile.username : null;\r\n\r\n    return (\r\n      <div className=\"background-light\">\r\n        <div className=\"menu-horizontal\">\r\n          <Leftbar isAdmin={isAdmin} />\r\n        </div>\r\n        <div className=\"nav-fixed-top\">\r\n          <Navbar profile={this.state.profile}></Navbar>\r\n        </div>\r\n        <div className=\"dashboard-content\">\r\n          <RenderWindow\r\n            fetchProfileSuccess={this.state.fetchSuccess}\r\n            response={this.state.failureResponse}\r\n            username={username}\r\n            isAdmin={isAdmin}\r\n          ></RenderWindow>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport HomeBanner from \"./components/HomeBanner/index\";\r\nimport Header from \"./components/Header\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <Switch>\r\n      <Route exact path=\"/\">\r\n        <HomeBanner />\r\n      </Route>\r\n      <Route path=\"/login\">\r\n        <HomeBanner />\r\n      </Route>\r\n      <Route path=\"/dashboard\">\r\n        <Header />\r\n      </Route>\r\n    </Switch>\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.5251cd55.png\";"],"sourceRoot":""}